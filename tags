!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	Development	//
CFRunLoopRunInMode	Example/Pods/Kiwi/Classes/Core/KWProbePoller.m	/^		CFRunLoopRunInMode(kCFRunLoopDefaultMode, _delayInterval, false);$/;"	p	interface:KWTimeout
CLPAppDelegate	Example/Clappr/CLPAppDelegate.h	/^@interface CLPAppDelegate : UIResponder <UIApplicationDelegate>$/;"	i	interface:
CLPAppDelegate	Example/Clappr/CLPAppDelegate.m	/^@implementation CLPAppDelegate$/;"	I	interface:
CLPViewController	Example/Clappr/CLPViewController.h	/^@interface CLPViewController : UIViewController$/;"	i	interface:
CLPViewController	Example/Clappr/CLPViewController.m	/^@implementation CLPViewController$/;"	I	interface:
CLPViewController	Example/Clappr/CLPViewController.m	/^@interface CLPViewController ()$/;"	i	interface:
COCOAPODS_POD_AVAILABLE_Clappr	Example/Pods/Pods-Clappr-environment.h	/^#define COCOAPODS_POD_AVAILABLE_Clappr$/;"	M	interface:
COCOAPODS_POD_AVAILABLE_Clappr	Example/Pods/Pods-Tests-environment.h	/^#define COCOAPODS_POD_AVAILABLE_Clappr$/;"	M	interface:
COCOAPODS_POD_AVAILABLE_Kiwi	Example/Pods/Pods-Tests-environment.h	/^#define COCOAPODS_POD_AVAILABLE_Kiwi$/;"	M	interface:
COCOAPODS_VERSION_MAJOR_Clappr	Example/Pods/Pods-Clappr-environment.h	/^#define COCOAPODS_VERSION_MAJOR_Clappr 0$/;"	M	interface:
COCOAPODS_VERSION_MAJOR_Clappr	Example/Pods/Pods-Tests-environment.h	/^#define COCOAPODS_VERSION_MAJOR_Clappr 0$/;"	M	interface:
COCOAPODS_VERSION_MAJOR_Kiwi	Example/Pods/Pods-Tests-environment.h	/^#define COCOAPODS_VERSION_MAJOR_Kiwi 2$/;"	M	interface:
COCOAPODS_VERSION_MINOR_Clappr	Example/Pods/Pods-Clappr-environment.h	/^#define COCOAPODS_VERSION_MINOR_Clappr 1$/;"	M	interface:
COCOAPODS_VERSION_MINOR_Clappr	Example/Pods/Pods-Tests-environment.h	/^#define COCOAPODS_VERSION_MINOR_Clappr 1$/;"	M	interface:
COCOAPODS_VERSION_MINOR_Kiwi	Example/Pods/Pods-Tests-environment.h	/^#define COCOAPODS_VERSION_MINOR_Kiwi 3$/;"	M	interface:
COCOAPODS_VERSION_PATCH_Clappr	Example/Pods/Pods-Clappr-environment.h	/^#define COCOAPODS_VERSION_PATCH_Clappr 0$/;"	M	interface:
COCOAPODS_VERSION_PATCH_Clappr	Example/Pods/Pods-Tests-environment.h	/^#define COCOAPODS_VERSION_PATCH_Clappr 0$/;"	M	interface:
COCOAPODS_VERSION_PATCH_Kiwi	Example/Pods/Pods-Tests-environment.h	/^#define COCOAPODS_VERSION_PATCH_Kiwi 0$/;"	M	interface:
CONFIG_END	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define CONFIG_END \\$/;"	M	interface:
CONFIG_END	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define CONFIG_END \\$/;"	M	interface:
CONFIG_END	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define CONFIG_END \\$/;"	M	interface:
CONFIG_START	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define CONFIG_START \\$/;"	M	interface:
CONFIG_START	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define CONFIG_START \\$/;"	M	interface:
CONFIG_START	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define CONFIG_START \\$/;"	M	interface:
ChangeStubValueAfterTimesKey	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^            id times = (anInvocationCapturer.userInfo)[ChangeStubValueAfterTimesKey];$/;"	p	interface:KWMock
CountKey	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^                                                      CountKey: @(aCount)};$/;"	p	interface:KWHaveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (id)receive DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (id)receiveAndReturn:(id)aValue DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (id)receiveAndReturn:(id)aValue withCount:(NSUInteger)aCount DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (id)receiveAndReturn:(id)aValue withCountAtLeast:(NSUInteger)aCount DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (id)receiveAndReturn:(id)aValue withCountAtMost:(NSUInteger)aCount DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (id)receiveWithCount:(NSUInteger)aCount DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (id)receiveWithCountAtLeast:(NSUInteger)aCount DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (id)receiveWithCountAtMost:(NSUInteger)aCount DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^- (void)shouldBeNil DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSObject
DEPRECATED_ATTRIBUTE	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^- (void)shouldNotBeNil DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSObject
DEPRECATED_ATTRIBUTE	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^- (id)stub DEPRECATED_ATTRIBUTE;$/;"	m	protocol:KWMessageSpying
DEPRECATED_ATTRIBUTE	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (id)receive DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (id)receiveAndReturn:(id)aValue DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (id)receiveAndReturn:(id)aValue withCount:(NSUInteger)aCount DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (id)receiveAndReturn:(id)aValue withCountAtLeast:(NSUInteger)aCount DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (id)receiveAndReturn:(id)aValue withCountAtMost:(NSUInteger)aCount DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (id)receiveWithCount:(NSUInteger)aCount DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (id)receiveWithCountAtLeast:(NSUInteger)aCount DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (id)receiveWithCountAtMost:(NSUInteger)aCount DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^- (void)shouldBeNil DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSObject
DEPRECATED_ATTRIBUTE	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^- (void)shouldNotBeNil DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSObject
DEPRECATED_ATTRIBUTE	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^- (id)stub DEPRECATED_ATTRIBUTE;$/;"	m	protocol:KWMessageSpying
DEPRECATED_ATTRIBUTE	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^- (void)shouldBeNil DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSObject
DEPRECATED_ATTRIBUTE	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^- (void)shouldNotBeNil DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSObject
DEPRECATED_ATTRIBUTE	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (id)receive DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (id)receiveAndReturn:(id)aValue DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (id)receiveAndReturn:(id)aValue withCount:(NSUInteger)aCount DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (id)receiveAndReturn:(id)aValue withCountAtLeast:(NSUInteger)aCount DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (id)receiveAndReturn:(id)aValue withCountAtMost:(NSUInteger)aCount DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (id)receiveWithCount:(NSUInteger)aCount DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (id)receiveWithCountAtLeast:(NSUInteger)aCount DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (id)receiveWithCountAtMost:(NSUInteger)aCount DEPRECATED_ATTRIBUTE;$/;"	p	interface:KWReceiveMatcher
DEPRECATED_ATTRIBUTE	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^- (id)stub DEPRECATED_ATTRIBUTE;$/;"	m	protocol:KWMessageSpying
ExpectOrStubTagKey	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    NSString *tag = (anInvocationCapturer.userInfo)[ExpectOrStubTagKey];$/;"	p	interface:KWMock
ExpectTag	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    NSDictionary *userInfo = @{ExpectOrStubTagKey: ExpectTag};$/;"	p	interface:KWMock
INVOKE	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^    INVOKE(self.afterAllSpecsBlock);$/;"	p	interface:KWSuiteConfigurationBase
INVOKE	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^    INVOKE(self.afterEachSpecBlock);$/;"	p	interface:KWSuiteConfigurationBase
INVOKE	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^    INVOKE(self.beforeAllSpecsBlock);$/;"	p	interface:KWSuiteConfigurationBase
INVOKE	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^    INVOKE(self.beforeEachSpecBlock);$/;"	p	interface:KWSuiteConfigurationBase
INVOKE	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^#define INVOKE(block) if((block)) { (block)(); }$/;"	M	interface:
KWAfterAllNode	Example/Pods/BuildHeaders/Kiwi/KWAfterAllNode.h	/^@interface KWAfterAllNode : KWBlockNode<KWExampleNode>$/;"	i	interface:
KWAfterAllNode	Example/Pods/Headers/Kiwi/KWAfterAllNode.h	/^@interface KWAfterAllNode : KWBlockNode<KWExampleNode>$/;"	i	interface:
KWAfterAllNode	Example/Pods/Kiwi/Classes/Nodes/KWAfterAllNode.h	/^@interface KWAfterAllNode : KWBlockNode<KWExampleNode>$/;"	i	interface:
KWAfterAllNode	Example/Pods/Kiwi/Classes/Nodes/KWAfterAllNode.m	/^@implementation KWAfterAllNode$/;"	I	interface:
KWAfterEachNode	Example/Pods/BuildHeaders/Kiwi/KWAfterEachNode.h	/^@interface KWAfterEachNode : KWBlockNode<KWExampleNode>$/;"	i	interface:
KWAfterEachNode	Example/Pods/Headers/Kiwi/KWAfterEachNode.h	/^@interface KWAfterEachNode : KWBlockNode<KWExampleNode>$/;"	i	interface:
KWAfterEachNode	Example/Pods/Kiwi/Classes/Nodes/KWAfterEachNode.h	/^@interface KWAfterEachNode : KWBlockNode<KWExampleNode>$/;"	i	interface:
KWAfterEachNode	Example/Pods/Kiwi/Classes/Nodes/KWAfterEachNode.m	/^@implementation KWAfterEachNode$/;"	I	interface:
KWAny	Example/Pods/BuildHeaders/Kiwi/KWAny.h	/^@interface KWAny : NSObject$/;"	i	interface:
KWAny	Example/Pods/Headers/Kiwi/KWAny.h	/^@interface KWAny : NSObject$/;"	i	interface:
KWAny	Example/Pods/Kiwi/Classes/Core/KWAny.h	/^@interface KWAny : NSObject$/;"	i	interface:
KWAny	Example/Pods/Kiwi/Classes/Core/KWAny.m	/^@implementation KWAny$/;"	I	interface:
KWAssociateMessageSpy	Example/Pods/BuildHeaders/Kiwi/KWIntercept.h	/^void KWAssociateMessageSpy(id anObject, id aSpy, KWMessagePattern *aMessagePattern);$/;"	f	interface:
KWAssociateMessageSpy	Example/Pods/Headers/Kiwi/KWIntercept.h	/^void KWAssociateMessageSpy(id anObject, id aSpy, KWMessagePattern *aMessagePattern);$/;"	f	interface:
KWAssociateMessageSpy	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.h	/^void KWAssociateMessageSpy(id anObject, id aSpy, KWMessagePattern *aMessagePattern);$/;"	f	interface:
KWAssociateObjectStub	Example/Pods/BuildHeaders/Kiwi/KWIntercept.h	/^void KWAssociateObjectStub(id anObject, KWStub *aStub, BOOL overrideExisting);$/;"	f	interface:
KWAssociateObjectStub	Example/Pods/Headers/Kiwi/KWIntercept.h	/^void KWAssociateObjectStub(id anObject, KWStub *aStub, BOOL overrideExisting);$/;"	f	interface:
KWAssociateObjectStub	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.h	/^void KWAssociateObjectStub(id anObject, KWStub *aStub, BOOL overrideExisting);$/;"	f	interface:
KWAsyncMatcherProbe	Example/Pods/Kiwi/Classes/Verifiers/KWAsyncVerifier.m	/^@implementation KWAsyncMatcherProbe$/;"	I	implementation:
KWAsyncVerifier	Example/Pods/BuildHeaders/Kiwi/KWAsyncVerifier.h	/^@interface KWAsyncVerifier : KWMatchVerifier$/;"	i	interface:
KWAsyncVerifier	Example/Pods/Headers/Kiwi/KWAsyncVerifier.h	/^@interface KWAsyncVerifier : KWMatchVerifier$/;"	i	interface:
KWAsyncVerifier	Example/Pods/Kiwi/Classes/Verifiers/KWAsyncVerifier.h	/^@interface KWAsyncVerifier : KWMatchVerifier$/;"	i	interface:
KWAsyncVerifier	Example/Pods/Kiwi/Classes/Verifiers/KWAsyncVerifier.m	/^@implementation KWAsyncVerifier$/;"	I	interface:
KWBeBetweenMatcher	Example/Pods/BuildHeaders/Kiwi/KWBeBetweenMatcher.h	/^@interface KWBeBetweenMatcher : KWMatcher$/;"	i	interface:
KWBeBetweenMatcher	Example/Pods/Headers/Kiwi/KWBeBetweenMatcher.h	/^@interface KWBeBetweenMatcher : KWMatcher$/;"	i	interface:
KWBeBetweenMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeBetweenMatcher.h	/^@interface KWBeBetweenMatcher : KWMatcher$/;"	i	interface:
KWBeBetweenMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeBetweenMatcher.m	/^@interface KWBeBetweenMatcher()$/;"	i	interface:
KWBeEmptyMatcher	Example/Pods/BuildHeaders/Kiwi/KWBeEmptyMatcher.h	/^@interface KWBeEmptyMatcher : KWMatcher$/;"	i	interface:
KWBeEmptyMatcher	Example/Pods/Headers/Kiwi/KWBeEmptyMatcher.h	/^@interface KWBeEmptyMatcher : KWMatcher$/;"	i	interface:
KWBeEmptyMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeEmptyMatcher.h	/^@interface KWBeEmptyMatcher : KWMatcher$/;"	i	interface:
KWBeEmptyMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeEmptyMatcher.m	/^@implementation KWBeEmptyMatcher$/;"	I	interface:
KWBeEmptyMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeEmptyMatcher.m	/^@interface KWBeEmptyMatcher()$/;"	i	interface:
KWBeIdenticalToMatcher	Example/Pods/BuildHeaders/Kiwi/KWBeIdenticalToMatcher.h	/^@interface KWBeIdenticalToMatcher : KWMatcher$/;"	i	interface:
KWBeIdenticalToMatcher	Example/Pods/Headers/Kiwi/KWBeIdenticalToMatcher.h	/^@interface KWBeIdenticalToMatcher : KWMatcher$/;"	i	interface:
KWBeIdenticalToMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeIdenticalToMatcher.h	/^@interface KWBeIdenticalToMatcher : KWMatcher$/;"	i	interface:
KWBeIdenticalToMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeIdenticalToMatcher.m	/^@implementation KWBeIdenticalToMatcher$/;"	I	interface:
KWBeIdenticalToMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeIdenticalToMatcher.m	/^@interface KWBeIdenticalToMatcher()$/;"	i	interface:
KWBeKindOfClassMatcher	Example/Pods/BuildHeaders/Kiwi/KWBeKindOfClassMatcher.h	/^@interface KWBeKindOfClassMatcher : KWMatcher$/;"	i	interface:
KWBeKindOfClassMatcher	Example/Pods/Headers/Kiwi/KWBeKindOfClassMatcher.h	/^@interface KWBeKindOfClassMatcher : KWMatcher$/;"	i	interface:
KWBeKindOfClassMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeKindOfClassMatcher.h	/^@interface KWBeKindOfClassMatcher : KWMatcher$/;"	i	interface:
KWBeKindOfClassMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeKindOfClassMatcher.m	/^@interface KWBeKindOfClassMatcher()$/;"	i	interface:
KWBeMemberOfClassMatcher	Example/Pods/BuildHeaders/Kiwi/KWBeMemberOfClassMatcher.h	/^@interface KWBeMemberOfClassMatcher : KWMatcher$/;"	i	interface:
KWBeMemberOfClassMatcher	Example/Pods/Headers/Kiwi/KWBeMemberOfClassMatcher.h	/^@interface KWBeMemberOfClassMatcher : KWMatcher$/;"	i	interface:
KWBeMemberOfClassMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeMemberOfClassMatcher.h	/^@interface KWBeMemberOfClassMatcher : KWMatcher$/;"	i	interface:
KWBeMemberOfClassMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeMemberOfClassMatcher.m	/^@interface KWBeMemberOfClassMatcher()$/;"	i	interface:
KWBeSubclassOfClassMatcher	Example/Pods/BuildHeaders/Kiwi/KWBeSubclassOfClassMatcher.h	/^@interface KWBeSubclassOfClassMatcher : KWMatcher$/;"	i	interface:
KWBeSubclassOfClassMatcher	Example/Pods/Headers/Kiwi/KWBeSubclassOfClassMatcher.h	/^@interface KWBeSubclassOfClassMatcher : KWMatcher$/;"	i	interface:
KWBeSubclassOfClassMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeSubclassOfClassMatcher.h	/^@interface KWBeSubclassOfClassMatcher : KWMatcher$/;"	i	interface:
KWBeSubclassOfClassMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeSubclassOfClassMatcher.m	/^@implementation KWBeSubclassOfClassMatcher$/;"	I	interface:
KWBeSubclassOfClassMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeSubclassOfClassMatcher.m	/^@interface KWBeSubclassOfClassMatcher()$/;"	i	interface:
KWBeTrueMatcher	Example/Pods/BuildHeaders/Kiwi/KWBeTrueMatcher.h	/^@interface KWBeTrueMatcher : KWMatcher$/;"	i	interface:
KWBeTrueMatcher	Example/Pods/Headers/Kiwi/KWBeTrueMatcher.h	/^@interface KWBeTrueMatcher : KWMatcher$/;"	i	interface:
KWBeTrueMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeTrueMatcher.h	/^@interface KWBeTrueMatcher : KWMatcher$/;"	i	interface:
KWBeTrueMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeTrueMatcher.m	/^@interface KWBeTrueMatcher()$/;"	i	interface:
KWBeWithinMatcher	Example/Pods/BuildHeaders/Kiwi/KWBeWithinMatcher.h	/^@interface KWBeWithinMatcher : KWMatcher$/;"	i	interface:
KWBeWithinMatcher	Example/Pods/Headers/Kiwi/KWBeWithinMatcher.h	/^@interface KWBeWithinMatcher : KWMatcher$/;"	i	interface:
KWBeWithinMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.h	/^@interface KWBeWithinMatcher : KWMatcher$/;"	i	interface:
KWBeWithinMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^@interface KWBeWithinMatcher()$/;"	i	interface:
KWBeZeroMatcher	Example/Pods/BuildHeaders/Kiwi/KWBeZeroMatcher.h	/^@interface KWBeZeroMatcher : KWMatcher$/;"	i	interface:
KWBeZeroMatcher	Example/Pods/Headers/Kiwi/KWBeZeroMatcher.h	/^@interface KWBeZeroMatcher : KWMatcher$/;"	i	interface:
KWBeZeroMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeZeroMatcher.h	/^@interface KWBeZeroMatcher : KWMatcher$/;"	i	interface:
KWBeZeroMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBeZeroMatcher.m	/^@implementation KWBeZeroMatcher$/;"	I	interface:
KWBeforeAllNode	Example/Pods/BuildHeaders/Kiwi/KWBeforeAllNode.h	/^@interface KWBeforeAllNode : KWBlockNode<KWExampleNode>$/;"	i	interface:
KWBeforeAllNode	Example/Pods/Headers/Kiwi/KWBeforeAllNode.h	/^@interface KWBeforeAllNode : KWBlockNode<KWExampleNode>$/;"	i	interface:
KWBeforeAllNode	Example/Pods/Kiwi/Classes/Nodes/KWBeforeAllNode.h	/^@interface KWBeforeAllNode : KWBlockNode<KWExampleNode>$/;"	i	interface:
KWBeforeAllNode	Example/Pods/Kiwi/Classes/Nodes/KWBeforeAllNode.m	/^@implementation KWBeforeAllNode$/;"	I	interface:
KWBeforeEachNode	Example/Pods/BuildHeaders/Kiwi/KWBeforeEachNode.h	/^@interface KWBeforeEachNode : KWBlockNode<KWExampleNode>$/;"	i	interface:
KWBeforeEachNode	Example/Pods/Headers/Kiwi/KWBeforeEachNode.h	/^@interface KWBeforeEachNode : KWBlockNode<KWExampleNode>$/;"	i	interface:
KWBeforeEachNode	Example/Pods/Kiwi/Classes/Nodes/KWBeforeEachNode.h	/^@interface KWBeforeEachNode : KWBlockNode<KWExampleNode>$/;"	i	interface:
KWBeforeEachNode	Example/Pods/Kiwi/Classes/Nodes/KWBeforeEachNode.m	/^@implementation KWBeforeEachNode$/;"	I	interface:
KWBlock	Example/Pods/BuildHeaders/Kiwi/KWBlock.h	/^@interface KWBlock : NSObject$/;"	i	interface:
KWBlock	Example/Pods/Headers/Kiwi/KWBlock.h	/^@interface KWBlock : NSObject$/;"	i	interface:
KWBlock	Example/Pods/Kiwi/Classes/Core/KWBlock.h	/^@interface KWBlock : NSObject$/;"	i	interface:
KWBlock	Example/Pods/Kiwi/Classes/Core/KWBlock.m	/^@implementation KWBlock$/;"	I	interface:
KWBlock	Example/Pods/Kiwi/Classes/Core/KWBlock.m	/^@interface KWBlock()$/;"	i	interface:
KWBlockNode	Example/Pods/BuildHeaders/Kiwi/KWBlockNode.h	/^@interface KWBlockNode : NSObject$/;"	i	interface:
KWBlockNode	Example/Pods/Headers/Kiwi/KWBlockNode.h	/^@interface KWBlockNode : NSObject$/;"	i	interface:
KWBlockNode	Example/Pods/Kiwi/Classes/Nodes/KWBlockNode.h	/^@interface KWBlockNode : NSObject$/;"	i	interface:
KWBlockNode	Example/Pods/Kiwi/Classes/Nodes/KWBlockNode.m	/^@implementation KWBlockNode$/;"	I	interface:
KWBlockRaiseMatcher	Example/Pods/BuildHeaders/Kiwi/KWBlockRaiseMatcher.h	/^@interface KWBlockRaiseMatcher : KWMatcher$/;"	i	interface:
KWBlockRaiseMatcher	Example/Pods/Headers/Kiwi/KWBlockRaiseMatcher.h	/^@interface KWBlockRaiseMatcher : KWMatcher$/;"	i	interface:
KWBlockRaiseMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.h	/^@interface KWBlockRaiseMatcher : KWMatcher$/;"	i	interface:
KWBlockRaiseMatcher	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^@interface KWBlockRaiseMatcher()$/;"	i	interface:
KWCallSite	Example/Pods/BuildHeaders/Kiwi/KWCallSite.h	/^@interface KWCallSite : NSObject$/;"	i	interface:
KWCallSite	Example/Pods/Headers/Kiwi/KWCallSite.h	/^@interface KWCallSite : NSObject$/;"	i	interface:
KWCallSite	Example/Pods/Kiwi/Classes/Core/KWCallSite.h	/^@interface KWCallSite : NSObject$/;"	i	interface:
KWCallSite	Example/Pods/Kiwi/Classes/Core/KWCallSite.m	/^@implementation KWCallSite$/;"	I	interface:
KWCaptureSpy	Example/Pods/BuildHeaders/Kiwi/KWCaptureSpy.h	/^@interface KWCaptureSpy : NSObject<KWMessageSpying>$/;"	i	interface:
KWCaptureSpy	Example/Pods/Headers/Kiwi/KWCaptureSpy.h	/^@interface KWCaptureSpy : NSObject<KWMessageSpying>$/;"	i	interface:
KWCaptureSpy	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.h	/^@interface KWCaptureSpy : NSObject<KWMessageSpying>$/;"	i	interface:
KWCaptureSpy	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.m	/^@interface KWCaptureSpy()$/;"	i	interface:
KWChangeMatcher	Example/Pods/BuildHeaders/Kiwi/KWChangeMatcher.h	/^@interface KWChangeMatcher : KWMatcher$/;"	i	interface:
KWChangeMatcher	Example/Pods/Headers/Kiwi/KWChangeMatcher.h	/^@interface KWChangeMatcher : KWMatcher$/;"	i	interface:
KWChangeMatcher	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.h	/^@interface KWChangeMatcher : KWMatcher$/;"	i	interface:
KWChangeMatcher	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^@interface KWChangeMatcher ()$/;"	i	interface:
KWChangeMatcherCountBlock	Example/Pods/BuildHeaders/Kiwi/KWChangeMatcher.h	/^typedef NSInteger (^KWChangeMatcherCountBlock)();$/;"	t	interface:
KWChangeMatcherCountBlock	Example/Pods/Headers/Kiwi/KWChangeMatcher.h	/^typedef NSInteger (^KWChangeMatcherCountBlock)();$/;"	t	interface:
KWChangeMatcherCountBlock	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.h	/^typedef NSInteger (^KWChangeMatcherCountBlock)();$/;"	t	interface:
KWClassIsInterceptClass	Example/Pods/BuildHeaders/Kiwi/KWIntercept.h	/^BOOL KWClassIsInterceptClass(Class aClass);$/;"	f	interface:
KWClassIsInterceptClass	Example/Pods/Headers/Kiwi/KWIntercept.h	/^BOOL KWClassIsInterceptClass(Class aClass);$/;"	f	interface:
KWClassIsInterceptClass	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.h	/^BOOL KWClassIsInterceptClass(Class aClass);$/;"	f	interface:
KWClearAllMessageSpies	Example/Pods/BuildHeaders/Kiwi/KWIntercept.h	/^void KWClearAllMessageSpies(void);$/;"	f	interface:
KWClearAllMessageSpies	Example/Pods/Headers/Kiwi/KWIntercept.h	/^void KWClearAllMessageSpies(void);$/;"	f	interface:
KWClearAllMessageSpies	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.h	/^void KWClearAllMessageSpies(void);$/;"	f	interface:
KWClearAllObjectStubs	Example/Pods/BuildHeaders/Kiwi/KWIntercept.h	/^void KWClearAllObjectStubs(void);$/;"	f	interface:
KWClearAllObjectStubs	Example/Pods/Headers/Kiwi/KWIntercept.h	/^void KWClearAllObjectStubs(void);$/;"	f	interface:
KWClearAllObjectStubs	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.h	/^void KWClearAllObjectStubs(void);$/;"	f	interface:
KWClearAllObjectStubs	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^void KWClearAllObjectStubs(void);$/;"	f	interface:
KWClearMessageSpies	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^void KWClearMessageSpies(id anObject);$/;"	f	interface:
KWClearObjectSpy	Example/Pods/BuildHeaders/Kiwi/KWIntercept.h	/^void KWClearObjectSpy(id anObject, id aSpy, KWMessagePattern *aMessagePattern);$/;"	f	interface:
KWClearObjectSpy	Example/Pods/Headers/Kiwi/KWIntercept.h	/^void KWClearObjectSpy(id anObject, id aSpy, KWMessagePattern *aMessagePattern);$/;"	f	interface:
KWClearObjectSpy	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.h	/^void KWClearObjectSpy(id anObject, id aSpy, KWMessagePattern *aMessagePattern);$/;"	f	interface:
KWClearObjectStubs	Example/Pods/BuildHeaders/Kiwi/KWIntercept.h	/^void KWClearObjectStubs(id anObject);$/;"	f	interface:
KWClearObjectStubs	Example/Pods/Headers/Kiwi/KWIntercept.h	/^void KWClearObjectStubs(id anObject);$/;"	f	interface:
KWClearObjectStubs	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.h	/^void KWClearObjectStubs(id anObject);$/;"	f	interface:
KWClearObjectStubs	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^void KWClearObjectStubs(id anObject);$/;"	f	interface:
KWClearStubsAndSpies	Example/Pods/BuildHeaders/Kiwi/KWIntercept.h	/^void KWClearStubsAndSpies(void);$/;"	f	interface:
KWClearStubsAndSpies	Example/Pods/Headers/Kiwi/KWIntercept.h	/^void KWClearStubsAndSpies(void);$/;"	f	interface:
KWClearStubsAndSpies	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^        KWClearStubsAndSpies();$/;"	p	interface:KWExample
KWClearStubsAndSpies	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.h	/^void KWClearStubsAndSpies(void);$/;"	f	interface:
KWConformToProtocolMatcher	Example/Pods/BuildHeaders/Kiwi/KWConformToProtocolMatcher.h	/^@interface KWConformToProtocolMatcher : KWMatcher$/;"	i	interface:
KWConformToProtocolMatcher	Example/Pods/Headers/Kiwi/KWConformToProtocolMatcher.h	/^@interface KWConformToProtocolMatcher : KWMatcher$/;"	i	interface:
KWConformToProtocolMatcher	Example/Pods/Kiwi/Classes/Matchers/KWConformToProtocolMatcher.h	/^@interface KWConformToProtocolMatcher : KWMatcher$/;"	i	interface:
KWConformToProtocolMatcher	Example/Pods/Kiwi/Classes/Matchers/KWConformToProtocolMatcher.m	/^@interface KWConformToProtocolMatcher()$/;"	i	interface:
KWContainMatcher	Example/Pods/BuildHeaders/Kiwi/KWContainMatcher.h	/^@interface KWContainMatcher : KWMatcher$/;"	i	interface:
KWContainMatcher	Example/Pods/Headers/Kiwi/KWContainMatcher.h	/^@interface KWContainMatcher : KWMatcher$/;"	i	interface:
KWContainMatcher	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.h	/^@interface KWContainMatcher : KWMatcher$/;"	i	interface:
KWContainMatcher	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^@interface KWContainMatcher()$/;"	i	interface:
KWContainStringMatcher	Example/Pods/BuildHeaders/Kiwi/KWContainStringMatcher.h	/^@interface KWContainStringMatcher : KWMatcher$/;"	i	interface:
KWContainStringMatcher	Example/Pods/Headers/Kiwi/KWContainStringMatcher.h	/^@interface KWContainStringMatcher : KWMatcher$/;"	i	interface:
KWContainStringMatcher	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.h	/^@interface KWContainStringMatcher : KWMatcher$/;"	i	interface:
KWContainStringMatcher	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.m	/^@interface KWContainStringMatcher ()$/;"	i	interface:
KWContainmentCountMatcherTerminals	Example/Pods/BuildHeaders/Kiwi/KWHaveMatcher.h	/^@protocol KWContainmentCountMatcherTerminals$/;"	p	protocol:KWContainmentCountMatcherTerminals
KWContainmentCountMatcherTerminals	Example/Pods/Headers/Kiwi/KWHaveMatcher.h	/^@protocol KWContainmentCountMatcherTerminals$/;"	p	protocol:KWContainmentCountMatcherTerminals
KWContainmentCountMatcherTerminals	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.h	/^@protocol KWContainmentCountMatcherTerminals$/;"	p	protocol:KWContainmentCountMatcherTerminals
KWContextNode	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^@interface KWContextNode : NSObject<KWExampleNode>$/;"	i	interface:
KWContextNode	Example/Pods/Headers/Kiwi/KWContextNode.h	/^@interface KWContextNode : NSObject<KWExampleNode>$/;"	i	interface:
KWContextNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^@interface KWContextNode : NSObject<KWExampleNode>$/;"	i	interface:
KWContextNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^@interface KWContextNode()$/;"	i	interface:
KWCountType	Example/Pods/BuildHeaders/Kiwi/KWCountType.h	/^typedef NSUInteger KWCountType;$/;"	t	interface:
KWCountType	Example/Pods/Headers/Kiwi/KWCountType.h	/^typedef NSUInteger KWCountType;$/;"	t	interface:
KWCountType	Example/Pods/Kiwi/Classes/Core/KWCountType.h	/^typedef NSUInteger KWCountType;$/;"	t	interface:
KWCountTypeAtLeast	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    self.countType = KWCountTypeAtLeast;$/;"	p	interface:KWHaveMatcher
KWCountTypeAtMost	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    self.countType = KWCountTypeAtMost;$/;"	p	interface:KWHaveMatcher
KWCountTypeExact	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    self.countType = KWCountTypeExact;$/;"	p	interface:KWHaveMatcher
KWDefineMatchers	Example/Pods/BuildHeaders/Kiwi/KWMatchers.h	/^void KWDefineMatchers(NSString *selectorString, KWMatchersBuildingBlock block);$/;"	f	interface:
KWDefineMatchers	Example/Pods/Headers/Kiwi/KWMatchers.h	/^void KWDefineMatchers(NSString *selectorString, KWMatchersBuildingBlock block);$/;"	f	interface:
KWDefineMatchers	Example/Pods/Kiwi/Classes/Core/KWMatchers.h	/^void KWDefineMatchers(NSString *selectorString, KWMatchersBuildingBlock block);$/;"	f	interface:
KWDefineMatchers	Example/Pods/Kiwi/Classes/Core/KWMatchers.m	/^void KWDefineMatchers(NSString *selectorString, KWMatchersBuildingBlock block)$/;"	f	implementation:
KWDeviceInfo	Example/Pods/BuildHeaders/Kiwi/KWDeviceInfo.h	/^@interface KWDeviceInfo : NSObject$/;"	i	interface:
KWDeviceInfo	Example/Pods/Headers/Kiwi/KWDeviceInfo.h	/^@interface KWDeviceInfo : NSObject$/;"	i	interface:
KWDeviceInfo	Example/Pods/Kiwi/Classes/Core/KWDeviceInfo.h	/^@interface KWDeviceInfo : NSObject$/;"	i	interface:
KWDeviceInfo	Example/Pods/Kiwi/Classes/Core/KWDeviceInfo.m	/^@implementation KWDeviceInfo$/;"	I	interface:
KWEncodingForDefaultMethod	Example/Pods/BuildHeaders/Kiwi/KWStringUtilities.h	/^NSString *KWEncodingForDefaultMethod(void);$/;"	f	interface:
KWEncodingForDefaultMethod	Example/Pods/Headers/Kiwi/KWStringUtilities.h	/^NSString *KWEncodingForDefaultMethod(void);$/;"	f	interface:
KWEncodingForDefaultMethod	Example/Pods/Kiwi/Classes/Core/KWStringUtilities.h	/^NSString *KWEncodingForDefaultMethod(void);$/;"	f	interface:
KWEncodingForDefaultMethod	Example/Pods/Kiwi/Classes/Core/KWStringUtilities.m	/^NSString *KWEncodingForDefaultMethod(void) {$/;"	f	interface:
KWEncodingForDefaultMethod	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    NSString *encoding = KWEncodingForDefaultMethod();$/;"	p	interface:KWHaveMatcher
KWEncodingForDefaultMethod	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    NSString *encoding = KWEncodingForDefaultMethod();$/;"	p	interface:KWMock
KWEncodingForDefaultMethod	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^    NSString *encoding = KWEncodingForDefaultMethod();$/;"	p	interface:KWMatchVerifier
KWEncodingForVoidMethod	Example/Pods/BuildHeaders/Kiwi/KWStringUtilities.h	/^NSString *KWEncodingForVoidMethod(void);$/;"	f	interface:
KWEncodingForVoidMethod	Example/Pods/Headers/Kiwi/KWStringUtilities.h	/^NSString *KWEncodingForVoidMethod(void);$/;"	f	interface:
KWEncodingForVoidMethod	Example/Pods/Kiwi/Classes/Core/KWStringUtilities.h	/^NSString *KWEncodingForVoidMethod(void);$/;"	f	interface:
KWEncodingForVoidMethod	Example/Pods/Kiwi/Classes/Core/KWStringUtilities.m	/^NSString *KWEncodingForVoidMethod(void) {$/;"	f	interface:
KWEncodingWithObjCTypes	Example/Pods/BuildHeaders/Kiwi/KWStringUtilities.h	/^NSString *KWEncodingWithObjCTypes(const char *firstType, ...) NS_REQUIRES_NIL_TERMINATION;$/;"	f	interface:
KWEncodingWithObjCTypes	Example/Pods/Headers/Kiwi/KWStringUtilities.h	/^NSString *KWEncodingWithObjCTypes(const char *firstType, ...) NS_REQUIRES_NIL_TERMINATION;$/;"	f	interface:
KWEncodingWithObjCTypes	Example/Pods/Kiwi/Classes/Core/KWStringUtilities.h	/^NSString *KWEncodingWithObjCTypes(const char *firstType, ...) NS_REQUIRES_NIL_TERMINATION;$/;"	f	interface:
KWEncodingWithObjCTypes	Example/Pods/Kiwi/Classes/Core/KWStringUtilities.m	/^NSString *KWEncodingWithObjCTypes(const char *firstType, ...) {$/;"	f	interface:
KWEqualMatcher	Example/Pods/BuildHeaders/Kiwi/KWEqualMatcher.h	/^@interface KWEqualMatcher : KWMatcher$/;"	i	interface:
KWEqualMatcher	Example/Pods/Headers/Kiwi/KWEqualMatcher.h	/^@interface KWEqualMatcher : KWMatcher$/;"	i	interface:
KWEqualMatcher	Example/Pods/Kiwi/Classes/Matchers/KWEqualMatcher.h	/^@interface KWEqualMatcher : KWMatcher$/;"	i	interface:
KWEqualMatcher	Example/Pods/Kiwi/Classes/Matchers/KWEqualMatcher.m	/^@implementation KWEqualMatcher$/;"	I	interface:
KWEqualMatcher	Example/Pods/Kiwi/Classes/Matchers/KWEqualMatcher.m	/^@interface KWEqualMatcher()$/;"	i	interface:
KWExample	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^@interface KWExample : NSObject <KWExampleNodeVisitor, KWReporting>$/;"	i	interface:
KWExample	Example/Pods/Headers/Kiwi/KWExample.h	/^@interface KWExample : NSObject <KWExampleNodeVisitor, KWReporting>$/;"	i	interface:
KWExample	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^@interface KWExample : NSObject <KWExampleNodeVisitor, KWReporting>$/;"	i	interface:
KWExample	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^@interface KWExample ()$/;"	i	interface:
KWExampleDelegate	Example/Pods/BuildHeaders/Kiwi/KWExampleDelegate.h	/^@protocol KWExampleDelegate <NSObject>$/;"	p	protocol:KWExampleDelegate
KWExampleDelegate	Example/Pods/Headers/Kiwi/KWExampleDelegate.h	/^@protocol KWExampleDelegate <NSObject>$/;"	p	protocol:KWExampleDelegate
KWExampleDelegate	Example/Pods/Kiwi/Classes/Core/KWExampleDelegate.h	/^@protocol KWExampleDelegate <NSObject>$/;"	p	protocol:KWExampleDelegate
KWExampleNodeVisitor	Example/Pods/BuildHeaders/Kiwi/KWExampleNode.h	/^@protocol KWExampleNodeVisitor;$/;"	p	protocol:KWExampleNodeVisitor
KWExampleNodeVisitor	Example/Pods/BuildHeaders/Kiwi/KWExampleNodeVisitor.h	/^@protocol KWExampleNodeVisitor<NSObject>$/;"	p	protocol:KWExampleNodeVisitor
KWExampleNodeVisitor	Example/Pods/Headers/Kiwi/KWExampleNode.h	/^@protocol KWExampleNodeVisitor;$/;"	p	protocol:KWExampleNodeVisitor
KWExampleNodeVisitor	Example/Pods/Headers/Kiwi/KWExampleNodeVisitor.h	/^@protocol KWExampleNodeVisitor<NSObject>$/;"	p	protocol:KWExampleNodeVisitor
KWExampleNodeVisitor	Example/Pods/Kiwi/Classes/Core/KWExampleNodeVisitor.h	/^@protocol KWExampleNodeVisitor<NSObject>$/;"	p	protocol:KWExampleNodeVisitor
KWExampleNodeVisitor	Example/Pods/Kiwi/Classes/Nodes/KWExampleNode.h	/^@protocol KWExampleNodeVisitor;$/;"	p	protocol:KWExampleNodeVisitor
KWExampleSuite	Example/Pods/BuildHeaders/Kiwi/KWExampleSuite.h	/^@interface KWExampleSuite : NSObject <KWExampleNodeVisitor>$/;"	i	interface:
KWExampleSuite	Example/Pods/Headers/Kiwi/KWExampleSuite.h	/^@interface KWExampleSuite : NSObject <KWExampleNodeVisitor>$/;"	i	interface:
KWExampleSuite	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.h	/^@interface KWExampleSuite : NSObject <KWExampleNodeVisitor>$/;"	i	interface:
KWExampleSuite	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^@interface KWExampleSuite()$/;"	i	interface:
KWExampleSuiteBuilder	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^@interface KWExampleSuiteBuilder : NSObject$/;"	i	interface:
KWExampleSuiteBuilder	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^@interface KWExampleSuiteBuilder : NSObject$/;"	i	interface:
KWExampleSuiteBuilder	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^@interface KWExampleSuiteBuilder : NSObject$/;"	i	interface:
KWExampleSuiteBuilder	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^@interface KWExampleSuiteBuilder()$/;"	i	interface:
KWExistVerifier	Example/Pods/Kiwi/Classes/Verifiers/KWExistVerifier.m	/^@interface KWExistVerifier()$/;"	i	interface:
KWExpectationType	Example/Pods/BuildHeaders/Kiwi/KWExpectationType.h	/^typedef NSUInteger KWExpectationType;$/;"	t	interface:
KWExpectationType	Example/Pods/Headers/Kiwi/KWExpectationType.h	/^typedef NSUInteger KWExpectationType;$/;"	t	interface:
KWExpectationType	Example/Pods/Kiwi/Classes/Core/KWExpectationType.h	/^typedef NSUInteger KWExpectationType;$/;"	t	interface:
KWFailure	Example/Pods/BuildHeaders/Kiwi/KWFailure.h	/^@interface KWFailure : NSObject$/;"	i	interface:
KWFailure	Example/Pods/Headers/Kiwi/KWFailure.h	/^@interface KWFailure : NSObject$/;"	i	interface:
KWFailure	Example/Pods/Kiwi/Classes/Core/KWFailure.h	/^@interface KWFailure : NSObject$/;"	i	interface:
KWFailure	Example/Pods/Kiwi/Classes/Core/KWFailure.m	/^@implementation KWFailure$/;"	I	interface:
KWFormatter	Example/Pods/BuildHeaders/Kiwi/KWFormatter.h	/^@interface KWFormatter : NSObject$/;"	i	interface:
KWFormatter	Example/Pods/Headers/Kiwi/KWFormatter.h	/^@interface KWFormatter : NSObject$/;"	i	interface:
KWFormatter	Example/Pods/Kiwi/Classes/Core/KWFormatter.h	/^@interface KWFormatter : NSObject$/;"	i	interface:
KWFormatter	Example/Pods/Kiwi/Classes/Core/KWFormatter.m	/^@implementation KWFormatter$/;"	I	interface:
KWForwardingImplementationForMethodEncoding	Example/Pods/BuildHeaders/Kiwi/KWIntercept.h	/^IMP KWForwardingImplementationForMethodEncoding(const char* encoding);$/;"	f	interface:
KWForwardingImplementationForMethodEncoding	Example/Pods/Headers/Kiwi/KWIntercept.h	/^IMP KWForwardingImplementationForMethodEncoding(const char* encoding);$/;"	f	interface:
KWForwardingImplementationForMethodEncoding	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.h	/^IMP KWForwardingImplementationForMethodEncoding(const char* encoding);$/;"	f	interface:
KWForwardingImplementationForMethodEncoding	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^IMP KWForwardingImplementationForMethodEncoding(const char* encoding) {$/;"	f	interface:
KWFutureObject	Example/Pods/BuildHeaders/Kiwi/KWFutureObject.h	/^@interface KWFutureObject : NSObject$/;"	i	interface:
KWFutureObject	Example/Pods/Headers/Kiwi/KWFutureObject.h	/^@interface KWFutureObject : NSObject$/;"	i	interface:
KWFutureObject	Example/Pods/Kiwi/Classes/Core/KWFutureObject.h	/^@interface KWFutureObject : NSObject$/;"	i	interface:
KWFutureObject	Example/Pods/Kiwi/Classes/Core/KWFutureObject.m	/^@interface KWFutureObject()$/;"	i	interface:
KWGenericMatchEvaluator	Example/Pods/BuildHeaders/Kiwi/KWGenericMatchEvaluator.h	/^@interface KWGenericMatchEvaluator : NSObject$/;"	i	interface:
KWGenericMatchEvaluator	Example/Pods/Headers/Kiwi/KWGenericMatchEvaluator.h	/^@interface KWGenericMatchEvaluator : NSObject$/;"	i	interface:
KWGenericMatchEvaluator	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchEvaluator.h	/^@interface KWGenericMatchEvaluator : NSObject$/;"	i	interface:
KWGenericMatchEvaluator	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchEvaluator.m	/^@implementation KWGenericMatchEvaluator$/;"	I	interface:
KWGenericMatcher	Example/Pods/BuildHeaders/Kiwi/KWGenericMatcher.h	/^@interface KWGenericMatcher : KWMatcher$/;"	i	protocol:
KWGenericMatcher	Example/Pods/Headers/Kiwi/KWGenericMatcher.h	/^@interface KWGenericMatcher : KWMatcher$/;"	i	protocol:
KWGenericMatcher	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatcher.h	/^@interface KWGenericMatcher : KWMatcher$/;"	i	protocol:
KWGenericMatcher	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatcher.m	/^@interface KWGenericMatcher ()$/;"	i	interface:
KWGenericMatching	Example/Pods/BuildHeaders/Kiwi/KWGenericMatcher.h	/^@protocol KWGenericMatching <NSObject>$/;"	p	protocol:KWGenericMatching
KWGenericMatching	Example/Pods/Headers/Kiwi/KWGenericMatcher.h	/^@protocol KWGenericMatching <NSObject>$/;"	p	protocol:KWGenericMatching
KWGenericMatching	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatcher.h	/^@protocol KWGenericMatching <NSObject>$/;"	p	protocol:KWGenericMatching
KWGetAndClearExceptionFromAcrossInvocationBoundary	Example/Pods/BuildHeaders/Kiwi/KWWorkarounds.h	/^NSException *KWGetAndClearExceptionFromAcrossInvocationBoundary(void);$/;"	f	interface:
KWGetAndClearExceptionFromAcrossInvocationBoundary	Example/Pods/Headers/Kiwi/KWWorkarounds.h	/^NSException *KWGetAndClearExceptionFromAcrossInvocationBoundary(void);$/;"	f	interface:
KWGetAndClearExceptionFromAcrossInvocationBoundary	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^            NSException *invocationException = KWGetAndClearExceptionFromAcrossInvocationBoundary();$/;"	p	interface:KWExample
KWGetAndClearExceptionFromAcrossInvocationBoundary	Example/Pods/Kiwi/Classes/Core/KWWorkarounds.h	/^NSException *KWGetAndClearExceptionFromAcrossInvocationBoundary(void);$/;"	f	interface:
KWGetAndClearExceptionFromAcrossInvocationBoundary	Example/Pods/Kiwi/Classes/Core/KWWorkarounds.m	/^NSException *KWGetAndClearExceptionFromAcrossInvocationBoundary(void) {$/;"	f	interface:
KWGetAndClearExceptionFromAcrossInvocationBoundary	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^    NSException *exception = KWGetAndClearExceptionFromAcrossInvocationBoundary();$/;"	p	interface:KWMatchVerifier
KWHaveMatcher	Example/Pods/BuildHeaders/Kiwi/KWHaveMatcher.h	/^@interface KWHaveMatcher : KWMatcher$/;"	i	interface:
KWHaveMatcher	Example/Pods/Headers/Kiwi/KWHaveMatcher.h	/^@interface KWHaveMatcher : KWMatcher$/;"	i	interface:
KWHaveMatcher	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.h	/^@interface KWHaveMatcher : KWMatcher$/;"	i	interface:
KWHaveMatcher	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^@interface KWHaveMatcher()$/;"	i	interface:
KWHaveValueMatcher	Example/Pods/BuildHeaders/Kiwi/KWHaveValueMatcher.h	/^@interface KWHaveValueMatcher : KWMatcher$/;"	i	interface:
KWHaveValueMatcher	Example/Pods/Headers/Kiwi/KWHaveValueMatcher.h	/^@interface KWHaveValueMatcher : KWMatcher$/;"	i	interface:
KWHaveValueMatcher	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.h	/^@interface KWHaveValueMatcher : KWMatcher$/;"	i	interface:
KWHaveValueMatcher	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^@interface KWHaveValueMatcher()$/;"	i	interface:
KWInequalityMatcher	Example/Pods/BuildHeaders/Kiwi/KWInequalityMatcher.h	/^@interface KWInequalityMatcher : KWMatcher$/;"	i	interface:
KWInequalityMatcher	Example/Pods/Headers/Kiwi/KWInequalityMatcher.h	/^@interface KWInequalityMatcher : KWMatcher$/;"	i	interface:
KWInequalityMatcher	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.h	/^@interface KWInequalityMatcher : KWMatcher$/;"	i	interface:
KWInequalityMatcher	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^@interface KWInequalityMatcher()$/;"	i	interface:
KWInequalityTypeGreaterThan	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^    self.inequalityType = KWInequalityTypeGreaterThan;$/;"	p	interface:KWInequalityMatcher
KWInequalityTypeGreaterThanOrEqualTo	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^            return self.inequalityType == KWInequalityTypeGreaterThan || self.inequalityType == KWInequalityTypeGreaterThanOrEqualTo;$/;"	p	interface:KWInequalityMatcher
KWInequalityTypeGreaterThanOrEqualTo	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^            return self.inequalityType == KWInequalityTypeLessThanOrEqualTo || self.inequalityType == KWInequalityTypeGreaterThanOrEqualTo;$/;"	p	interface:KWInequalityMatcher
KWInequalityTypeGreaterThanOrEqualTo	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^    self.inequalityType = KWInequalityTypeGreaterThanOrEqualTo;$/;"	p	interface:KWInequalityMatcher
KWInequalityTypeGreaterThanOrEqualTo	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^};$/;"	t	interface:
KWInequalityTypeLessThan	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^    self.inequalityType = KWInequalityTypeLessThan;$/;"	p	interface:KWInequalityMatcher
KWInequalityTypeLessThanOrEqualTo	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^            return self.inequalityType == KWInequalityTypeLessThan || self.inequalityType == KWInequalityTypeLessThanOrEqualTo;$/;"	p	interface:KWInequalityMatcher
KWInequalityTypeLessThanOrEqualTo	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^    self.inequalityType = KWInequalityTypeLessThanOrEqualTo;$/;"	p	interface:KWInequalityMatcher
KWInterceptClassForCanonicalClass	Example/Pods/BuildHeaders/Kiwi/KWIntercept.h	/^Class KWInterceptClassForCanonicalClass(Class canonicalClass);$/;"	f	interface:
KWInterceptClassForCanonicalClass	Example/Pods/Headers/Kiwi/KWIntercept.h	/^Class KWInterceptClassForCanonicalClass(Class canonicalClass);$/;"	f	interface:
KWInterceptClassForCanonicalClass	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.h	/^Class KWInterceptClassForCanonicalClass(Class canonicalClass);$/;"	f	interface:
KWInterceptClassNameForClass	Example/Pods/BuildHeaders/Kiwi/KWIntercept.h	/^NSString *KWInterceptClassNameForClass(Class aClass);$/;"	f	interface:
KWInterceptClassNameForClass	Example/Pods/Headers/Kiwi/KWIntercept.h	/^NSString *KWInterceptClassNameForClass(Class aClass);$/;"	f	interface:
KWInterceptClassNameForClass	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.h	/^NSString *KWInterceptClassNameForClass(Class aClass);$/;"	f	interface:
KWInterceptedClass	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^Class KWInterceptedClass(id anObject, SEL aSelector);$/;"	f	interface:
KWInterceptedDealloc	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^void KWInterceptedDealloc(id anObject, SEL aSelector);$/;"	f	interface:
KWInterceptedForwardInvocation	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^void KWInterceptedForwardInvocation(id anObject, SEL aSelector, NSInvocation* anInvocation);$/;"	f	interface:
KWInterceptedObjectKey	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^KWInterceptedObjectBlock KWInterceptedObjectKey(id anObject);$/;"	f	interface:
KWInterceptedSuperclass	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^Class KWInterceptedSuperclass(id anObject, SEL aSelector);$/;"	f	interface:
KWInvocationCapturer	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.m	/^@implementation KWInvocationCapturer$/;"	I	interface:
KWInvocationCapturerDelegate	Example/Pods/BuildHeaders/Kiwi/KWInvocationCapturer.h	/^@protocol KWInvocationCapturerDelegate;$/;"	p	protocol:KWInvocationCapturerDelegate
KWInvocationCapturerDelegate	Example/Pods/Headers/Kiwi/KWInvocationCapturer.h	/^@protocol KWInvocationCapturerDelegate;$/;"	p	protocol:KWInvocationCapturerDelegate
KWInvocationCapturerDelegate	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.h	/^@protocol KWInvocationCapturerDelegate;$/;"	p	protocol:KWInvocationCapturerDelegate
KWItNode	Example/Pods/BuildHeaders/Kiwi/KWItNode.h	/^@interface KWItNode : KWBlockNode<KWExampleNode>$/;"	i	interface:
KWItNode	Example/Pods/Headers/Kiwi/KWItNode.h	/^@interface KWItNode : KWBlockNode<KWExampleNode>$/;"	i	interface:
KWItNode	Example/Pods/Kiwi/Classes/Nodes/KWItNode.h	/^@interface KWItNode : KWBlockNode<KWExampleNode>$/;"	i	interface:
KWItNode	Example/Pods/Kiwi/Classes/Nodes/KWItNode.m	/^@interface KWItNode ()$/;"	i	interface:
KWLetNode	Example/Pods/BuildHeaders/Kiwi/KWLetNode.h	/^@interface KWLetNode : NSObject<KWExampleNode>$/;"	i	interface:
KWLetNode	Example/Pods/Headers/Kiwi/KWLetNode.h	/^@interface KWLetNode : NSObject<KWExampleNode>$/;"	i	interface:
KWLetNode	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.h	/^@interface KWLetNode : NSObject<KWExampleNode>$/;"	i	interface:
KWLetNode	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^@interface KWLetNode ()$/;"	i	interface:
KWMatchVerifier	Example/Pods/BuildHeaders/Kiwi/KWContainMatcher.h	/^@interface KWMatchVerifier(KWContainMatcherAdditions)$/;"	i	interface:
KWMatchVerifier	Example/Pods/BuildHeaders/Kiwi/KWHaveMatcher.h	/^@interface KWMatchVerifier(KWHaveMatcherAdditions)$/;"	i	protocol:
KWMatchVerifier	Example/Pods/Headers/Kiwi/KWContainMatcher.h	/^@interface KWMatchVerifier(KWContainMatcherAdditions)$/;"	i	interface:
KWMatchVerifier	Example/Pods/Headers/Kiwi/KWHaveMatcher.h	/^@interface KWMatchVerifier(KWHaveMatcherAdditions)$/;"	i	protocol:
KWMatchVerifier	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.h	/^@interface KWMatchVerifier(KWContainMatcherAdditions)$/;"	i	interface:
KWMatchVerifier	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.h	/^@interface KWMatchVerifier(KWHaveMatcherAdditions)$/;"	i	protocol:
KWMatchVerifier	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^@implementation KWMatchVerifier(KWReceiveMatcherAdditions)$/;"	I	implementation:
KWMatchVerifier	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^@interface KWMatchVerifier()$/;"	i	interface:
KWMatcher	Example/Pods/BuildHeaders/Kiwi/KWMatcher.h	/^@interface KWMatcher : NSObject<KWMatching>$/;"	i	interface:
KWMatcher	Example/Pods/Headers/Kiwi/KWMatcher.h	/^@interface KWMatcher : NSObject<KWMatching>$/;"	i	interface:
KWMatcher	Example/Pods/Kiwi/Classes/Core/KWMatcher.h	/^@interface KWMatcher : NSObject<KWMatching>$/;"	i	interface:
KWMatcher	Example/Pods/Kiwi/Classes/Core/KWMatcher.m	/^@implementation KWMatcher$/;"	I	interface:
KWMatcherFactory	Example/Pods/BuildHeaders/Kiwi/KWMatcherFactory.h	/^@interface KWMatcherFactory : NSObject$/;"	i	interface:
KWMatcherFactory	Example/Pods/Headers/Kiwi/KWMatcherFactory.h	/^@interface KWMatcherFactory : NSObject$/;"	i	interface:
KWMatcherFactory	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.h	/^@interface KWMatcherFactory : NSObject$/;"	i	interface:
KWMatcherFactory	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^@interface KWMatcherFactory()$/;"	i	interface:
KWMatchers	Example/Pods/BuildHeaders/Kiwi/KWMatchers.h	/^@interface KWMatchers : NSObject$/;"	i	interface:
KWMatchers	Example/Pods/Headers/Kiwi/KWMatchers.h	/^@interface KWMatchers : NSObject$/;"	i	interface:
KWMatchers	Example/Pods/Kiwi/Classes/Core/KWMatchers.h	/^@interface KWMatchers : NSObject$/;"	i	interface:
KWMatchers	Example/Pods/Kiwi/Classes/Core/KWMatchers.m	/^@implementation KWMatchers$/;"	I	interface:
KWMatchers	Example/Pods/Kiwi/Classes/Core/KWMatchers.m	/^@interface KWMatchers() {$/;"	i	interface:
KWMatching	Example/Pods/BuildHeaders/Kiwi/KWMatchVerifier.h	/^@protocol KWMatching;$/;"	p	protocol:KWMatching
KWMatching	Example/Pods/BuildHeaders/Kiwi/KWMatching.h	/^@protocol KWMatching<NSObject>$/;"	p	protocol:KWMatching
KWMatching	Example/Pods/Headers/Kiwi/KWMatchVerifier.h	/^@protocol KWMatching;$/;"	p	protocol:KWMatching
KWMatching	Example/Pods/Headers/Kiwi/KWMatching.h	/^@protocol KWMatching<NSObject>$/;"	p	protocol:KWMatching
KWMatching	Example/Pods/Kiwi/Classes/Core/KWMatching.h	/^@protocol KWMatching<NSObject>$/;"	p	protocol:KWMatching
KWMatching	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.h	/^@protocol KWMatching;$/;"	p	protocol:KWMatching
KWMessagePattern	Example/Pods/BuildHeaders/Kiwi/KWMessagePattern.h	/^@interface KWMessagePattern : NSObject$/;"	i	interface:
KWMessagePattern	Example/Pods/Headers/Kiwi/KWMessagePattern.h	/^@interface KWMessagePattern : NSObject$/;"	i	interface:
KWMessagePattern	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.h	/^@interface KWMessagePattern : NSObject$/;"	i	interface:
KWMessagePattern	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.m	/^@implementation KWMessagePattern$/;"	I	interface:
KWMessageSpiesForObject	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^NSMapTable *KWMessageSpiesForObject(id anObject);$/;"	f	interface:
KWMessageSpiesInit	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^void KWMessageSpiesInit(void);$/;"	f	interface:
KWMessageSpiesSet	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^void KWMessageSpiesSet(id anObject, NSMapTable *spies);$/;"	f	interface:
KWMessageSpying	Example/Pods/BuildHeaders/Kiwi/KWMessageSpying.h	/^@protocol KWMessageSpying<NSObject>$/;"	p	protocol:KWMessageSpying
KWMessageSpying	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^@protocol KWMessageSpying;$/;"	p	protocol:KWMessageSpying
KWMessageSpying	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^@protocol KWMessageSpying;$/;"	p	protocol:KWMessageSpying
KWMessageSpying	Example/Pods/Headers/Kiwi/KWMessageSpying.h	/^@protocol KWMessageSpying<NSObject>$/;"	p	protocol:KWMessageSpying
KWMessageSpying	Example/Pods/Headers/Kiwi/KWMock.h	/^@protocol KWMessageSpying;$/;"	p	protocol:KWMessageSpying
KWMessageSpying	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^@protocol KWMessageSpying;$/;"	p	protocol:KWMessageSpying
KWMessageSpying	Example/Pods/Kiwi/Classes/Core/KWMessageSpying.h	/^@protocol KWMessageSpying<NSObject>$/;"	p	protocol:KWMessageSpying
KWMessageSpying	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^@protocol KWMessageSpying;$/;"	p	protocol:KWMessageSpying
KWMessageSpying	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^@protocol KWMessageSpying;$/;"	p	protocol:KWMessageSpying
KWMessageTracker	Example/Pods/BuildHeaders/Kiwi/KWMessageTracker.h	/^@interface KWMessageTracker : NSObject<KWMessageSpying>$/;"	i	interface:
KWMessageTracker	Example/Pods/Headers/Kiwi/KWMessageTracker.h	/^@interface KWMessageTracker : NSObject<KWMessageSpying>$/;"	i	interface:
KWMessageTracker	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.h	/^@interface KWMessageTracker : NSObject<KWMessageSpying>$/;"	i	interface:
KWMessageTracker	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.m	/^@implementation KWMessageTracker$/;"	I	interface:
KWMessageTracker	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.m	/^@interface KWMessageTracker()$/;"	i	interface:
KWMock	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^@interface KWMock()$/;"	i	interface:
KWNilMatcher	Example/Pods/BuildHeaders/Kiwi/KWNilMatcher.h	/^@interface KWNilMatcher : KWMatcher$/;"	i	interface:
KWNilMatcher	Example/Pods/Headers/Kiwi/KWNilMatcher.h	/^@interface KWNilMatcher : KWMatcher$/;"	i	interface:
KWNilMatcher	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.h	/^@interface KWNilMatcher : KWMatcher$/;"	i	interface:
KWNilMatcher	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^@interface KWNilMatcher ()$/;"	i	interface:
KWNotificationMatcher	Example/Pods/BuildHeaders/Kiwi/KWNotificationMatcher.h	/^@interface KWNotificationMatcher : KWMatcher$/;"	i	interface:
KWNotificationMatcher	Example/Pods/Headers/Kiwi/KWNotificationMatcher.h	/^@interface KWNotificationMatcher : KWMatcher$/;"	i	interface:
KWNotificationMatcher	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.h	/^@interface KWNotificationMatcher : KWMatcher$/;"	i	interface:
KWNotificationMatcher	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^@interface KWNotificationMatcher ()$/;"	i	interface:
KWNull	Example/Pods/BuildHeaders/Kiwi/KWNull.h	/^@interface KWNull : NSObject$/;"	i	interface:
KWNull	Example/Pods/Headers/Kiwi/KWNull.h	/^@interface KWNull : NSObject$/;"	i	interface:
KWNull	Example/Pods/Kiwi/Classes/Core/KWNull.h	/^@interface KWNull : NSObject$/;"	i	interface:
KWNull	Example/Pods/Kiwi/Classes/Core/KWNull.m	/^@implementation KWNull$/;"	I	interface:
KWObjCTypeEqualToObjCType	Example/Pods/BuildHeaders/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeEqualToObjCType(const char *firstObjCType, const char *secondObjCType);$/;"	f	interface:
KWObjCTypeEqualToObjCType	Example/Pods/Headers/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeEqualToObjCType(const char *firstObjCType, const char *secondObjCType);$/;"	f	interface:
KWObjCTypeEqualToObjCType	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.h	/^BOOL KWObjCTypeEqualToObjCType(const char *firstObjCType, const char *secondObjCType);$/;"	f	interface:
KWObjCTypeEqualToObjCType	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.m	/^BOOL KWObjCTypeEqualToObjCType(const char *firstObjCType, const char *secondObjCType) {$/;"	f	interface:
KWObjCTypeIsBlock	Example/Pods/BuildHeaders/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsBlock(const char *objCType);$/;"	f	interface:
KWObjCTypeIsBlock	Example/Pods/Headers/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsBlock(const char *objCType);$/;"	f	interface:
KWObjCTypeIsBlock	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.h	/^BOOL KWObjCTypeIsBlock(const char *objCType);$/;"	f	interface:
KWObjCTypeIsBlock	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.m	/^BOOL KWObjCTypeIsBlock(const char *objCType) {$/;"	f	interface:
KWObjCTypeIsBoolean	Example/Pods/BuildHeaders/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsBoolean(const char *objCType);$/;"	f	interface:
KWObjCTypeIsBoolean	Example/Pods/Headers/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsBoolean(const char *objCType);$/;"	f	interface:
KWObjCTypeIsBoolean	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.h	/^BOOL KWObjCTypeIsBoolean(const char *objCType);$/;"	f	interface:
KWObjCTypeIsBoolean	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.m	/^BOOL KWObjCTypeIsBoolean(const char *objCType) {$/;"	f	interface:
KWObjCTypeIsCharString	Example/Pods/BuildHeaders/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsCharString(const char *objCType);$/;"	f	interface:
KWObjCTypeIsCharString	Example/Pods/Headers/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsCharString(const char *objCType);$/;"	f	interface:
KWObjCTypeIsCharString	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.h	/^BOOL KWObjCTypeIsCharString(const char *objCType);$/;"	f	interface:
KWObjCTypeIsCharString	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.m	/^BOOL KWObjCTypeIsCharString(const char *objCType) {$/;"	f	interface:
KWObjCTypeIsClass	Example/Pods/BuildHeaders/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsClass(const char *objCType);$/;"	f	interface:
KWObjCTypeIsClass	Example/Pods/Headers/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsClass(const char *objCType);$/;"	f	interface:
KWObjCTypeIsClass	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.h	/^BOOL KWObjCTypeIsClass(const char *objCType);$/;"	f	interface:
KWObjCTypeIsClass	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.m	/^BOOL KWObjCTypeIsClass(const char *objCType) {$/;"	f	interface:
KWObjCTypeIsFloatingPoint	Example/Pods/BuildHeaders/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsFloatingPoint(const char *objCType);$/;"	f	interface:
KWObjCTypeIsFloatingPoint	Example/Pods/Headers/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsFloatingPoint(const char *objCType);$/;"	f	interface:
KWObjCTypeIsFloatingPoint	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.h	/^BOOL KWObjCTypeIsFloatingPoint(const char *objCType);$/;"	f	interface:
KWObjCTypeIsFloatingPoint	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.m	/^BOOL KWObjCTypeIsFloatingPoint(const char *objCType) {$/;"	f	interface:
KWObjCTypeIsIntegral	Example/Pods/BuildHeaders/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsIntegral(const char *objCType);$/;"	f	interface:
KWObjCTypeIsIntegral	Example/Pods/Headers/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsIntegral(const char *objCType);$/;"	f	interface:
KWObjCTypeIsIntegral	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.h	/^BOOL KWObjCTypeIsIntegral(const char *objCType);$/;"	f	interface:
KWObjCTypeIsIntegral	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.m	/^BOOL KWObjCTypeIsIntegral(const char *objCType) {$/;"	f	interface:
KWObjCTypeIsNumeric	Example/Pods/BuildHeaders/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsNumeric(const char *objCType);$/;"	f	interface:
KWObjCTypeIsNumeric	Example/Pods/Headers/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsNumeric(const char *objCType);$/;"	f	interface:
KWObjCTypeIsNumeric	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.h	/^BOOL KWObjCTypeIsNumeric(const char *objCType);$/;"	f	interface:
KWObjCTypeIsNumeric	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.m	/^BOOL KWObjCTypeIsNumeric(const char *objCType) {$/;"	f	interface:
KWObjCTypeIsObject	Example/Pods/BuildHeaders/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsObject(const char *objCType);$/;"	f	interface:
KWObjCTypeIsObject	Example/Pods/Headers/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsObject(const char *objCType);$/;"	f	interface:
KWObjCTypeIsObject	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.h	/^BOOL KWObjCTypeIsObject(const char *objCType);$/;"	f	interface:
KWObjCTypeIsObject	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.m	/^BOOL KWObjCTypeIsObject(const char *objCType) {$/;"	f	interface:
KWObjCTypeIsPointerLike	Example/Pods/BuildHeaders/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsPointerLike(const char *objCType);$/;"	f	interface:
KWObjCTypeIsPointerLike	Example/Pods/Headers/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsPointerLike(const char *objCType);$/;"	f	interface:
KWObjCTypeIsPointerLike	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.h	/^BOOL KWObjCTypeIsPointerLike(const char *objCType);$/;"	f	interface:
KWObjCTypeIsPointerLike	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.m	/^BOOL KWObjCTypeIsPointerLike(const char *objCType) {$/;"	f	interface:
KWObjCTypeIsPointerToType	Example/Pods/BuildHeaders/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsPointerToType(const char *objCType);$/;"	f	interface:
KWObjCTypeIsPointerToType	Example/Pods/Headers/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsPointerToType(const char *objCType);$/;"	f	interface:
KWObjCTypeIsPointerToType	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.h	/^BOOL KWObjCTypeIsPointerToType(const char *objCType);$/;"	f	interface:
KWObjCTypeIsPointerToType	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.m	/^BOOL KWObjCTypeIsPointerToType(const char *objCType) {$/;"	f	interface:
KWObjCTypeIsSelector	Example/Pods/BuildHeaders/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsSelector(const char *objCType);$/;"	f	interface:
KWObjCTypeIsSelector	Example/Pods/Headers/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsSelector(const char *objCType);$/;"	f	interface:
KWObjCTypeIsSelector	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.h	/^BOOL KWObjCTypeIsSelector(const char *objCType);$/;"	f	interface:
KWObjCTypeIsSelector	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.m	/^BOOL KWObjCTypeIsSelector(const char *objCType) {$/;"	f	interface:
KWObjCTypeIsSignedIntegral	Example/Pods/BuildHeaders/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsSignedIntegral(const char *objCType);$/;"	f	interface:
KWObjCTypeIsSignedIntegral	Example/Pods/Headers/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsSignedIntegral(const char *objCType);$/;"	f	interface:
KWObjCTypeIsSignedIntegral	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.h	/^BOOL KWObjCTypeIsSignedIntegral(const char *objCType);$/;"	f	interface:
KWObjCTypeIsSignedIntegral	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.m	/^BOOL KWObjCTypeIsSignedIntegral(const char *objCType) {$/;"	f	interface:
KWObjCTypeIsUnknown	Example/Pods/BuildHeaders/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsUnknown(const char *objCType);$/;"	f	interface:
KWObjCTypeIsUnknown	Example/Pods/Headers/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsUnknown(const char *objCType);$/;"	f	interface:
KWObjCTypeIsUnknown	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.h	/^BOOL KWObjCTypeIsUnknown(const char *objCType);$/;"	f	interface:
KWObjCTypeIsUnknown	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.m	/^BOOL KWObjCTypeIsUnknown(const char *objCType) {$/;"	f	interface:
KWObjCTypeIsUnsignedIntegral	Example/Pods/BuildHeaders/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsUnsignedIntegral(const char *objCType);$/;"	f	interface:
KWObjCTypeIsUnsignedIntegral	Example/Pods/Headers/Kiwi/KWObjCUtilities.h	/^BOOL KWObjCTypeIsUnsignedIntegral(const char *objCType);$/;"	f	interface:
KWObjCTypeIsUnsignedIntegral	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.h	/^BOOL KWObjCTypeIsUnsignedIntegral(const char *objCType);$/;"	f	interface:
KWObjCTypeIsUnsignedIntegral	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.m	/^BOOL KWObjCTypeIsUnsignedIntegral(const char *objCType) {$/;"	f	interface:
KWObjCTypeLength	Example/Pods/BuildHeaders/Kiwi/KWObjCUtilities.h	/^NSUInteger KWObjCTypeLength(const char *objCType);$/;"	f	interface:
KWObjCTypeLength	Example/Pods/Headers/Kiwi/KWObjCUtilities.h	/^NSUInteger KWObjCTypeLength(const char *objCType);$/;"	f	interface:
KWObjCTypeLength	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.h	/^NSUInteger KWObjCTypeLength(const char *objCType);$/;"	f	interface:
KWObjCTypeLength	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.m	/^NSUInteger KWObjCTypeLength(const char *objCType) {$/;"	f	interface:
KWObjectClassRestored	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^BOOL KWObjectClassRestored(id anObject);$/;"	f	interface:
KWObjectIsClass	Example/Pods/BuildHeaders/Kiwi/KWIntercept.h	/^BOOL KWObjectIsClass(id anObject);$/;"	f	interface:
KWObjectIsClass	Example/Pods/Headers/Kiwi/KWIntercept.h	/^BOOL KWObjectIsClass(id anObject);$/;"	f	interface:
KWObjectIsClass	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.h	/^BOOL KWObjectIsClass(id anObject);$/;"	f	interface:
KWObjectStubsForObject	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^NSMutableArray *KWObjectStubsForObject(id anObject);$/;"	f	interface:
KWObjectStubsInit	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^void KWObjectStubsInit(void);$/;"	f	interface:
KWObjectStubsSet	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^void KWObjectStubsSet(id anObject, NSMutableArray *stubs);$/;"	f	interface:
KWPendingNode	Example/Pods/BuildHeaders/Kiwi/KWPendingNode.h	/^@interface KWPendingNode : NSObject<KWExampleNode>$/;"	i	interface:
KWPendingNode	Example/Pods/Headers/Kiwi/KWPendingNode.h	/^@interface KWPendingNode : NSObject<KWExampleNode>$/;"	i	interface:
KWPendingNode	Example/Pods/Kiwi/Classes/Nodes/KWPendingNode.h	/^@interface KWPendingNode : NSObject<KWExampleNode>$/;"	i	interface:
KWPendingNode	Example/Pods/Kiwi/Classes/Nodes/KWPendingNode.m	/^@implementation KWPendingNode$/;"	I	interface:
KWProbe	Example/Pods/BuildHeaders/Kiwi/KWProbe.h	/^@protocol KWProbe <NSObject>$/;"	p	protocol:KWProbe
KWProbe	Example/Pods/Headers/Kiwi/KWProbe.h	/^@protocol KWProbe <NSObject>$/;"	p	protocol:KWProbe
KWProbe	Example/Pods/Kiwi/Classes/Core/KWProbe.h	/^@protocol KWProbe <NSObject>$/;"	p	protocol:KWProbe
KWProbePoller	Example/Pods/BuildHeaders/Kiwi/KWProbePoller.h	/^@interface KWProbePoller : NSObject$/;"	i	interface:
KWProbePoller	Example/Pods/Headers/Kiwi/KWProbePoller.h	/^@interface KWProbePoller : NSObject$/;"	i	interface:
KWProbePoller	Example/Pods/Kiwi/Classes/Core/KWProbePoller.h	/^@interface KWProbePoller : NSObject$/;"	i	interface:
KWRealClassForClass	Example/Pods/BuildHeaders/Kiwi/KWIntercept.h	/^Class KWRealClassForClass(Class aClass);$/;"	f	interface:
KWRealClassForClass	Example/Pods/Headers/Kiwi/KWIntercept.h	/^Class KWRealClassForClass(Class aClass);$/;"	f	interface:
KWRealClassForClass	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.h	/^Class KWRealClassForClass(Class aClass);$/;"	f	interface:
KWReceiveMatcher	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^@interface KWReceiveMatcher : KWMatcher$/;"	i	interface:
KWReceiveMatcher	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^@interface KWReceiveMatcher : KWMatcher$/;"	i	interface:
KWReceiveMatcher	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^@interface KWReceiveMatcher : KWMatcher$/;"	i	interface:
KWReceiveMatcher	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^@implementation KWReceiveMatcher$/;"	I	interface:
KWReceiveMatcher	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^@interface KWReceiveMatcher()$/;"	i	interface:
KWRegisterMatchersNode	Example/Pods/BuildHeaders/Kiwi/KWRegisterMatchersNode.h	/^@interface KWRegisterMatchersNode : NSObject<KWExampleNode>$/;"	i	interface:
KWRegisterMatchersNode	Example/Pods/Headers/Kiwi/KWRegisterMatchersNode.h	/^@interface KWRegisterMatchersNode : NSObject<KWExampleNode>$/;"	i	interface:
KWRegisterMatchersNode	Example/Pods/Kiwi/Classes/Nodes/KWRegisterMatchersNode.h	/^@interface KWRegisterMatchersNode : NSObject<KWExampleNode>$/;"	i	interface:
KWRegisterMatchersNode	Example/Pods/Kiwi/Classes/Nodes/KWRegisterMatchersNode.m	/^@implementation KWRegisterMatchersNode$/;"	I	interface:
KWRegularExpressionPatternMatcher	Example/Pods/BuildHeaders/Kiwi/KWRegularExpressionPatternMatcher.h	/^@interface KWRegularExpressionPatternMatcher : KWMatcher$/;"	i	interface:
KWRegularExpressionPatternMatcher	Example/Pods/Headers/Kiwi/KWRegularExpressionPatternMatcher.h	/^@interface KWRegularExpressionPatternMatcher : KWMatcher$/;"	i	interface:
KWRegularExpressionPatternMatcher	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.h	/^@interface KWRegularExpressionPatternMatcher : KWMatcher$/;"	i	interface:
KWRegularExpressionPatternMatcher	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.m	/^@interface KWRegularExpressionPatternMatcher ()$/;"	i	interface:
KWRegularForwardingImplementation	Example/Pods/BuildHeaders/Kiwi/KWIntercept.h	/^IMP KWRegularForwardingImplementation(void);$/;"	f	interface:
KWRegularForwardingImplementation	Example/Pods/Headers/Kiwi/KWIntercept.h	/^IMP KWRegularForwardingImplementation(void);$/;"	f	interface:
KWRegularForwardingImplementation	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.h	/^IMP KWRegularForwardingImplementation(void);$/;"	f	interface:
KWRegularForwardingImplementation	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^IMP KWRegularForwardingImplementation(void) {$/;"	f	interface:
KWReporting	Example/Pods/BuildHeaders/Kiwi/KWExistVerifier.h	/^@protocol KWReporting;$/;"	p	protocol:KWReporting
KWReporting	Example/Pods/BuildHeaders/Kiwi/KWReporting.h	/^@protocol KWReporting<NSObject>$/;"	p	protocol:KWReporting
KWReporting	Example/Pods/Headers/Kiwi/KWExistVerifier.h	/^@protocol KWReporting;$/;"	p	protocol:KWReporting
KWReporting	Example/Pods/Headers/Kiwi/KWReporting.h	/^@protocol KWReporting<NSObject>$/;"	p	protocol:KWReporting
KWReporting	Example/Pods/Kiwi/Classes/Core/KWReporting.h	/^@protocol KWReporting<NSObject>$/;"	p	protocol:KWReporting
KWReporting	Example/Pods/Kiwi/Classes/Verifiers/KWExistVerifier.h	/^@protocol KWReporting;$/;"	p	protocol:KWReporting
KWRespondToSelectorMatcher	Example/Pods/BuildHeaders/Kiwi/KWRespondToSelectorMatcher.h	/^@interface KWRespondToSelectorMatcher : KWMatcher$/;"	i	interface:
KWRespondToSelectorMatcher	Example/Pods/Headers/Kiwi/KWRespondToSelectorMatcher.h	/^@interface KWRespondToSelectorMatcher : KWMatcher$/;"	i	interface:
KWRespondToSelectorMatcher	Example/Pods/Kiwi/Classes/Matchers/KWRespondToSelectorMatcher.h	/^@interface KWRespondToSelectorMatcher : KWMatcher$/;"	i	interface:
KWRespondToSelectorMatcher	Example/Pods/Kiwi/Classes/Matchers/KWRespondToSelectorMatcher.m	/^@implementation KWRespondToSelectorMatcher$/;"	I	interface:
KWRespondToSelectorMatcher	Example/Pods/Kiwi/Classes/Matchers/KWRespondToSelectorMatcher.m	/^@interface KWRespondToSelectorMatcher()$/;"	i	interface:
KWRestoreOriginalClass	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^Class KWRestoreOriginalClass(id anObject);$/;"	f	interface:
KWSelectorParameterCount	Example/Pods/BuildHeaders/Kiwi/KWObjCUtilities.h	/^NSUInteger KWSelectorParameterCount(SEL selector);$/;"	f	interface:
KWSelectorParameterCount	Example/Pods/Headers/Kiwi/KWObjCUtilities.h	/^NSUInteger KWSelectorParameterCount(SEL selector);$/;"	f	interface:
KWSelectorParameterCount	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.h	/^NSUInteger KWSelectorParameterCount(SEL selector);$/;"	f	interface:
KWSelectorParameterCount	Example/Pods/Kiwi/Classes/Core/KWObjCUtilities.m	/^NSUInteger KWSelectorParameterCount(SEL selector) {$/;"	f	interface:
KWSetExceptionFromAcrossInvocationBoundary	Example/Pods/BuildHeaders/Kiwi/KWWorkarounds.h	/^void KWSetExceptionFromAcrossInvocationBoundary(NSException *anException);$/;"	f	interface:
KWSetExceptionFromAcrossInvocationBoundary	Example/Pods/Headers/Kiwi/KWWorkarounds.h	/^void KWSetExceptionFromAcrossInvocationBoundary(NSException *anException);$/;"	f	interface:
KWSetExceptionFromAcrossInvocationBoundary	Example/Pods/Kiwi/Classes/Core/KWWorkarounds.h	/^void KWSetExceptionFromAcrossInvocationBoundary(NSException *anException);$/;"	f	interface:
KWSetExceptionFromAcrossInvocationBoundary	Example/Pods/Kiwi/Classes/Core/KWWorkarounds.m	/^void KWSetExceptionFromAcrossInvocationBoundary(NSException *anException) {$/;"	f	interface:
KWSetExceptionFromAcrossInvocationBoundary	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        KWSetExceptionFromAcrossInvocationBoundary(exception);$/;"	p	interface:KWMock
KWSetupMethodInterceptSupport	Example/Pods/BuildHeaders/Kiwi/KWIntercept.h	/^void KWSetupMethodInterceptSupport(Class interceptClass, SEL aSelector);$/;"	f	interface:
KWSetupMethodInterceptSupport	Example/Pods/Headers/Kiwi/KWIntercept.h	/^void KWSetupMethodInterceptSupport(Class interceptClass, SEL aSelector);$/;"	f	interface:
KWSetupMethodInterceptSupport	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.h	/^void KWSetupMethodInterceptSupport(Class interceptClass, SEL aSelector);$/;"	f	interface:
KWSetupObjectInterceptSupport	Example/Pods/BuildHeaders/Kiwi/KWIntercept.h	/^Class KWSetupObjectInterceptSupport(id anObject);$/;"	f	interface:
KWSetupObjectInterceptSupport	Example/Pods/Headers/Kiwi/KWIntercept.h	/^Class KWSetupObjectInterceptSupport(id anObject);$/;"	f	interface:
KWSetupObjectInterceptSupport	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.h	/^Class KWSetupObjectInterceptSupport(id anObject);$/;"	f	interface:
KWSpec	Example/Pods/BuildHeaders/Kiwi/KWSpec.h	/^@interface KWSpec : XCTestCase<KWExampleDelegate>$/;"	i	interface:
KWSpec	Example/Pods/Headers/Kiwi/KWSpec.h	/^@interface KWSpec : XCTestCase<KWExampleDelegate>$/;"	i	interface:
KWSpec	Example/Pods/Kiwi/Classes/Core/KWSpec.h	/^@interface KWSpec : XCTestCase<KWExampleDelegate>$/;"	i	interface:
KWSpec	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^@interface KWSpec()$/;"	i	interface:
KWStretForwardingImplementation	Example/Pods/BuildHeaders/Kiwi/KWIntercept.h	/^IMP KWStretForwardingImplementation(void);$/;"	f	interface:
KWStretForwardingImplementation	Example/Pods/Headers/Kiwi/KWIntercept.h	/^IMP KWStretForwardingImplementation(void);$/;"	f	interface:
KWStretForwardingImplementation	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.h	/^IMP KWStretForwardingImplementation(void);$/;"	f	interface:
KWStretForwardingImplementation	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^IMP KWStretForwardingImplementation(void) {$/;"	f	interface:
KWStringContainsMatcher	Example/Pods/BuildHeaders/Kiwi/KWStringContainsMatcher.h	/^@interface KWStringContainsMatcher : NSObject <KWGenericMatching>$/;"	i	interface:
KWStringContainsMatcher	Example/Pods/Headers/Kiwi/KWStringContainsMatcher.h	/^@interface KWStringContainsMatcher : NSObject <KWGenericMatching>$/;"	i	interface:
KWStringContainsMatcher	Example/Pods/Kiwi/Classes/Matchers/KWStringContainsMatcher.h	/^@interface KWStringContainsMatcher : NSObject <KWGenericMatching>$/;"	i	interface:
KWStringContainsMatcher	Example/Pods/Kiwi/Classes/Matchers/KWStringContainsMatcher.m	/^@interface KWStringContainsMatcher(){}$/;"	i	interface:
KWStringHasStrictWordPrefix	Example/Pods/BuildHeaders/Kiwi/KWStringUtilities.h	/^BOOL KWStringHasStrictWordPrefix(NSString *string, NSString *prefix);$/;"	f	interface:
KWStringHasStrictWordPrefix	Example/Pods/Headers/Kiwi/KWStringUtilities.h	/^BOOL KWStringHasStrictWordPrefix(NSString *string, NSString *prefix);$/;"	f	interface:
KWStringHasStrictWordPrefix	Example/Pods/Kiwi/Classes/Core/KWStringUtilities.h	/^BOOL KWStringHasStrictWordPrefix(NSString *string, NSString *prefix);$/;"	f	interface:
KWStringHasStrictWordPrefix	Example/Pods/Kiwi/Classes/Core/KWStringUtilities.m	/^BOOL KWStringHasStrictWordPrefix(NSString *string, NSString *prefix) {$/;"	f	interface:
KWStringHasWord	Example/Pods/BuildHeaders/Kiwi/KWStringUtilities.h	/^BOOL KWStringHasWord(NSString *string, NSString *word);$/;"	f	interface:
KWStringHasWord	Example/Pods/Headers/Kiwi/KWStringUtilities.h	/^BOOL KWStringHasWord(NSString *string, NSString *word);$/;"	f	interface:
KWStringHasWord	Example/Pods/Kiwi/Classes/Core/KWStringUtilities.h	/^BOOL KWStringHasWord(NSString *string, NSString *word);$/;"	f	interface:
KWStringHasWord	Example/Pods/Kiwi/Classes/Core/KWStringUtilities.m	/^BOOL KWStringHasWord(NSString *string, NSString *word) {$/;"	f	interface:
KWStringHasWordPrefix	Example/Pods/BuildHeaders/Kiwi/KWStringUtilities.h	/^BOOL KWStringHasWordPrefix(NSString *string, NSString *prefix);$/;"	f	interface:
KWStringHasWordPrefix	Example/Pods/Headers/Kiwi/KWStringUtilities.h	/^BOOL KWStringHasWordPrefix(NSString *string, NSString *prefix);$/;"	f	interface:
KWStringHasWordPrefix	Example/Pods/Kiwi/Classes/Core/KWStringUtilities.h	/^BOOL KWStringHasWordPrefix(NSString *string, NSString *prefix);$/;"	f	interface:
KWStringHasWordPrefix	Example/Pods/Kiwi/Classes/Core/KWStringUtilities.m	/^BOOL KWStringHasWordPrefix(NSString *string, NSString *prefix) {$/;"	f	interface:
KWStringPrefixMatcher	Example/Pods/BuildHeaders/Kiwi/KWStringPrefixMatcher.h	/^@interface KWStringPrefixMatcher : NSObject$/;"	i	interface:
KWStringPrefixMatcher	Example/Pods/Headers/Kiwi/KWStringPrefixMatcher.h	/^@interface KWStringPrefixMatcher : NSObject$/;"	i	interface:
KWStringPrefixMatcher	Example/Pods/Kiwi/Classes/Matchers/KWStringPrefixMatcher.h	/^@interface KWStringPrefixMatcher : NSObject$/;"	i	interface:
KWStringPrefixMatcher	Example/Pods/Kiwi/Classes/Matchers/KWStringPrefixMatcher.m	/^@interface KWStringPrefixMatcher(){}$/;"	i	interface:
KWStub	Example/Pods/BuildHeaders/Kiwi/KWStub.h	/^@interface KWStub : NSObject$/;"	i	interface:
KWStub	Example/Pods/Headers/Kiwi/KWStub.h	/^@interface KWStub : NSObject$/;"	i	interface:
KWStub	Example/Pods/Kiwi/Classes/Stubbing/KWStub.h	/^@interface KWStub : NSObject$/;"	i	interface:
KWStub	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^@interface KWStub(){}$/;"	i	interface:
KWSuiteConfigurationBase	Example/Pods/BuildHeaders/Kiwi/KWSuiteConfigurationBase.h	/^@interface KWSuiteConfigurationBase : NSObject$/;"	i	interface:
KWSuiteConfigurationBase	Example/Pods/Headers/Kiwi/KWSuiteConfigurationBase.h	/^@interface KWSuiteConfigurationBase : NSObject$/;"	i	interface:
KWSuiteConfigurationBase	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.h	/^@interface KWSuiteConfigurationBase : NSObject$/;"	i	interface:
KWSuiteConfigurationBase	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^@interface KWSuiteConfigurationBase ()$/;"	i	interface:
KWTimeout	Example/Pods/Kiwi/Classes/Core/KWProbePoller.m	/^@interface KWTimeout : NSObject$/;"	i	interface:
KWUserDefinedMatcher	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^@interface KWUserDefinedMatcher : KWMatcher$/;"	i	interface:
KWUserDefinedMatcher	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^@interface KWUserDefinedMatcher : KWMatcher$/;"	i	interface:
KWUserDefinedMatcher	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^@interface KWUserDefinedMatcher : KWMatcher$/;"	i	interface:
KWUserDefinedMatcher	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^@interface KWUserDefinedMatcher(){}$/;"	i	interface:
KWUserDefinedMatcherBlock	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^typedef BOOL (^KWUserDefinedMatcherBlock)();$/;"	t	interface:
KWUserDefinedMatcherBlock	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^typedef BOOL (^KWUserDefinedMatcherBlock)();$/;"	t	interface:
KWUserDefinedMatcherBlock	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^typedef BOOL (^KWUserDefinedMatcherBlock)();$/;"	t	interface:
KWValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^@interface KWValue : NSObject$/;"	i	interface:
KWValue	Example/Pods/Headers/Kiwi/KWValue.h	/^@interface KWValue : NSObject$/;"	i	interface:
KWValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^@interface KWValue : NSObject$/;"	i	interface:
KWValue	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^@implementation KWValue$/;"	I	interface:
KWValue	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^@interface KWValue()$/;"	i	interface:
KWVerifying	Example/Pods/BuildHeaders/Kiwi/KWVerifying.h	/^@protocol KWVerifying<NSObject>$/;"	p	protocol:KWVerifying
KWVerifying	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiVerifierAdditions.h	/^@protocol KWVerifying;$/;"	p	protocol:KWVerifying
KWVerifying	Example/Pods/BuildHeaders/Kiwi/NSProxy+KiwiVerifierAdditions.h	/^@protocol KWVerifying;$/;"	p	protocol:KWVerifying
KWVerifying	Example/Pods/Headers/Kiwi/KWVerifying.h	/^@protocol KWVerifying<NSObject>$/;"	p	protocol:KWVerifying
KWVerifying	Example/Pods/Headers/Kiwi/NSObject+KiwiVerifierAdditions.h	/^@protocol KWVerifying;$/;"	p	protocol:KWVerifying
KWVerifying	Example/Pods/Headers/Kiwi/NSProxy+KiwiVerifierAdditions.h	/^@protocol KWVerifying;$/;"	p	protocol:KWVerifying
KWVerifying	Example/Pods/Kiwi/Classes/Core/NSObject+KiwiVerifierAdditions.h	/^@protocol KWVerifying;$/;"	p	protocol:KWVerifying
KWVerifying	Example/Pods/Kiwi/Classes/Core/NSProxy+KiwiVerifierAdditions.h	/^@protocol KWVerifying;$/;"	p	protocol:KWVerifying
KWVerifying	Example/Pods/Kiwi/Classes/Verifiers/KWVerifying.h	/^@protocol KWVerifying<NSObject>$/;"	p	protocol:KWVerifying
KW_ADD_ASYNC_VERIFIER	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define KW_ADD_ASYNC_VERIFIER(expectationType, timeOut, wait) [self addAsyncVerifierWithExpectationType:expectationType callSite:KW_THIS_CALLSITE timeout:timeOut shouldWait:wait]$/;"	M	interface:
KW_ADD_ASYNC_VERIFIER	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define KW_ADD_ASYNC_VERIFIER(expectationType, timeOut, wait) [self addAsyncVerifierWithExpectationType:expectationType callSite:KW_THIS_CALLSITE timeout:timeOut shouldWait:wait]$/;"	M	interface:
KW_ADD_ASYNC_VERIFIER	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define KW_ADD_ASYNC_VERIFIER(expectationType, timeOut, wait) [self addAsyncVerifierWithExpectationType:expectationType callSite:KW_THIS_CALLSITE timeout:timeOut shouldWait:wait]$/;"	M	interface:
KW_ADD_EXIST_VERIFIER	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define KW_ADD_EXIST_VERIFIER(expectationType) [self addExistVerifierWithExpectationType:expectationType callSite:KW_THIS_CALLSITE] $/;"	M	interface:
KW_ADD_EXIST_VERIFIER	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define KW_ADD_EXIST_VERIFIER(expectationType) [self addExistVerifierWithExpectationType:expectationType callSite:KW_THIS_CALLSITE] $/;"	M	interface:
KW_ADD_EXIST_VERIFIER	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define KW_ADD_EXIST_VERIFIER(expectationType) [self addExistVerifierWithExpectationType:expectationType callSite:KW_THIS_CALLSITE] $/;"	M	interface:
KW_ADD_MATCH_VERIFIER	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define KW_ADD_MATCH_VERIFIER(expectationType) [self addMatchVerifierWithExpectationType:expectationType callSite:KW_THIS_CALLSITE]$/;"	M	interface:
KW_ADD_MATCH_VERIFIER	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define KW_ADD_MATCH_VERIFIER(expectationType) [self addMatchVerifierWithExpectationType:expectationType callSite:KW_THIS_CALLSITE]$/;"	M	interface:
KW_ADD_MATCH_VERIFIER	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define KW_ADD_MATCH_VERIFIER(expectationType) [self addMatchVerifierWithExpectationType:expectationType callSite:KW_THIS_CALLSITE]$/;"	M	interface:
KW_ARC_AUTORELEASE	Example/Pods/BuildHeaders/Kiwi/KWLet.h	/^#   define KW_ARC_AUTORELEASE(obj) [obj autorelease]$/;"	M	interface:
KW_ARC_AUTORELEASE	Example/Pods/BuildHeaders/Kiwi/KWLet.h	/^#   define KW_ARC_AUTORELEASE(obj) obj$/;"	M	interface:
KW_ARC_AUTORELEASE	Example/Pods/Headers/Kiwi/KWLet.h	/^#   define KW_ARC_AUTORELEASE(obj) [obj autorelease]$/;"	M	interface:
KW_ARC_AUTORELEASE	Example/Pods/Headers/Kiwi/KWLet.h	/^#   define KW_ARC_AUTORELEASE(obj) obj$/;"	M	interface:
KW_ARC_AUTORELEASE	Example/Pods/Kiwi/Classes/Core/KWLet.h	/^#   define KW_ARC_AUTORELEASE(obj) [obj autorelease]$/;"	M	interface:
KW_ARC_AUTORELEASE	Example/Pods/Kiwi/Classes/Core/KWLet.h	/^#   define KW_ARC_AUTORELEASE(obj) obj$/;"	M	interface:
KW_LET_REF	Example/Pods/BuildHeaders/Kiwi/KWLet.h	/^#define KW_LET_REF(var) \\$/;"	M	interface:
KW_LET_REF	Example/Pods/Headers/Kiwi/KWLet.h	/^#define KW_LET_REF(var) \\$/;"	M	interface:
KW_LET_REF	Example/Pods/Kiwi/Classes/Core/KWLet.h	/^#define KW_LET_REF(var) \\$/;"	M	interface:
KW_TARGET_HAS_INVOCATION_EXCEPTION_BUG	Example/Pods/BuildHeaders/Kiwi/KiwiConfiguration.h	/^    #define KW_TARGET_HAS_INVOCATION_EXCEPTION_BUG 1$/;"	M	interface:
KW_TARGET_HAS_INVOCATION_EXCEPTION_BUG	Example/Pods/Headers/Kiwi/KiwiConfiguration.h	/^    #define KW_TARGET_HAS_INVOCATION_EXCEPTION_BUG 1$/;"	M	interface:
KW_TARGET_HAS_INVOCATION_EXCEPTION_BUG	Example/Pods/Kiwi/Classes/Core/KiwiConfiguration.h	/^    #define KW_TARGET_HAS_INVOCATION_EXCEPTION_BUG 1$/;"	M	interface:
KW_THIS_CALLSITE	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define KW_THIS_CALLSITE [KWCallSite callSiteWithFilename:@__FILE__ lineNumber:__LINE__]$/;"	M	interface:
KW_THIS_CALLSITE	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define KW_THIS_CALLSITE [KWCallSite callSiteWithFilename:@__FILE__ lineNumber:__LINE__]$/;"	M	interface:
KW_THIS_CALLSITE	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define KW_THIS_CALLSITE [KWCallSite callSiteWithFilename:@__FILE__ lineNumber:__LINE__]$/;"	M	interface:
KW_captureInvocation:	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.m	/^- (void)KW_captureInvocation:(NSInvocation *)anInvocation {$/;"	m	implementation:KWInvocationCapturer
KiwiMockAdditions	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiMockAdditions.h	/^@protocol KiwiMockAdditions <NSObject>$/;"	p	protocol:KiwiMockAdditions
KiwiMockAdditions	Example/Pods/Headers/Kiwi/NSObject+KiwiMockAdditions.h	/^@protocol KiwiMockAdditions <NSObject>$/;"	p	protocol:KiwiMockAdditions
KiwiMockAdditions	Example/Pods/Kiwi/Classes/Mocking/NSObject+KiwiMockAdditions.h	/^@protocol KiwiMockAdditions <NSObject>$/;"	p	protocol:KiwiMockAdditions
KiwiSpyAdditions	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiSpyAdditions.h	/^@protocol KiwiSpyAdditions <NSObject>$/;"	p	protocol:KiwiSpyAdditions
KiwiSpyAdditions	Example/Pods/Headers/Kiwi/NSObject+KiwiSpyAdditions.h	/^@protocol KiwiSpyAdditions <NSObject>$/;"	p	protocol:KiwiSpyAdditions
KiwiSpyAdditions	Example/Pods/Kiwi/Classes/Core/NSObject+KiwiSpyAdditions.h	/^@protocol KiwiSpyAdditions <NSObject>$/;"	p	protocol:KiwiSpyAdditions
MatchVerifierKey	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    KWMatchVerifier *verifier = (anInvocationCapturer.userInfo)[MatchVerifierKey];$/;"	p	interface:KWHaveMatcher
MatchVerifierKey	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    id verifier = userInfo[MatchVerifierKey];$/;"	p	interface:KWHaveMatcher
NO	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    self.passed = NO;$/;"	p	interface:KWExample
NO	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^  return NO;$/;"	p	interface:KWExample
NO	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    return NO;$/;"	p	interface:KWExampleSuiteBuilder
NO	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    self.focusedContextNode = NO;$/;"	p	interface:KWExampleSuiteBuilder
NO	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    self.focusedItNode = NO;$/;"	p	interface:KWExampleSuiteBuilder
NO	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^                              expected:NO];$/;"	p	interface:KWSpec
NO	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^            [self recordFailureWithDescription:exception.description inFile:@"" atLine:0 expected:NO];$/;"	p	interface:KWSpec
NO	Example/Pods/Kiwi/Classes/Matchers/KWBeTrueMatcher.m	/^    self.expectedValue = NO;$/;"	p	interface:KWBeTrueMatcher
NO	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^            return NO;$/;"	p	interface:KWBlockRaiseMatcher
NO	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^    return NO;$/;"	p	interface:KWBlockRaiseMatcher
NO	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^    self.anyChange = NO;$/;"	p	interface:KWChangeMatcher
NO	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^          return NO;$/;"	p	interface:KWContainMatcher
NO	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.m	/^        return NO;$/;"	p	interface:KWContainStringMatcher
NO	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    return NO;$/;"	p	interface:KWHaveMatcher
NO	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^    BOOL matched = NO;$/;"	p	interface:KWHaveValueMatcher
NO	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^    return NO;$/;"	p	interface:KWInequalityMatcher
NO	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^        return NO;$/;"	p	interface:KWNilMatcher
NO	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^    return [self verifySubjectExpectingNil:NO];$/;"	p	interface:KWNilMatcher
NO	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^    self.expectsNil = NO;$/;"	p	interface:KWNilMatcher
NO	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.m	/^        return NO;$/;"	p	interface:KWRegularExpressionPatternMatcher
NO	Example/Pods/Kiwi/Classes/Matchers/KWStringContainsMatcher.m	/^        return NO;$/;"	p	interface:KWStringContainsMatcher
NO	Example/Pods/Kiwi/Classes/Matchers/KWStringPrefixMatcher.m	/^        return NO;$/;"	p	interface:KWStringPrefixMatcher
NO	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        BOOL result = NO;$/;"	p	interface:KWMock
NO	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        return NO;$/;"	p	interface:KWMock
NO	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return NO;$/;"	p	interface:KWMock
NO	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^        return NO;$/;"	p	interface:KWStub
NO	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^    BOOL specFailed = NO;$/;"	p	interface:KWMatchVerifier
NSAnchoredSearch	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.m	/^    self.options = NSAnchoredSearch;$/;"	p	interface:KWContainStringMatcher
NSArray	Example/Pods/BuildHeaders/Kiwi/KWGenericMatchingAdditions.h	/^@interface NSArray (KiwiGenericMatchingAdditions)$/;"	i	interface:
NSArray	Example/Pods/Headers/Kiwi/KWGenericMatchingAdditions.h	/^@interface NSArray (KiwiGenericMatchingAdditions)$/;"	i	interface:
NSArray	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchingAdditions.h	/^@interface NSArray (KiwiGenericMatchingAdditions)$/;"	i	interface:
NSArray	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchingAdditions.m	/^@implementation NSArray (KiwiGenericMatchingAdditions)$/;"	I	implementation:
NSBackwardsSearch	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.m	/^    self.options = NSAnchoredSearch | NSBackwardsSearch;$/;"	p	interface:KWContainStringMatcher
NSInvocation	Example/Pods/BuildHeaders/Kiwi/KWExampleSuite.h	/^@interface NSInvocation (KWExampleGroup)$/;"	i	interface:
NSInvocation	Example/Pods/BuildHeaders/Kiwi/NSInvocation+KiwiAdditions.h	/^@interface NSInvocation(KiwiAdditions)$/;"	i	interface:
NSInvocation	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^@interface NSInvocation(OCMAdditions)$/;"	i	interface:
NSInvocation	Example/Pods/Headers/Kiwi/KWExampleSuite.h	/^@interface NSInvocation (KWExampleGroup)$/;"	i	interface:
NSInvocation	Example/Pods/Headers/Kiwi/NSInvocation+KiwiAdditions.h	/^@interface NSInvocation(KiwiAdditions)$/;"	i	interface:
NSInvocation	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^@interface NSInvocation(OCMAdditions)$/;"	i	interface:
NSInvocation	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.h	/^@interface NSInvocation (KWExampleGroup)$/;"	i	interface:
NSInvocation	Example/Pods/Kiwi/Classes/Core/NSInvocation+KiwiAdditions.h	/^@interface NSInvocation(KiwiAdditions)$/;"	i	interface:
NSInvocation	Example/Pods/Kiwi/Classes/Core/NSInvocation+KiwiAdditions.m	/^@implementation NSInvocation(KiwiAdditions)$/;"	I	interface:
NSInvocation	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^@interface NSInvocation(OCMAdditions)$/;"	i	interface:
NSInvocation	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.m	/^@implementation NSInvocation(OCMAdditions)$/;"	I	interface:
NSLog	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    NSLog(@"+ '%@ %@' [%@]", [self descriptionForExampleContext], [self.exampleNode description], label);$/;"	p	interface:KWExample
NSLog	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.m	/^              __PRETTY_FUNCTION__, self.pattern, [error localizedDescription]);$/;"	p	interface:KWRegularExpressionPatternMatcher
NSMakeRange	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    NSArray *res = [regex matchesInString:callSite options:0 range:NSMakeRange(0, callSite.length)];$/;"	p	interface:KWExample
NSMakeRange	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.m	/^    NSRange subjectStringRange = NSMakeRange(0, subjectString.length);$/;"	p	interface:KWRegularExpressionPatternMatcher
NSMapTableStrongMemory	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        _messageSpies = [NSMapTable mapTableWithKeyOptions:NSMapTableStrongMemory valueOptions:NSMapTableStrongMemory];$/;"	p	interface:KWMock
NSMethodSignature	Example/Pods/BuildHeaders/Kiwi/NSMethodSignature+KiwiAdditions.h	/^@interface NSMethodSignature(KiwiAdditions)$/;"	i	interface:
NSMethodSignature	Example/Pods/Headers/Kiwi/NSMethodSignature+KiwiAdditions.h	/^@interface NSMethodSignature(KiwiAdditions)$/;"	i	interface:
NSMethodSignature	Example/Pods/Kiwi/Classes/Core/NSMethodSignature+KiwiAdditions.h	/^@interface NSMethodSignature(KiwiAdditions)$/;"	i	interface:
NSMethodSignature	Example/Pods/Kiwi/Classes/Core/NSMethodSignature+KiwiAdditions.m	/^@implementation NSMethodSignature(KiwiAdditions)$/;"	I	interface:
NSNotFound	Example/Pods/Kiwi/Classes/Matchers/KWStringContainsMatcher.m	/^    return [item rangeOfString:self.substring].location != NSNotFound;$/;"	p	interface:KWStringContainsMatcher
NSNumber	Example/Pods/BuildHeaders/Kiwi/NSNumber+KiwiAdditions.h	/^@interface NSNumber(KiwiAdditions)$/;"	i	interface:
NSNumber	Example/Pods/Headers/Kiwi/NSNumber+KiwiAdditions.h	/^@interface NSNumber(KiwiAdditions)$/;"	i	interface:
NSNumber	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.h	/^@interface NSNumber(KiwiAdditions)$/;"	i	interface:
NSNumber	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.m	/^@implementation NSNumber(KiwiAdditions)$/;"	I	interface:
NSObject	Example/Pods/BuildHeaders/Kiwi/KWGenericMatchingAdditions.h	/^@interface NSObject (KiwiGenericMatchingAdditions)$/;"	i	interface:
NSObject	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^@interface NSObject (KiwiVerifierMacroNames)$/;"	i	interface:
NSObject	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiMockAdditions.h	/^@interface NSObject(KiwiMockAdditions) <KiwiMockAdditions>$/;"	i	protocol:
NSObject	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiSpyAdditions.h	/^@interface NSObject (KiwiSpyAdditions) <KiwiSpyAdditions>$/;"	i	protocol:
NSObject	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^@interface NSObject(KiwiStubAdditions) <KiwiStubAdditions>$/;"	i	protocol:
NSObject	Example/Pods/Headers/Kiwi/KWGenericMatchingAdditions.h	/^@interface NSObject (KiwiGenericMatchingAdditions)$/;"	i	interface:
NSObject	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^@interface NSObject (KiwiVerifierMacroNames)$/;"	i	interface:
NSObject	Example/Pods/Headers/Kiwi/NSObject+KiwiMockAdditions.h	/^@interface NSObject(KiwiMockAdditions) <KiwiMockAdditions>$/;"	i	protocol:
NSObject	Example/Pods/Headers/Kiwi/NSObject+KiwiSpyAdditions.h	/^@interface NSObject (KiwiSpyAdditions) <KiwiSpyAdditions>$/;"	i	protocol:
NSObject	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^@interface NSObject(KiwiStubAdditions) <KiwiStubAdditions>$/;"	i	protocol:
NSObject	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^@interface NSObject (KiwiVerifierMacroNames)$/;"	i	interface:
NSObject	Example/Pods/Kiwi/Classes/Core/NSObject+KiwiSpyAdditions.h	/^@interface NSObject (KiwiSpyAdditions) <KiwiSpyAdditions>$/;"	i	protocol:
NSObject	Example/Pods/Kiwi/Classes/Core/NSObject+KiwiSpyAdditions.m	/^@implementation NSObject (KiwiSpyAdditions)$/;"	I	interface:
NSObject	Example/Pods/Kiwi/Classes/Core/NSObject+KiwiVerifierAdditions.m	/^@implementation NSObject(KiwiVerifierAdditions)$/;"	I	interface:
NSObject	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchingAdditions.h	/^@interface NSObject (KiwiGenericMatchingAdditions)$/;"	i	interface:
NSObject	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchingAdditions.m	/^@implementation NSObject (KiwiGenericMatchingAdditions)$/;"	I	interface:
NSObject	Example/Pods/Kiwi/Classes/Mocking/NSObject+KiwiMockAdditions.h	/^@interface NSObject(KiwiMockAdditions) <KiwiMockAdditions>$/;"	i	protocol:
NSObject	Example/Pods/Kiwi/Classes/Mocking/NSObject+KiwiMockAdditions.m	/^@implementation NSObject(KiwiMockAdditions)$/;"	I	interface:
NSObject	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^@interface NSObject(KiwiStubAdditions) <KiwiStubAdditions>$/;"	i	protocol:
NSObject	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^@implementation NSObject(KiwiStubAdditions)$/;"	I	interface:
NSOrderedSet	Example/Pods/BuildHeaders/Kiwi/KWGenericMatchingAdditions.h	/^@interface NSOrderedSet (KiwiGenericMatchingAdditions)$/;"	i	interface:
NSOrderedSet	Example/Pods/Headers/Kiwi/KWGenericMatchingAdditions.h	/^@interface NSOrderedSet (KiwiGenericMatchingAdditions)$/;"	i	interface:
NSOrderedSet	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchingAdditions.h	/^@interface NSOrderedSet (KiwiGenericMatchingAdditions)$/;"	i	interface:
NSOrderedSet	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchingAdditions.m	/^@implementation NSOrderedSet (KiwiGenericMatchingAdditions)$/;"	I	implementation:
NSProxy	Example/Pods/Kiwi/Classes/Core/NSProxy+KiwiVerifierAdditions.m	/^@implementation NSProxy (KiwiVerifierAdditions)$/;"	I	interface:
NSSelectorFromString	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^        SEL selector = NSSelectorFromString(@"retain");$/;"	p	interface:KWStub
NSSet	Example/Pods/BuildHeaders/Kiwi/KWGenericMatchingAdditions.h	/^@interface NSSet (KiwiGenericMatchingAdditions)$/;"	i	interface:
NSSet	Example/Pods/Headers/Kiwi/KWGenericMatchingAdditions.h	/^@interface NSSet (KiwiGenericMatchingAdditions)$/;"	i	interface:
NSSet	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchingAdditions.h	/^@interface NSSet (KiwiGenericMatchingAdditions)$/;"	i	interface:
NSSet	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchingAdditions.m	/^@implementation NSSet (KiwiGenericMatchingAdditions)$/;"	I	implementation:
NSString	Example/Pods/BuildHeaders/Kiwi/KWSymbolicator.h	/^@interface NSString (KWShellCommand)$/;"	i	interface:
NSString	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^typedef NSString * (^KWUserDefinedMatcherMessageBlock)(id);$/;"	p	interface:KWUserDefinedMatcher
NSString	Example/Pods/Headers/Kiwi/KWSymbolicator.h	/^@interface NSString (KWShellCommand)$/;"	i	interface:
NSString	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^typedef NSString * (^KWUserDefinedMatcherMessageBlock)(id);$/;"	p	interface:KWUserDefinedMatcher
NSString	Example/Pods/Kiwi/Classes/Core/KWSymbolicator.h	/^@interface NSString (KWShellCommand)$/;"	i	interface:
NSString	Example/Pods/Kiwi/Classes/Core/KWSymbolicator.m	/^@implementation NSString (KWShellCommand)$/;"	I	protocol:
NSString	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^typedef NSString * (^KWUserDefinedMatcherMessageBlock)(id);$/;"	p	interface:KWUserDefinedMatcher
NSStringFromClass	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^        NSString *className = NSStringFromClass(matcherClass);$/;"	p	interface:KWMatcherFactory
NSStringFromClass	Example/Pods/Kiwi/Classes/Matchers/KWBeKindOfClassMatcher.m	/^                                      NSStringFromClass([self.subject class])];$/;"	p	interface:KWBeKindOfClassMatcher
NSStringFromClass	Example/Pods/Kiwi/Classes/Matchers/KWBeKindOfClassMatcher.m	/^    return [NSString stringWithFormat:@"be kind of %@", NSStringFromClass(self.targetClass)];$/;"	p	interface:KWBeKindOfClassMatcher
NSStringFromClass	Example/Pods/Kiwi/Classes/Matchers/KWBeMemberOfClassMatcher.m	/^                                      NSStringFromClass([self.subject class])];$/;"	p	interface:KWBeMemberOfClassMatcher
NSStringFromClass	Example/Pods/Kiwi/Classes/Matchers/KWBeMemberOfClassMatcher.m	/^                                    NSStringFromClass(self.targetClass)];$/;"	p	interface:KWBeMemberOfClassMatcher
NSStringFromClass	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^                    format:@"A %@ already exists in this context.", NSStringFromClass([node class])];$/;"	p	interface:KWContextNode
NSStringFromProtocol	Example/Pods/Kiwi/Classes/Matchers/KWConformToProtocolMatcher.m	/^                                      NSStringFromProtocol(self.protocol)];$/;"	p	interface:KWConformToProtocolMatcher
NSStringFromProtocol	Example/Pods/Kiwi/Classes/Matchers/KWConformToProtocolMatcher.m	/^    return [NSString stringWithFormat:@"conform to %@ protocol", NSStringFromProtocol(self.protocol)];$/;"	p	interface:KWConformToProtocolMatcher
NSStringFromSelector	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^    NSArray *matcherClassChain = self.matcherClassChains[NSStringFromSelector(aSelector)];$/;"	p	interface:KWMatcherFactory
NSStringFromSelector	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^    NSMutableArray *matcherClassChain = self.matcherClassChains[NSStringFromSelector(aSelector)];$/;"	p	interface:KWMatcherFactory
NSStringFromSelector	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^        return NSStringFromSelector([self.invocation selector]);$/;"	p	interface:KWHaveMatcher
NSStringFromSelector	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^        NSString *selectorString = NSStringFromSelector(self.selector);$/;"	p	interface:KWUserDefinedMatcher
NSStringFromSelector	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^    return NSStringFromSelector(matcher.selector);$/;"	p	interface:KWUserDefinedMatcher
NSStringFromSelector	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    NSString *selectorString = NSStringFromSelector([anInvocation selector]);$/;"	p	interface:KWStub
NSStringFromSelector	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^                 NSStringFromSelector(anInvocation.selector)];$/;"	p	interface:KWMatchVerifier
NSTask_KWWarningSuppressor	Example/Pods/Kiwi/Classes/Core/KWSymbolicator.m	/^@protocol NSTask_KWWarningSuppressor$/;"	p	protocol:NSTask_KWWarningSuppressor
NSValue	Example/Pods/BuildHeaders/Kiwi/NSValue+KiwiAdditions.h	/^@interface NSValue(KiwiAdditions)$/;"	i	interface:
NSValue	Example/Pods/Headers/Kiwi/NSValue+KiwiAdditions.h	/^@interface NSValue(KiwiAdditions)$/;"	i	interface:
NSValue	Example/Pods/Kiwi/Classes/Core/NSValue+KiwiAdditions.h	/^@interface NSValue(KiwiAdditions)$/;"	i	interface:
NSValue	Example/Pods/Kiwi/Classes/Core/NSValue+KiwiAdditions.m	/^@implementation NSValue(KiwiAdditions)$/;"	I	interface:
NULL	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.m	/^			void* argumentBuffer = NULL;$/;"	p	interface:KWCaptureSpy
PodsDummy_Pods_Clappr	Example/Pods/Pods-Clappr-dummy.m	/^@implementation PodsDummy_Pods_Clappr$/;"	I	interface:
PodsDummy_Pods_Clappr	Example/Pods/Pods-Clappr-dummy.m	/^@interface PodsDummy_Pods_Clappr : NSObject$/;"	i	interface:
PodsDummy_Pods_Clappr_Clappr	Example/Pods/Pods-Clappr-Clappr-dummy.m	/^@implementation PodsDummy_Pods_Clappr_Clappr$/;"	I	interface:
PodsDummy_Pods_Clappr_Clappr	Example/Pods/Pods-Clappr-Clappr-dummy.m	/^@interface PodsDummy_Pods_Clappr_Clappr : NSObject$/;"	i	interface:
PodsDummy_Pods_Tests	Example/Pods/Pods-Tests-dummy.m	/^@implementation PodsDummy_Pods_Tests$/;"	I	interface:
PodsDummy_Pods_Tests	Example/Pods/Pods-Tests-dummy.m	/^@interface PodsDummy_Pods_Tests : NSObject$/;"	i	interface:
PodsDummy_Pods_Tests_Clappr	Example/Pods/Pods-Tests-Clappr-dummy.m	/^@implementation PodsDummy_Pods_Tests_Clappr$/;"	I	interface:
PodsDummy_Pods_Tests_Clappr	Example/Pods/Pods-Tests-Clappr-dummy.m	/^@interface PodsDummy_Pods_Tests_Clappr : NSObject$/;"	i	interface:
PodsDummy_Pods_Tests_Kiwi	Example/Pods/Pods-Tests-Kiwi-dummy.m	/^@implementation PodsDummy_Pods_Tests_Kiwi$/;"	I	interface:
PodsDummy_Pods_Tests_Kiwi	Example/Pods/Pods-Tests-Kiwi-dummy.m	/^@interface PodsDummy_Pods_Tests_Kiwi : NSObject$/;"	i	interface:
SPEC_BEGIN	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define SPEC_BEGIN(name) \\$/;"	M	interface:
SPEC_BEGIN	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define SPEC_BEGIN(name) \\$/;"	M	interface:
SPEC_BEGIN	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define SPEC_BEGIN(name) \\$/;"	M	interface:
SPEC_BEGIN	Example/Tests/Tests.m	/^SPEC_BEGIN(InitialTests)$/;"	f	interface:
SPEC_END	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define SPEC_END \\$/;"	M	interface:
SPEC_END	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define SPEC_END \\$/;"	M	interface:
SPEC_END	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define SPEC_END \\$/;"	M	interface:
StubSecondValueKey	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^            id secondValue = (anInvocationCapturer.userInfo)[StubSecondValueKey];$/;"	p	interface:KWMock
StubTag	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    NSDictionary *userInfo = @{ExpectOrStubTagKey: StubTag};$/;"	p	interface:KWMock
StubValueKey	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        id value = (anInvocationCapturer.userInfo)[StubValueKey];$/;"	p	interface:KWMock
UTF8String	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^        NSMethodSignature *methodSignature = [NSMethodSignature signatureWithObjCTypes:[KWEncodingForDefaultMethod() UTF8String]];$/;"	p	interface:KWExampleSuite
UTF8String	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    return [NSMethodSignature signatureWithObjCTypes:[encoding UTF8String]];$/;"	p	interface:KWHaveMatcher
UTF8String	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [NSMethodSignature signatureWithObjCTypes:[encoding UTF8String]];$/;"	p	interface:KWMock
UTF8String	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^    return [NSMethodSignature signatureWithObjCTypes:[encoding UTF8String]];$/;"	p	interface:KWMatchVerifier
XCTestSuite	Example/Pods/Kiwi/Classes/Config/KWAllTestsSuite.m	/^@implementation XCTestSuite (KWConfiguration)$/;"	I	interface:
XCTestSuite	Example/Pods/Kiwi/Classes/Config/KWAllTestsSuite.m	/^@interface XCTestSuite (KWConfiguration)$/;"	i	interface:
YES	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^        _passed = YES;$/;"	p	interface:KWExample
YES	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^      return YES;$/;"	p	interface:KWExample
YES	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    self.didNotFinish = YES;$/;"	p	interface:KWExample
YES	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^        return YES;$/;"	p	interface:KWExampleSuiteBuilder
YES	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^        self.focusedContextNode = YES;$/;"	p	interface:KWExampleSuiteBuilder
YES	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^        self.focusedItNode = YES;$/;"	p	interface:KWExampleSuiteBuilder
YES	Example/Pods/Kiwi/Classes/Core/KWProbePoller.m	/^    return YES;$/;"	p	interface:KWTimeout
YES	Example/Pods/Kiwi/Classes/Matchers/KWBeTrueMatcher.m	/^    self.expectedValue = YES;$/;"	p	interface:KWBeTrueMatcher
YES	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^        return YES;$/;"	p	interface:KWBlockRaiseMatcher
YES	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^    self.anyChange = YES;$/;"	p	interface:KWChangeMatcher
YES	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^    return YES;$/;"	p	interface:KWContainMatcher
YES	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^            matched = YES;$/;"	p	interface:KWHaveValueMatcher
YES	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^    return YES;$/;"	p	interface:KWNilMatcher
YES	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^    return [self verifySubjectExpectingNil:YES];$/;"	p	interface:KWNilMatcher
YES	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^    self.expectsNil = YES;$/;"	p	interface:KWNilMatcher
YES	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^                                        self.didReceiveNotification = YES;$/;"	p	interface:KWNotificationMatcher
YES	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^    return YES;$/;"	p	interface:KWNotificationMatcher
YES	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^        return YES;$/;"	p	interface:KWUserDefinedMatcher
YES	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^            return YES;$/;"	p	interface:KWMock
YES	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        _isPartialMock = YES;$/;"	p	interface:KWMock
YES	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    [self stubMessagePattern:aMessagePattern andReturn:aValue overrideExisting:YES];$/;"	p	interface:KWMock
YES	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    return YES;$/;"	p	interface:KWStub
YES	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^            specFailed = YES;$/;"	p	interface:KWMatchVerifier
YES	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^        [self.matcher setWillEvaluateAgainstNegativeExpectation:YES];$/;"	p	interface:KWMatchVerifier
YES	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^        specFailed = YES;$/;"	p	interface:KWMatchVerifier
aBlock	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^+ (id)matcherWithSubject:(id)aSubject block:(KWUserDefinedMatcherBlock)aBlock;$/;"	p	interface:KWUserDefinedMatcher
aBlock	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^- (id)initWithSubject:(id)aSubject block:(KWUserDefinedMatcherBlock)aBlock;$/;"	p	interface:KWUserDefinedMatcher
aBlock	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^+ (id)matcherWithSubject:(id)aSubject block:(KWUserDefinedMatcherBlock)aBlock;$/;"	p	interface:KWUserDefinedMatcher
aBlock	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^- (id)initWithSubject:(id)aSubject block:(KWUserDefinedMatcherBlock)aBlock;$/;"	p	interface:KWUserDefinedMatcher
aBlock	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^+ (id)matcherWithSubject:(id)aSubject block:(KWUserDefinedMatcherBlock)aBlock;$/;"	p	interface:KWUserDefinedMatcher
aBlock	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^- (id)initWithSubject:(id)aSubject block:(KWUserDefinedMatcherBlock)aBlock;$/;"	p	interface:KWUserDefinedMatcher
aBlock	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^    return [[self alloc] initWithSubject:aSubject block:aBlock];$/;"	p	interface:KWUserDefinedMatcher
aBlock	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^        _block = aBlock;$/;"	p	interface:KWStub
aBlock	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    return [[self alloc] initWithMessagePattern:aMessagePattern block:aBlock];$/;"	p	interface:KWStub
aCallSite	Example/Pods/BuildHeaders/Kiwi/KWCallSite.h	/^- (BOOL)isEqualToCallSite:(KWCallSite *)aCallSite;$/;"	p	interface:KWCallSite
aCallSite	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^- (id)addExistVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite;$/;"	p	interface:KWExample
aCallSite	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^- (id)addMatchVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite;$/;"	p	interface:KWExample
aCallSite	Example/Pods/Headers/Kiwi/KWCallSite.h	/^- (BOOL)isEqualToCallSite:(KWCallSite *)aCallSite;$/;"	p	interface:KWCallSite
aCallSite	Example/Pods/Headers/Kiwi/KWExample.h	/^- (id)addExistVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite;$/;"	p	interface:KWExample
aCallSite	Example/Pods/Headers/Kiwi/KWExample.h	/^- (id)addMatchVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite;$/;"	p	interface:KWExample
aCallSite	Example/Pods/Kiwi/Classes/Core/KWCallSite.h	/^- (BOOL)isEqualToCallSite:(KWCallSite *)aCallSite;$/;"	p	interface:KWCallSite
aCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^- (id)addExistVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite;$/;"	p	interface:KWExample
aCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^- (id)addMatchVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite;$/;"	p	interface:KWExample
aCallSite	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^    return [[[KWExampleSuiteBuilder sharedExampleSuiteBuilder] currentExample] addExistVerifierWithExpectationType:anExpectationType callSite:aCallSite];$/;"	p	interface:KWSpec
aCallSite	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^    return [[[KWExampleSuiteBuilder sharedExampleSuiteBuilder] currentExample] addMatchVerifierWithExpectationType:anExpectationType callSite:aCallSite];$/;"	p	interface:KWSpec
aCallSite	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^        _callSite = aCallSite;$/;"	p	interface:KWContextNode
aCallSite	Example/Pods/Kiwi/Classes/Verifiers/KWExistVerifier.m	/^        _callSite = aCallSite;$/;"	p	interface:KWExistVerifier
aCallSite	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^        _callSite = aCallSite;$/;"	p	interface:KWMatchVerifier
aClass	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^        [matcherClassChain removeObject:aClass];$/;"	p	interface:KWMatcherFactory
aClass	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^    [(NSMutableArray *)self.registeredMatcherClasses addObject:aClass];$/;"	p	interface:KWMatcherFactory
aClass	Example/Pods/Kiwi/Classes/Matchers/KWBeKindOfClassMatcher.m	/^    self.targetClass = aClass;$/;"	p	interface:KWBeKindOfClassMatcher
aClass	Example/Pods/Kiwi/Classes/Matchers/KWBeMemberOfClassMatcher.m	/^    self.targetClass = aClass;$/;"	p	interface:KWBeMemberOfClassMatcher
aClass	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        _mockedClass = aClass;$/;"	p	interface:KWMock
aClass	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [[self alloc] initAsNullMockForClass:aClass];$/;"	p	interface:KWMock
aClass	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [[self alloc] initAsNullMockWithName:aName forClass:aClass];$/;"	p	interface:KWMock
aClass	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [[self alloc] initForClass:aClass];$/;"	p	interface:KWMock
aClass	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [[self alloc] initWithName:aName forClass:aClass];$/;"	p	interface:KWMock
aClass	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [self mockedClassHasAncestorClass:aClass] || [super isKindOfClass:aClass];$/;"	p	interface:KWMock
aClass	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return self.mockedClass == aClass || [super isMemberOfClass:aClass];$/;"	p	interface:KWMock
aCount	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCount:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCountAtLeast:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCountAtMost:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withCount:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withCountAtLeast:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withCountAtMost:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (void)receiveMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue countType:(KWCountType)aCountType count:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (void)receiveMessagePattern:(KWMessagePattern *)aMessagePattern countType:(KWCountType)aCountType count:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCount:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCountAtLeast:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCountAtMost:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withCount:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withCountAtLeast:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withCountAtMost:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (void)receiveMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue countType:(KWCountType)aCountType count:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (void)receiveMessagePattern:(KWMessagePattern *)aMessagePattern countType:(KWCountType)aCountType count:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    NSDictionary *userInfo = [self userInfoForHaveMatcherWithCountType:KWCountTypeAtLeast count:aCount];$/;"	p	interface:KWHaveMatcher
aCount	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    NSDictionary *userInfo = [self userInfoForHaveMatcherWithCountType:KWCountTypeAtMost count:aCount];$/;"	p	interface:KWHaveMatcher
aCount	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    NSDictionary *userInfo = [self userInfoForHaveMatcherWithCountType:KWCountTypeExact count:aCount];$/;"	p	interface:KWHaveMatcher
aCount	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    self.count = aCount;$/;"	p	interface:KWHaveMatcher
aCount	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^  [self haveCountOf:aCount];$/;"	p	interface:KWHaveMatcher
aCount	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^  [self haveCountOfAtLeast:aCount];$/;"	p	interface:KWHaveMatcher
aCount	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^  [self haveCountOfAtMost:aCount];$/;"	p	interface:KWHaveMatcher
aCount	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCount:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCountAtLeast:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCountAtMost:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withCount:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withCountAtLeast:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withCountAtMost:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (void)receiveMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue countType:(KWCountType)aCountType count:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aCount	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (void)receiveMessagePattern:(KWMessagePattern *)aMessagePattern countType:(KWCountType)aCountType count:(NSUInteger)aCount;$/;"	p	interface:KWReceiveMatcher
aDescription	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^- (void)addPendingNodeWithCallSite:(KWCallSite *)aCallSite description:(NSString *)aDescription;$/;"	p	interface:KWExampleSuiteBuilder
aDescription	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^- (void)pushContextNodeWithCallSite:(KWCallSite *)aCallSite description:(NSString *)aDescription;$/;"	p	interface:KWExampleSuiteBuilder
aDescription	Example/Pods/BuildHeaders/Kiwi/KWPendingNode.h	/^+ (id)pendingNodeWithCallSite:(KWCallSite *)aCallSite context:(KWContextNode *)context description:(NSString *)aDescription;$/;"	p	interface:KWPendingNode
aDescription	Example/Pods/BuildHeaders/Kiwi/KWPendingNode.h	/^- (id)initWithCallSite:(KWCallSite *)aCallSite context:(KWContextNode *)context description:(NSString *)aDescription;$/;"	p	interface:KWPendingNode
aDescription	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^- (void)addPendingNodeWithCallSite:(KWCallSite *)aCallSite description:(NSString *)aDescription;$/;"	p	interface:KWExampleSuiteBuilder
aDescription	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^- (void)pushContextNodeWithCallSite:(KWCallSite *)aCallSite description:(NSString *)aDescription;$/;"	p	interface:KWExampleSuiteBuilder
aDescription	Example/Pods/Headers/Kiwi/KWPendingNode.h	/^+ (id)pendingNodeWithCallSite:(KWCallSite *)aCallSite context:(KWContextNode *)context description:(NSString *)aDescription;$/;"	p	interface:KWPendingNode
aDescription	Example/Pods/Headers/Kiwi/KWPendingNode.h	/^- (id)initWithCallSite:(KWCallSite *)aCallSite context:(KWContextNode *)context description:(NSString *)aDescription;$/;"	p	interface:KWPendingNode
aDescription	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    [[KWExampleSuiteBuilder sharedExampleSuiteBuilder] addPendingNodeWithCallSite:aCallSite description:aDescription];$/;"	p	interface:KWExample
aDescription	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    [[KWExampleSuiteBuilder sharedExampleSuiteBuilder] pushContextNodeWithCallSite:aCallSite description:aDescription];$/;"	p	interface:KWExample
aDescription	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^- (void)addPendingNodeWithCallSite:(KWCallSite *)aCallSite description:(NSString *)aDescription;$/;"	p	interface:KWExampleSuiteBuilder
aDescription	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^- (void)pushContextNodeWithCallSite:(KWCallSite *)aCallSite description:(NSString *)aDescription;$/;"	p	interface:KWExampleSuiteBuilder
aDescription	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    KWContextNode *node = [KWContextNode contextNodeWithCallSite:aCallSite parentContext:contextNode description:aDescription];$/;"	p	interface:KWExampleSuiteBuilder
aDescription	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    KWPendingNode *pendingNode = [KWPendingNode pendingNodeWithCallSite:aCallSite context:contextNode description:aDescription];$/;"	p	interface:KWExampleSuiteBuilder
aDescription	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^    return [[self alloc] initWithCallSite:aCallSite parentContext:contextNode description:aDescription];$/;"	p	interface:KWContextNode
aDescription	Example/Pods/Kiwi/Classes/Nodes/KWPendingNode.h	/^+ (id)pendingNodeWithCallSite:(KWCallSite *)aCallSite context:(KWContextNode *)context description:(NSString *)aDescription;$/;"	p	interface:KWPendingNode
aDescription	Example/Pods/Kiwi/Classes/Nodes/KWPendingNode.h	/^- (id)initWithCallSite:(KWCallSite *)aCallSite context:(KWContextNode *)context description:(NSString *)aDescription;$/;"	p	interface:KWPendingNode
aDistance	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^    self.distance = aDistance;$/;"	p	interface:KWBeWithinMatcher
aFocusedCallSite	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    _focusedCallSite = aFocusedCallSite;$/;"	p	interface:KWExampleSuiteBuilder
aLowerEndpoint	Example/Pods/Kiwi/Classes/Matchers/KWBeBetweenMatcher.m	/^    self.lowerEndpoint = aLowerEndpoint;$/;"	p	interface:KWBeBetweenMatcher
aMatcher	Example/Pods/BuildHeaders/Kiwi/KWAsyncVerifier.h	/^- (id)initWithMatcher:(id<KWMatching>)aMatcher;$/;"	p	interface:KWAsyncVerifier
aMatcher	Example/Pods/BuildHeaders/Kiwi/KWMatchVerifier.h	/^- (void)verifyWithMatcher:(id<KWMatching>)aMatcher;$/;"	p	protocol:KWMatching
aMatcher	Example/Pods/Headers/Kiwi/KWAsyncVerifier.h	/^- (id)initWithMatcher:(id<KWMatching>)aMatcher;$/;"	p	interface:KWAsyncVerifier
aMatcher	Example/Pods/Headers/Kiwi/KWMatchVerifier.h	/^- (void)verifyWithMatcher:(id<KWMatching>)aMatcher;$/;"	p	protocol:KWMatching
aMatcher	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatcher.m	/^    self.matcher = aMatcher;$/;"	p	interface:KWGenericMatcher
aMatcher	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatcher.m	/^- (void)match:(id)aMatcher;$/;"	p	interface:KWGenericMatcher
aMatcher	Example/Pods/Kiwi/Classes/Verifiers/KWAsyncVerifier.h	/^- (id)initWithMatcher:(id<KWMatching>)aMatcher;$/;"	p	interface:KWAsyncVerifier
aMatcher	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.h	/^- (void)verifyWithMatcher:(id<KWMatching>)aMatcher;$/;"	p	protocol:KWMatching
aMatcherFactory	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^        _matcherFactory = aMatcherFactory;$/;"	p	interface:KWMatchVerifier
aMessagePattern	Example/Pods/BuildHeaders/Kiwi/KWMessagePattern.h	/^- (BOOL)isEqualToMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	p	interface:KWMessagePattern
aMessagePattern	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (void)addMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	p	protocol:KWMessageSpying
aMessagePattern	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (void)expectMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	p	protocol:KWMessageSpying
aMessagePattern	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (void)removeMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	p	protocol:KWMessageSpying
aMessagePattern	Example/Pods/Headers/Kiwi/KWMessagePattern.h	/^- (BOOL)isEqualToMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	p	interface:KWMessagePattern
aMessagePattern	Example/Pods/Headers/Kiwi/KWMock.h	/^- (void)addMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	p	protocol:KWMessageSpying
aMessagePattern	Example/Pods/Headers/Kiwi/KWMock.h	/^- (void)expectMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	p	protocol:KWMessageSpying
aMessagePattern	Example/Pods/Headers/Kiwi/KWMock.h	/^- (void)removeMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	p	protocol:KWMessageSpying
aMessagePattern	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.h	/^- (BOOL)isEqualToMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	p	interface:KWMessagePattern
aMessagePattern	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (void)addMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	p	protocol:KWMessageSpying
aMessagePattern	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (void)expectMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	p	protocol:KWMessageSpying
aMessagePattern	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (void)removeMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	p	protocol:KWMessageSpying
aMessagePattern	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        [self.expectedMessagePatterns addObject:aMessagePattern];$/;"	p	interface:KWMock
aMessagePattern	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        [self.messageSpies setObject:messagePatternSpies forKey:aMessagePattern];$/;"	p	interface:KWMock
aMessagePattern	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    KWStub *existingStub = [self currentStubWithMessagePattern:aMessagePattern];$/;"	p	interface:KWMock
aMessagePattern	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    NSMutableArray *messagePatternSpies = [self.messageSpies objectForKey:aMessagePattern];$/;"	p	interface:KWMock
aMessagePattern	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    [self expectMessagePattern:aMessagePattern];$/;"	p	interface:KWMock
aMessagePattern	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    [self removeStubWithMessagePattern:aMessagePattern];$/;"	p	interface:KWMock
aMessagePattern	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^        messagePattern = aMessagePattern;$/;"	p	interface:KWStub
aNamespacePrefix	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^- (void)setRegisterMatchersNodeWithCallSite:(KWCallSite *)aCallSite namespacePrefix:(NSString *)aNamespacePrefix;$/;"	p	interface:KWExampleSuiteBuilder
aNamespacePrefix	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^- (void)setRegisterMatchersNodeWithCallSite:(KWCallSite *)aCallSite namespacePrefix:(NSString *)aNamespacePrefix;$/;"	p	interface:KWExampleSuiteBuilder
aNamespacePrefix	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    [[KWExampleSuiteBuilder sharedExampleSuiteBuilder] setRegisterMatchersNodeWithCallSite:aCallSite namespacePrefix:aNamespacePrefix];$/;"	p	interface:KWExample
aNamespacePrefix	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^- (void)setRegisterMatchersNodeWithCallSite:(KWCallSite *)aCallSite namespacePrefix:(NSString *)aNamespacePrefix;$/;"	p	interface:KWExampleSuiteBuilder
aNamespacePrefix	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    KWRegisterMatchersNode *registerMatchersNode = [KWRegisterMatchersNode registerMatchersNodeWithCallSite:aCallSite namespacePrefix:aNamespacePrefix];$/;"	p	interface:KWExampleSuiteBuilder
aNode	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^- (void)addContextNode:(KWContextNode *)aNode;$/;"	p	interface:KWContextNode
aNode	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^- (void)addItNode:(KWItNode *)aNode;$/;"	p	interface:KWContextNode
aNode	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^- (void)addLetNode:(KWLetNode *)aNode;$/;"	p	interface:KWContextNode
aNode	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^- (void)addPendingNode:(KWPendingNode *)aNode;$/;"	p	interface:KWContextNode
aNode	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^- (void)addRegisterMatchersNode:(KWRegisterMatchersNode *)aNode;$/;"	p	interface:KWContextNode
aNode	Example/Pods/BuildHeaders/Kiwi/KWLetNode.h	/^- (void)addLetNode:(KWLetNode *)aNode;$/;"	p	interface:KWLetNode
aNode	Example/Pods/Headers/Kiwi/KWContextNode.h	/^- (void)addContextNode:(KWContextNode *)aNode;$/;"	p	interface:KWContextNode
aNode	Example/Pods/Headers/Kiwi/KWContextNode.h	/^- (void)addItNode:(KWItNode *)aNode;$/;"	p	interface:KWContextNode
aNode	Example/Pods/Headers/Kiwi/KWContextNode.h	/^- (void)addLetNode:(KWLetNode *)aNode;$/;"	p	interface:KWContextNode
aNode	Example/Pods/Headers/Kiwi/KWContextNode.h	/^- (void)addPendingNode:(KWPendingNode *)aNode;$/;"	p	interface:KWContextNode
aNode	Example/Pods/Headers/Kiwi/KWContextNode.h	/^- (void)addRegisterMatchersNode:(KWRegisterMatchersNode *)aNode;$/;"	p	interface:KWContextNode
aNode	Example/Pods/Headers/Kiwi/KWLetNode.h	/^- (void)addLetNode:(KWLetNode *)aNode;$/;"	p	interface:KWLetNode
aNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^- (void)addContextNode:(KWContextNode *)aNode;$/;"	p	interface:KWContextNode
aNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^- (void)addItNode:(KWItNode *)aNode;$/;"	p	interface:KWContextNode
aNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^- (void)addLetNode:(KWLetNode *)aNode;$/;"	p	interface:KWContextNode
aNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^- (void)addPendingNode:(KWPendingNode *)aNode;$/;"	p	interface:KWContextNode
aNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^- (void)addRegisterMatchersNode:(KWRegisterMatchersNode *)aNode;$/;"	p	interface:KWContextNode
aNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^    [(NSMutableArray *)self.letNodes addObject:aNode];$/;"	p	interface:KWContextNode
aNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^    [(NSMutableArray *)self.nodes addObject:aNode];$/;"	p	interface:KWContextNode
aNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^    [(NSMutableArray *)self.registerMatchersNodes addObject:aNode];$/;"	p	interface:KWContextNode
aNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^    _afterEachNode = aNode;$/;"	p	interface:KWContextNode
aNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^    _beforeEachNode = aNode;$/;"	p	interface:KWContextNode
aNode	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.h	/^- (void)addLetNode:(KWLetNode *)aNode;$/;"	p	interface:KWLetNode
aNode	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^            [self addChild:aNode];$/;"	p	interface:KWLetNode
aNode	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^            [self.next addLetNode:aNode];$/;"	p	interface:KWLetNode
aNode	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^            self.next = aNode;$/;"	p	interface:KWLetNode
aNode	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^        [self.child addChild:aNode];$/;"	p	interface:KWLetNode
aNode	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^        self.child = aNode;$/;"	p	interface:KWLetNode
aNode	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    _child = aNode;$/;"	p	interface:KWLetNode
aNode	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    _next = aNode;$/;"	p	interface:KWLetNode
aPrefix	Example/Pods/Kiwi/Classes/Matchers/KWStringPrefixMatcher.m	/^    return [[self alloc] initWithPrefix:aPrefix];$/;"	p	interface:KWStringPrefixMatcher
aProbe	Example/Pods/BuildHeaders/Kiwi/KWAsyncVerifier.h	/^- (void)verifyWithProbe:(KWAsyncMatcherProbe *)aProbe;$/;"	p	interface:KWAsyncVerifier
aProbe	Example/Pods/Headers/Kiwi/KWAsyncVerifier.h	/^- (void)verifyWithProbe:(KWAsyncMatcherProbe *)aProbe;$/;"	p	interface:KWAsyncVerifier
aProbe	Example/Pods/Kiwi/Classes/Verifiers/KWAsyncVerifier.h	/^- (void)verifyWithProbe:(KWAsyncMatcherProbe *)aProbe;$/;"	p	interface:KWAsyncVerifier
aProtocol	Example/Pods/Kiwi/Classes/Matchers/KWConformToProtocolMatcher.m	/^    self.protocol = aProtocol;$/;"	p	interface:KWConformToProtocolMatcher
aProtocol	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^           [super conformsToProtocol:aProtocol];$/;"	p	interface:KWMock
aProtocol	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        _mockedProtocol = aProtocol;$/;"	p	interface:KWMock
aProtocol	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [[self alloc] initAsNullMockForProtocol:aProtocol];$/;"	p	interface:KWMock
aProtocol	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [[self alloc] initAsNullMockWithName:aName forProtocol:aProtocol];$/;"	p	interface:KWMock
aProtocol	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [[self alloc] initForProtocol:aProtocol];$/;"	p	interface:KWMock
aProtocol	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [[self alloc] initWithName:aName forProtocol:aProtocol];$/;"	p	interface:KWMock
aProtocol	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [self initAsNullMock:NO withName:aName forClass:nil protocol:aProtocol];$/;"	p	interface:KWMock
aProtocol	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [self initAsNullMock:NO withName:nil forClass:nil protocol:aProtocol];$/;"	p	interface:KWMock
aProtocol	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [self initAsNullMock:YES withName:aName forClass:nil protocol:aProtocol];$/;"	p	interface:KWMock
aProtocol	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [self initAsNullMock:YES withName:nil forClass:nil protocol:aProtocol];$/;"	p	interface:KWMock
aProtocol	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [self.mockedClass conformsToProtocol:aProtocol];$/;"	p	interface:KWMock
aReason	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^    [self raiseWithName:nil reason:aReason];$/;"	p	interface:KWBlockRaiseMatcher
aReporter	Example/Pods/BuildHeaders/Kiwi/KWMatchVerifier.h	/^+ (id<KWVerifying>)matchVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite matcherFactory:(KWMatcherFactory *)aMatcherFactory reporter:(id<KWReporting>)aReporter;$/;"	p	protocol:KWMatching
aReporter	Example/Pods/BuildHeaders/Kiwi/KWMatchVerifier.h	/^- (id)initForShouldNotWithCallSite:(KWCallSite *)aCallSite matcherFactory:(KWMatcherFactory *)aMatcherFactory reporter:(id<KWReporting>)aReporter;$/;"	p	protocol:KWMatching
aReporter	Example/Pods/BuildHeaders/Kiwi/KWMatchVerifier.h	/^- (id)initForShouldWithCallSite:(KWCallSite *)aCallSite matcherFactory:(KWMatcherFactory *)aMatcherFactory reporter:(id<KWReporting>)aReporter;$/;"	p	protocol:KWMatching
aReporter	Example/Pods/BuildHeaders/Kiwi/KWMatchVerifier.h	/^- (id)initWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite matcherFactory:(KWMatcherFactory *)aMatcherFactory reporter:(id<KWReporting>)aReporter;$/;"	p	protocol:KWMatching
aReporter	Example/Pods/Headers/Kiwi/KWMatchVerifier.h	/^+ (id<KWVerifying>)matchVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite matcherFactory:(KWMatcherFactory *)aMatcherFactory reporter:(id<KWReporting>)aReporter;$/;"	p	protocol:KWMatching
aReporter	Example/Pods/Headers/Kiwi/KWMatchVerifier.h	/^- (id)initForShouldNotWithCallSite:(KWCallSite *)aCallSite matcherFactory:(KWMatcherFactory *)aMatcherFactory reporter:(id<KWReporting>)aReporter;$/;"	p	protocol:KWMatching
aReporter	Example/Pods/Headers/Kiwi/KWMatchVerifier.h	/^- (id)initForShouldWithCallSite:(KWCallSite *)aCallSite matcherFactory:(KWMatcherFactory *)aMatcherFactory reporter:(id<KWReporting>)aReporter;$/;"	p	protocol:KWMatching
aReporter	Example/Pods/Headers/Kiwi/KWMatchVerifier.h	/^- (id)initWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite matcherFactory:(KWMatcherFactory *)aMatcherFactory reporter:(id<KWReporting>)aReporter;$/;"	p	protocol:KWMatching
aReporter	Example/Pods/Kiwi/Classes/Verifiers/KWExistVerifier.m	/^        _reporter = aReporter;$/;"	p	interface:KWExistVerifier
aReporter	Example/Pods/Kiwi/Classes/Verifiers/KWExistVerifier.m	/^    return [[self alloc] initWithExpectationType:anExpectationType callSite:aCallSite reporter:aReporter];$/;"	p	interface:KWExistVerifier
aReporter	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.h	/^+ (id<KWVerifying>)matchVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite matcherFactory:(KWMatcherFactory *)aMatcherFactory reporter:(id<KWReporting>)aReporter;$/;"	p	protocol:KWMatching
aReporter	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.h	/^- (id)initForShouldNotWithCallSite:(KWCallSite *)aCallSite matcherFactory:(KWMatcherFactory *)aMatcherFactory reporter:(id<KWReporting>)aReporter;$/;"	p	protocol:KWMatching
aReporter	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.h	/^- (id)initForShouldWithCallSite:(KWCallSite *)aCallSite matcherFactory:(KWMatcherFactory *)aMatcherFactory reporter:(id<KWReporting>)aReporter;$/;"	p	protocol:KWMatching
aReporter	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.h	/^- (id)initWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite matcherFactory:(KWMatcherFactory *)aMatcherFactory reporter:(id<KWReporting>)aReporter;$/;"	p	protocol:KWMatching
aReporter	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^        _example = (KWExample *)aReporter;$/;"	p	interface:KWMatchVerifier
aReporter	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^        _reporter = aReporter;$/;"	p	interface:KWMatchVerifier
aReporter	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^    return [[self alloc] initWithExpectationType:anExpectationType callSite:aCallSite matcherFactory:aMatcherFactory reporter:aReporter];$/;"	p	interface:KWMatchVerifier
aReporter	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^    return [self initWithExpectationType:KWExpectationTypeShould callSite:aCallSite matcherFactory:aMatcherFactory reporter:aReporter];$/;"	p	interface:KWMatchVerifier
aReporter	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^    return [self initWithExpectationType:KWExpectationTypeShouldNot callSite:aCallSite matcherFactory:aMatcherFactory reporter:aReporter];$/;"	p	interface:KWMatchVerifier
aSecondValue	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (id)stubAndReturn:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue;$/;"	p	protocol:KWMessageSpying
aSecondValue	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue;$/;"	p	protocol:KWMessageSpying
aSecondValue	Example/Pods/Headers/Kiwi/KWMock.h	/^- (id)stubAndReturn:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue;$/;"	p	protocol:KWMessageSpying
aSecondValue	Example/Pods/Headers/Kiwi/KWMock.h	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue;$/;"	p	protocol:KWMessageSpying
aSecondValue	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (id)stubAndReturn:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue;$/;"	p	protocol:KWMessageSpying
aSecondValue	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue;$/;"	p	protocol:KWMessageSpying
aSecondValue	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    KWStub *stub = [KWStub stubWithMessagePattern:aMessagePattern value:aValue times:times afterThatReturn:aSecondValue];$/;"	p	interface:KWMock
aSecondValue	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    NSDictionary *userInfo = @{ExpectOrStubTagKey: StubTag, StubValueKey: aValue, ChangeStubValueAfterTimesKey: times, StubSecondValueKey: aSecondValue};$/;"	p	interface:KWMock
aSecondValue	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^        secondValue = aSecondValue;$/;"	p	interface:KWStub
aSecondValue	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    return [[self alloc] initWithMessagePattern:aMessagePattern value:aValue times:times afterThatReturn:aSecondValue];$/;"	p	interface:KWStub
aSelector	Example/Pods/BuildHeaders/Kiwi/KWInvocationCapturer.h	/^- (NSMethodSignature *)invocationCapturer:(KWInvocationCapturer *)anInvocationCapturer methodSignatureForSelector:(SEL)aSelector;$/;"	p	protocol:KWInvocationCapturerDelegate
aSelector	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (void)expect:(SEL)aSelector;$/;"	p	protocol:KWMessageSpying
aSelector	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (void)stub:(SEL)aSelector;$/;"	p	protocol:KWMessageSpying
aSelector	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector;$/;"	p	interface:KWReceiveMatcher
aSelector	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^+ (id)builderForSelector:(SEL)aSelector;$/;"	p	interface:KWUserDefinedMatcher
aSelector	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^- (id)initWithSelector:(SEL)aSelector;$/;"	p	interface:KWUserDefinedMatcher
aSelector	Example/Pods/Headers/Kiwi/KWInvocationCapturer.h	/^- (NSMethodSignature *)invocationCapturer:(KWInvocationCapturer *)anInvocationCapturer methodSignatureForSelector:(SEL)aSelector;$/;"	p	protocol:KWInvocationCapturerDelegate
aSelector	Example/Pods/Headers/Kiwi/KWMock.h	/^- (void)expect:(SEL)aSelector;$/;"	p	protocol:KWMessageSpying
aSelector	Example/Pods/Headers/Kiwi/KWMock.h	/^- (void)stub:(SEL)aSelector;$/;"	p	protocol:KWMessageSpying
aSelector	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector;$/;"	p	interface:KWReceiveMatcher
aSelector	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^+ (id)builderForSelector:(SEL)aSelector;$/;"	p	interface:KWUserDefinedMatcher
aSelector	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^- (id)initWithSelector:(SEL)aSelector;$/;"	p	interface:KWUserDefinedMatcher
aSelector	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.h	/^- (NSMethodSignature *)invocationCapturer:(KWInvocationCapturer *)anInvocationCapturer methodSignatureForSelector:(SEL)aSelector;$/;"	p	protocol:KWInvocationCapturerDelegate
aSelector	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^    return [matcherClass instanceMethodSignatureForSelector:aSelector];$/;"	p	interface:KWMatcherFactory
aSelector	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^        return [verifier.subject methodSignatureForSelector:aSelector];$/;"	p	interface:KWHaveMatcher
aSelector	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector;$/;"	p	interface:KWReceiveMatcher
aSelector	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^+ (id)builderForSelector:(SEL)aSelector;$/;"	p	interface:KWUserDefinedMatcher
aSelector	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^- (id)initWithSelector:(SEL)aSelector;$/;"	p	interface:KWUserDefinedMatcher
aSelector	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^        matcher.selector = aSelector;$/;"	p	interface:KWUserDefinedMatcher
aSelector	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^    return [[self alloc] initWithSelector:aSelector];$/;"	p	interface:KWUserDefinedMatcher
aSelector	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^    return [super methodSignatureForSelector:aSelector];$/;"	p	interface:KWUserDefinedMatcher
aSelector	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^    return [super respondsToSelector:aSelector];$/;"	p	interface:KWUserDefinedMatcher
aSelector	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (void)expect:(SEL)aSelector;$/;"	p	protocol:KWMessageSpying
aSelector	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (void)stub:(SEL)aSelector;$/;"	p	protocol:KWMessageSpying
aSelector	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^           [super respondsToSelector:aSelector];$/;"	p	interface:KWMock
aSelector	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    KWMessagePattern *messagePattern = [KWMessagePattern messagePatternWithSelector:aSelector];$/;"	p	interface:KWMock
aSelector	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    NSMethodSignature *methodSignature = [self.mockedClass instanceMethodSignatureForSelector:aSelector];$/;"	p	interface:KWMock
aSelector	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    methodSignature = [self mockedProtocolMethodSignatureForSelector:aSelector];$/;"	p	interface:KWMock
aSelector	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [self methodSignatureForSelector:aSelector];$/;"	p	interface:KWMock
aSelector	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [self.mockedClass instancesRespondToSelector:aSelector];$/;"	p	interface:KWMock
aSelector	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^    NSMethodSignature *signature = [super methodSignatureForSelector:aSelector];$/;"	p	interface:KWMatchVerifier
aSelector	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^    signature = [self.matcherFactory methodSignatureForMatcherSelector:aSelector];$/;"	p	interface:KWMatchVerifier
aSpy	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        [messagePatternSpies addObject:aSpy];$/;"	p	interface:KWMock
aSpy	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    [messagePatternSpies removeObject:aSpy];$/;"	p	interface:KWMock
aSubject	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^    self = [super initWithSubject:aSubject];$/;"	p	interface:KWUserDefinedMatcher
aSubstring	Example/Pods/Kiwi/Classes/Matchers/KWStringContainsMatcher.m	/^  return [[self alloc] initWithSubstring:aSubstring];$/;"	p	interface:KWStringContainsMatcher
aSymbolName	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    NSString *aDescription = [NSString stringWithUTF8String:aSymbolName];$/;"	p	interface:KWExample
aValue	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (id)stubAndReturn:(id)aValue;$/;"	p	protocol:KWMessageSpying
aValue	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (void)stub:(SEL)aSelector andReturn:(id)aValue;$/;"	p	protocol:KWMessageSpying
aValue	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue;$/;"	p	protocol:KWMessageSpying
aValue	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue;$/;"	p	interface:KWReceiveMatcher
aValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (BOOL)isEqualToKWValue:(KWValue *)aValue;$/;"	p	interface:KWValue
aValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (BOOL)isEqualToNumber:(NSNumber *)aValue;$/;"	p	interface:KWValue
aValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSComparisonResult)compare:(KWValue *)aValue;$/;"	p	interface:KWValue
aValue	Example/Pods/Headers/Kiwi/KWMock.h	/^- (id)stubAndReturn:(id)aValue;$/;"	p	protocol:KWMessageSpying
aValue	Example/Pods/Headers/Kiwi/KWMock.h	/^- (void)stub:(SEL)aSelector andReturn:(id)aValue;$/;"	p	protocol:KWMessageSpying
aValue	Example/Pods/Headers/Kiwi/KWMock.h	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue;$/;"	p	protocol:KWMessageSpying
aValue	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue;$/;"	p	interface:KWReceiveMatcher
aValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (BOOL)isEqualToKWValue:(KWValue *)aValue;$/;"	p	interface:KWValue
aValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (BOOL)isEqualToNumber:(NSNumber *)aValue;$/;"	p	interface:KWValue
aValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSComparisonResult)compare:(KWValue *)aValue;$/;"	p	interface:KWValue
aValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (BOOL)isEqualToKWValue:(KWValue *)aValue;$/;"	p	interface:KWValue
aValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (BOOL)isEqualToNumber:(NSNumber *)aValue;$/;"	p	interface:KWValue
aValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSComparisonResult)compare:(KWValue *)aValue;$/;"	p	interface:KWValue
aValue	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^    [self beWithin:[KWValue valueWithDouble:aDelta] of:[KWValue valueWithDouble:aValue]];$/;"	p	interface:KWBeWithinMatcher
aValue	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^    self.otherValue = aValue;$/;"	p	interface:KWBeWithinMatcher
aValue	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^    self.otherValue = aValue;$/;"	p	interface:KWInequalityMatcher
aValue	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue;$/;"	p	interface:KWReceiveMatcher
aValue	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (id)stubAndReturn:(id)aValue;$/;"	p	protocol:KWMessageSpying
aValue	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (void)stub:(SEL)aSelector andReturn:(id)aValue;$/;"	p	protocol:KWMessageSpying
aValue	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue;$/;"	p	protocol:KWMessageSpying
aValue	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^                                                                        StubValueKey: aValue};$/;"	p	interface:KWMock
aValue	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    KWStub *stub = [KWStub stubWithMessagePattern:aMessagePattern value:aValue];$/;"	p	interface:KWMock
aValue	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    [self stubMessagePattern:messagePattern andReturn:aValue];$/;"	p	interface:KWMock
aValue	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^        value = aValue;$/;"	p	interface:KWStub
aValue	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    return [[self alloc] initWithMessagePattern:aMessagePattern value:aValue];$/;"	p	interface:KWStub
aVerifier	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^- (id)addVerifier:(id<KWVerifying>)aVerifier;$/;"	p	interface:KWExample
aVerifier	Example/Pods/Headers/Kiwi/KWExample.h	/^- (id)addVerifier:(id<KWVerifying>)aVerifier;$/;"	p	interface:KWExample
aVerifier	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^- (id)addVerifier:(id<KWVerifying>)aVerifier;$/;"	p	interface:KWExample
aVerifier	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    [self.verifiers addObject:aVerifier];$/;"	p	interface:KWExample
aVerifier	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^  return aVerifier;$/;"	p	interface:KWExample
aVerifier	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^    return [[[KWExampleSuiteBuilder sharedExampleSuiteBuilder] currentExample] addVerifier:aVerifier];$/;"	p	interface:KWSpec
aVisitor	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^- (void)acceptExampleNodeVisitor:(id<KWExampleNodeVisitor>)aVisitor;$/;"	p	interface:KWContextNode
aVisitor	Example/Pods/Headers/Kiwi/KWContextNode.h	/^- (void)acceptExampleNodeVisitor:(id<KWExampleNodeVisitor>)aVisitor;$/;"	p	interface:KWContextNode
aVisitor	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^- (void)acceptExampleNodeVisitor:(id<KWExampleNodeVisitor>)aVisitor;$/;"	p	interface:KWContextNode
acceptExampleNodeVisitor:	Example/Pods/BuildHeaders/Kiwi/KWExampleNode.h	/^- (void)acceptExampleNodeVisitor:(id<KWExampleNodeVisitor>)aVisitor;$/;"	m	protocol:KWExampleNodeVisitor
acceptExampleNodeVisitor:	Example/Pods/Headers/Kiwi/KWExampleNode.h	/^- (void)acceptExampleNodeVisitor:(id<KWExampleNodeVisitor>)aVisitor;$/;"	m	protocol:KWExampleNodeVisitor
acceptExampleNodeVisitor:	Example/Pods/Kiwi/Classes/Nodes/KWAfterAllNode.m	/^- (void)acceptExampleNodeVisitor:(id<KWExampleNodeVisitor>)aVisitor {$/;"	m	implementation:KWAfterAllNode
acceptExampleNodeVisitor:	Example/Pods/Kiwi/Classes/Nodes/KWAfterEachNode.m	/^- (void)acceptExampleNodeVisitor:(id<KWExampleNodeVisitor>)aVisitor {$/;"	m	implementation:KWAfterEachNode
acceptExampleNodeVisitor:	Example/Pods/Kiwi/Classes/Nodes/KWBeforeAllNode.m	/^- (void)acceptExampleNodeVisitor:(id<KWExampleNodeVisitor>)aVisitor {$/;"	m	implementation:KWBeforeAllNode
acceptExampleNodeVisitor:	Example/Pods/Kiwi/Classes/Nodes/KWBeforeEachNode.m	/^- (void)acceptExampleNodeVisitor:(id<KWExampleNodeVisitor>)aVisitor {$/;"	m	implementation:KWBeforeEachNode
acceptExampleNodeVisitor:	Example/Pods/Kiwi/Classes/Nodes/KWExampleNode.h	/^- (void)acceptExampleNodeVisitor:(id<KWExampleNodeVisitor>)aVisitor;$/;"	m	protocol:KWExampleNodeVisitor
acceptExampleNodeVisitor:	Example/Pods/Kiwi/Classes/Nodes/KWPendingNode.m	/^- (void)acceptExampleNodeVisitor:(id<KWExampleNodeVisitor>)aVisitor {$/;"	m	implementation:KWPendingNode
acceptExampleNodeVisitor:	Example/Pods/Kiwi/Classes/Nodes/KWRegisterMatchersNode.m	/^- (void)acceptExampleNodeVisitor:(id<KWExampleNodeVisitor>)aVisitor {$/;"	m	implementation:KWRegisterMatchersNode
actualCount	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^        return [NSString stringWithFormat:@"%u items", (unsigned)self.actualCount];$/;"	p	interface:KWHaveMatcher
actualCount	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^        self.actualCount = 0;$/;"	p	interface:KWHaveMatcher
actualCount	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^@property (nonatomic, assign) NSUInteger actualCount;$/;"	p	interface:KWHaveMatcher
actualCountPhrase	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^                                      [self actualCountPhrase]];$/;"	p	interface:KWHaveMatcher
actualException	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^                                      [[self class] exceptionPhraseWithException:self.actualException]];$/;"	p	interface:KWBlockRaiseMatcher
actualException	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^@property (nonatomic, readwrite, strong) NSException *actualException;$/;"	p	interface:KWBlockRaiseMatcher
actualMatcher	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^    return [NSString stringWithFormat:@"%@ %@", typeString, actualMatcher];$/;"	p	interface:KWMatchVerifier
actualTotal	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^        return [NSString stringWithFormat:@"expected subject not to change the count to %d", (int)self.actualTotal];$/;"	p	interface:KWChangeMatcher
actualTotal	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^        return [NSString stringWithFormat:@"expected subject to change the count to %d, got %d", (int)self.expectedTotal, (int)self.actualTotal];$/;"	p	interface:KWChangeMatcher
actualTotal	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^        return before != self.actualTotal;$/;"	p	interface:KWChangeMatcher
actualTotal	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^        return self.expectedTotal == self.actualTotal;$/;"	p	interface:KWChangeMatcher
actualTotal	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^@property (nonatomic, assign) NSInteger expectedDifference, expectedTotal, actualTotal;$/;"	p	interface:KWChangeMatcher
addAsyncVerifierWithExpectationType:callSite:timeout:shouldWait:	Example/Pods/BuildHeaders/Kiwi/KWSpec.h	/^+ (id)addAsyncVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite timeout:(NSTimeInterval)timeout shouldWait:(BOOL)shouldWait;$/;"	c	interface:KWSpec
addAsyncVerifierWithExpectationType:callSite:timeout:shouldWait:	Example/Pods/Headers/Kiwi/KWSpec.h	/^+ (id)addAsyncVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite timeout:(NSTimeInterval)timeout shouldWait:(BOOL)shouldWait;$/;"	c	interface:KWSpec
addAsyncVerifierWithExpectationType:callSite:timeout:shouldWait:	Example/Pods/Kiwi/Classes/Core/KWSpec.h	/^+ (id)addAsyncVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite timeout:(NSTimeInterval)timeout shouldWait:(BOOL)shouldWait;$/;"	c	interface:KWSpec
addExample:	Example/Pods/BuildHeaders/Kiwi/KWExampleSuite.h	/^- (void)addExample:(KWExample *)example;$/;"	m	interface:KWExampleSuite
addExample:	Example/Pods/Headers/Kiwi/KWExampleSuite.h	/^- (void)addExample:(KWExample *)example;$/;"	m	interface:KWExampleSuite
addExample:	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.h	/^- (void)addExample:(KWExample *)example;$/;"	m	interface:KWExampleSuite
addExistVerifierWithExpectationType:callSite:	Example/Pods/BuildHeaders/Kiwi/KWSpec.h	/^+ (id)addExistVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite;$/;"	c	interface:KWSpec
addExistVerifierWithExpectationType:callSite:	Example/Pods/Headers/Kiwi/KWSpec.h	/^+ (id)addExistVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite;$/;"	c	interface:KWSpec
addExistVerifierWithExpectationType:callSite:	Example/Pods/Kiwi/Classes/Core/KWSpec.h	/^+ (id)addExistVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite;$/;"	c	interface:KWSpec
addMatchVerifierWithExpectationType:callSite:	Example/Pods/BuildHeaders/Kiwi/KWSpec.h	/^+ (id)addMatchVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite;$/;"	c	interface:KWSpec
addMatchVerifierWithExpectationType:callSite:	Example/Pods/Headers/Kiwi/KWSpec.h	/^+ (id)addMatchVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite;$/;"	c	interface:KWSpec
addMatchVerifierWithExpectationType:callSite:	Example/Pods/Kiwi/Classes/Core/KWSpec.h	/^+ (id)addMatchVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite;$/;"	c	interface:KWSpec
addMessageSpy:forMessagePattern:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)addMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	c	protocol:KWMessageSpying
addMessageSpy:forMessagePattern:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)addMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	m	protocol:KWMessageSpying
addMessageSpy:forMessagePattern:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)addMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	c	protocol:KWMessageSpying
addMessageSpy:forMessagePattern:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)addMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	m	protocol:KWMessageSpying
addMessageSpy:forMessagePattern:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^+ (void)addMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	c	protocol:KWMessageSpying
addMessageSpy:forMessagePattern:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^- (void)addMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	m	protocol:KWMessageSpying
addMessageSpy:forMessagePattern:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^+ (void)addMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern {$/;"	c	implementation:NSObject
addMessageSpy:forMessagePattern:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^- (void)addMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern {$/;"	m	implementation:NSObject
addObserver	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^    [self addObserver];$/;"	p	interface:KWNotificationMatcher
addUserDefinedMatcherBuilder:	Example/Pods/BuildHeaders/Kiwi/KWMatchers.h	/^- (void)addUserDefinedMatcherBuilder:(KWUserDefinedMatcherBuilder *)builder;$/;"	m	interface:KWMatchers
addUserDefinedMatcherBuilder:	Example/Pods/Headers/Kiwi/KWMatchers.h	/^- (void)addUserDefinedMatcherBuilder:(KWUserDefinedMatcherBuilder *)builder;$/;"	m	interface:KWMatchers
addUserDefinedMatcherBuilder:	Example/Pods/Kiwi/Classes/Core/KWMatchers.h	/^- (void)addUserDefinedMatcherBuilder:(KWUserDefinedMatcherBuilder *)builder;$/;"	m	interface:KWMatchers
addUserDefinedMatcherBuilder:	Example/Pods/Kiwi/Classes/Core/KWMatchers.m	/^- (void)addUserDefinedMatcherBuilder:(KWUserDefinedMatcherBuilder *)builder {$/;"	m	implementation:KWMatchers
addVerifier:	Example/Pods/BuildHeaders/Kiwi/KWSpec.h	/^+ (id)addVerifier:(id<KWVerifying>)aVerifier;$/;"	m	interface:KWSpec
addVerifier:	Example/Pods/Headers/Kiwi/KWSpec.h	/^+ (id)addVerifier:(id<KWVerifying>)aVerifier;$/;"	m	interface:KWSpec
addVerifier:	Example/Pods/Kiwi/Classes/Core/KWSpec.h	/^+ (id)addVerifier:(id<KWVerifying>)aVerifier;$/;"	m	interface:KWSpec
address	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    NSArray *args = @[@"-p", @(getpid()).stringValue, [NSString stringWithFormat:@"%lx", address]];$/;"	p	interface:KWExample
afterAll	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void afterAll(void (^block)(void));$/;"	p	interface:KWExample
afterAll	Example/Pods/Headers/Kiwi/KWExample.h	/^void afterAll(void (^block)(void));$/;"	p	interface:KWExample
afterAll	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void afterAll(void (^block)(void));$/;"	p	interface:KWExample
afterAllNode	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^@property (nonatomic, strong) KWAfterAllNode *afterAllNode;$/;"	p	interface:KWContextNode
afterAllNode	Example/Pods/Headers/Kiwi/KWContextNode.h	/^@property (nonatomic, strong) KWAfterAllNode *afterAllNode;$/;"	p	interface:KWContextNode
afterAllNode	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    [contextNode setAfterAllNode:afterAllNode];$/;"	p	interface:KWExampleSuiteBuilder
afterAllNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^@property (nonatomic, strong) KWAfterAllNode *afterAllNode;$/;"	p	interface:KWContextNode
afterAllNodeWithCallSite:block:	Example/Pods/BuildHeaders/Kiwi/KWAfterAllNode.h	/^+ (id)afterAllNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	m	interface:KWAfterAllNode
afterAllNodeWithCallSite:block:	Example/Pods/Headers/Kiwi/KWAfterAllNode.h	/^+ (id)afterAllNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	m	interface:KWAfterAllNode
afterAllNodeWithCallSite:block:	Example/Pods/Kiwi/Classes/Nodes/KWAfterAllNode.h	/^+ (id)afterAllNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	m	interface:KWAfterAllNode
afterAllNodeWithCallSite:block:	Example/Pods/Kiwi/Classes/Nodes/KWAfterAllNode.m	/^+ (id)afterAllNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block {$/;"	m	implementation:KWAfterAllNode
afterAllSpecs	Example/Pods/BuildHeaders/Kiwi/KWSuiteConfigurationBase.h	/^void afterAllSpecs(void (^block)(void));$/;"	p	interface:KWSuiteConfigurationBase
afterAllSpecs	Example/Pods/Headers/Kiwi/KWSuiteConfigurationBase.h	/^void afterAllSpecs(void (^block)(void));$/;"	p	interface:KWSuiteConfigurationBase
afterAllSpecs	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.h	/^void afterAllSpecs(void (^block)(void));$/;"	p	interface:KWSuiteConfigurationBase
afterAllWithCallSite	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void afterAllWithCallSite(KWCallSite *aCallSite, void (^block)(void));$/;"	p	interface:KWExample
afterAllWithCallSite	Example/Pods/Headers/Kiwi/KWExample.h	/^void afterAllWithCallSite(KWCallSite *aCallSite, void (^block)(void));$/;"	p	interface:KWExample
afterAllWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void afterAllWithCallSite(KWCallSite *aCallSite, void (^block)(void));$/;"	p	interface:KWExample
afterAllWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    afterAllWithCallSite(nil, block);$/;"	p	interface:KWExample
afterEach	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void afterEach(void (^block)(void));$/;"	p	interface:KWExample
afterEach	Example/Pods/Headers/Kiwi/KWExample.h	/^void afterEach(void (^block)(void));$/;"	p	interface:KWExample
afterEach	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void afterEach(void (^block)(void));$/;"	p	interface:KWExample
afterEachNode	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^@property (nonatomic, strong) KWAfterEachNode *afterEachNode;$/;"	p	interface:KWContextNode
afterEachNode	Example/Pods/Headers/Kiwi/KWContextNode.h	/^@property (nonatomic, strong) KWAfterEachNode *afterEachNode;$/;"	p	interface:KWContextNode
afterEachNode	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    [contextNode setAfterEachNode:afterEachNode];$/;"	p	interface:KWExampleSuiteBuilder
afterEachNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^@property (nonatomic, strong) KWAfterEachNode *afterEachNode;$/;"	p	interface:KWContextNode
afterEachNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^    [self raiseIfNodeAlreadyExists:self.afterEachNode];$/;"	p	interface:KWContextNode
afterEachNodeWithCallSite:block:	Example/Pods/BuildHeaders/Kiwi/KWAfterEachNode.h	/^+ (id)afterEachNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	m	interface:KWAfterEachNode
afterEachNodeWithCallSite:block:	Example/Pods/Headers/Kiwi/KWAfterEachNode.h	/^+ (id)afterEachNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	m	interface:KWAfterEachNode
afterEachNodeWithCallSite:block:	Example/Pods/Kiwi/Classes/Nodes/KWAfterEachNode.h	/^+ (id)afterEachNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	m	interface:KWAfterEachNode
afterEachNodeWithCallSite:block:	Example/Pods/Kiwi/Classes/Nodes/KWAfterEachNode.m	/^+ (id)afterEachNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block {$/;"	m	implementation:KWAfterEachNode
afterEachSpec	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^void afterEachSpec(void (^block)(void));$/;"	f	interface:
afterEachWithCallSite	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void afterEachWithCallSite(KWCallSite *aCallSite, void (^block)(void));$/;"	p	interface:KWExample
afterEachWithCallSite	Example/Pods/Headers/Kiwi/KWExample.h	/^void afterEachWithCallSite(KWCallSite *aCallSite, void (^block)(void));$/;"	p	interface:KWExample
afterEachWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void afterEachWithCallSite(KWCallSite *aCallSite, void (^block)(void));$/;"	p	interface:KWExample
afterEachWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    afterEachWithCallSite(nil, block);$/;"	p	interface:KWExample
anArray	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^    self.objects = anArray;$/;"	p	interface:KWContainMatcher
anException	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^        self.actualException = anException;$/;"	p	interface:KWBlockRaiseMatcher
anExpectationType	Example/Pods/Kiwi/Classes/Verifiers/KWExistVerifier.m	/^        _expectationType = anExpectationType;$/;"	p	interface:KWExistVerifier
anExpectationType	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^        _expectationType = anExpectationType;$/;"	p	interface:KWMatchVerifier
anInvocation	Example/Pods/BuildHeaders/Kiwi/KWInvocationCapturer.h	/^- (void)invocationCapturer:(KWInvocationCapturer *)anInvocationCapturer didCaptureInvocation:(NSInvocation *)anInvocation;$/;"	p	protocol:KWInvocationCapturerDelegate
anInvocation	Example/Pods/BuildHeaders/Kiwi/KWMessagePattern.h	/^- (BOOL)matchesInvocation:(NSInvocation *)anInvocation;$/;"	p	interface:KWMessagePattern
anInvocation	Example/Pods/BuildHeaders/Kiwi/KWStub.h	/^- (BOOL)processInvocation:(NSInvocation *)anInvocation;$/;"	p	interface:KWStub
anInvocation	Example/Pods/Headers/Kiwi/KWInvocationCapturer.h	/^- (void)invocationCapturer:(KWInvocationCapturer *)anInvocationCapturer didCaptureInvocation:(NSInvocation *)anInvocation;$/;"	p	protocol:KWInvocationCapturerDelegate
anInvocation	Example/Pods/Headers/Kiwi/KWMessagePattern.h	/^- (BOOL)matchesInvocation:(NSInvocation *)anInvocation;$/;"	p	interface:KWMessagePattern
anInvocation	Example/Pods/Headers/Kiwi/KWStub.h	/^- (BOOL)processInvocation:(NSInvocation *)anInvocation;$/;"	p	interface:KWStub
anInvocation	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.h	/^- (void)invocationCapturer:(KWInvocationCapturer *)anInvocationCapturer didCaptureInvocation:(NSInvocation *)anInvocation;$/;"	p	protocol:KWInvocationCapturerDelegate
anInvocation	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.h	/^- (BOOL)matchesInvocation:(NSInvocation *)anInvocation;$/;"	p	interface:KWMessagePattern
anInvocation	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^            [verifier have:count itemsForInvocation:anInvocation];$/;"	p	interface:KWHaveMatcher
anInvocation	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^            [verifier haveAtLeast:count itemsForInvocation:anInvocation];$/;"	p	interface:KWHaveMatcher
anInvocation	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^            [verifier haveAtMost:count itemsForInvocation:anInvocation];$/;"	p	interface:KWHaveMatcher
anInvocation	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    self.invocation = anInvocation;$/;"	p	interface:KWHaveMatcher
anInvocation	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^    _invocation = anInvocation;$/;"	p	interface:KWUserDefinedMatcher
anInvocation	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    KWMessagePattern *messagePattern = [KWMessagePattern messagePatternFromInvocation:anInvocation];$/;"	p	interface:KWMock
anInvocation	Example/Pods/Kiwi/Classes/Stubbing/KWStub.h	/^- (BOOL)processInvocation:(NSInvocation *)anInvocation;$/;"	p	interface:KWStub
anInvocation	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^        [self writeObjectValueToInvocationReturnValue:anInvocation];$/;"	p	interface:KWStub
anInvocation	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^        [self writeWrappedValueToInvocationReturnValue:anInvocation];$/;"	p	interface:KWStub
anInvocation	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^        [self writeZerosToInvocationReturnValue:anInvocation];$/;"	p	interface:KWStub
anObjCType	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSData *)dataForObjCType:(const char *)anObjCType;$/;"	p	interface:KWValue
anObjCType	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSData *)dataForObjCType:(const char *)anObjCType;$/;"	p	interface:KWValue
anObjCType	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSData *)dataForObjCType:(const char *)anObjCType;$/;"	p	interface:KWValue
anObject	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^    self.objects = @[anObject];$/;"	p	interface:KWContainMatcher
anObject	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        return [super isEqual:anObject];$/;"	p	interface:KWMock
anObject	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    NSInvocation *invocation = [NSInvocation invocationWithTarget:self selector:_cmd messageArguments:&anObject];$/;"	p	interface:KWMock
anObjectRef	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^        _objectRef = anObjectRef;$/;"	p	interface:KWLetNode
anUpperEndpoint	Example/Pods/Kiwi/Classes/Matchers/KWBeBetweenMatcher.m	/^    [self beInTheIntervalFrom:aLowerEndpoint to:anUpperEndpoint];$/;"	p	interface:KWBeBetweenMatcher
anUpperEndpoint	Example/Pods/Kiwi/Classes/Matchers/KWBeBetweenMatcher.m	/^    self.upperEndpoint = anUpperEndpoint;$/;"	p	interface:KWBeBetweenMatcher
annotatedFailureMessage	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    return [KWFailure failureWithCallSite:aFailure.callSite message:annotatedFailureMessage];$/;"	p	interface:KWExample
any	Example/Pods/BuildHeaders/Kiwi/KWAny.h	/^+ (id)any;$/;"	m	interface:KWAny
any	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define any() [KWAny any]$/;"	M	interface:
any	Example/Pods/Headers/Kiwi/KWAny.h	/^+ (id)any;$/;"	m	interface:KWAny
any	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define any() [KWAny any]$/;"	M	interface:
any	Example/Pods/Kiwi/Classes/Core/KWAny.h	/^+ (id)any;$/;"	m	interface:KWAny
any	Example/Pods/Kiwi/Classes/Core/KWAny.m	/^+ (id)any {$/;"	m	implementation:KWAny
any	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define any() [KWAny any]$/;"	M	interface:
anyChange	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^@property (nonatomic, assign) BOOL anyChange;$/;"	p	interface:KWChangeMatcher
application:didFinishLaunchingWithOptions:	Example/Clappr/CLPAppDelegate.m	/^{$/;"	m	implementation:CLPAppDelegate
applicationDidBecomeActive:	Example/Clappr/CLPAppDelegate.m	/^{$/;"	m	implementation:CLPAppDelegate
applicationDidEnterBackground:	Example/Clappr/CLPAppDelegate.m	/^{$/;"	m	implementation:CLPAppDelegate
applicationWillEnterForeground:	Example/Clappr/CLPAppDelegate.m	/^{$/;"	m	implementation:CLPAppDelegate
applicationWillResignActive:	Example/Clappr/CLPAppDelegate.m	/^{$/;"	m	implementation:CLPAppDelegate
applicationWillTerminate:	Example/Clappr/CLPAppDelegate.m	/^{$/;"	m	implementation:CLPAppDelegate
arg	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^			[args addObject:arg];$/;"	p	interface:KWStub
args	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    NSString *callSite = [NSString stringWithShellCommand:@"\/usr\/bin\/atos" arguments:args];$/;"	p	interface:KWExample
argument	Example/Pods/BuildHeaders/Kiwi/KWCaptureSpy.h	/^@property (nonatomic, strong, readonly) id argument;$/;"	p	interface:KWCaptureSpy
argument	Example/Pods/Headers/Kiwi/KWCaptureSpy.h	/^@property (nonatomic, strong, readonly) id argument;$/;"	p	interface:KWCaptureSpy
argument	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.h	/^@property (nonatomic, strong, readonly) id argument;$/;"	p	interface:KWCaptureSpy
argument	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.m	/^					_argument = argument;$/;"	p	interface:KWCaptureSpy
argument	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.m	/^		return _argument;$/;"	p	interface:KWCaptureSpy
argument	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.m	/^@property (nonatomic, strong) id argument;$/;"	p	interface:KWCaptureSpy
argument	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^        id argument;$/;"	p	interface:KWUserDefinedMatcher
argumentBuffer	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.m	/^			id argument = (__bridge id)argumentBuffer;$/;"	p	interface:KWCaptureSpy
argumentDescriptionAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)argumentDescriptionAtIndex:(int)argIndex;$/;"	m	interface:NSInvocation
argumentDescriptionAtIndex:	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)argumentDescriptionAtIndex:(int)argIndex;$/;"	m	interface:NSInvocation
argumentDescriptionAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (NSString *)argumentDescriptionAtIndex:(int)argIndex;$/;"	m	interface:NSInvocation
argumentFilters	Example/Pods/BuildHeaders/Kiwi/KWMessagePattern.h	/^@property (nonatomic, readonly) NSArray *argumentFilters;$/;"	p	interface:KWMessagePattern
argumentFilters	Example/Pods/Headers/Kiwi/KWMessagePattern.h	/^@property (nonatomic, readonly) NSArray *argumentFilters;$/;"	p	interface:KWMessagePattern
argumentFilters	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.h	/^@property (nonatomic, readonly) NSArray *argumentFilters;$/;"	p	interface:KWMessagePattern
argumentFiltersMatchInvocationArguments:	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.m	/^- (BOOL)argumentFiltersMatchInvocationArguments:(NSInvocation *)anInvocation {$/;"	m	implementation:KWMessagePattern
argumentIndex	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.m	/^	NSUInteger _argumentIndex;$/;"	p	interface:KWCaptureSpy
argumentIndex	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.m	/^            NSData *data = [anInvocation messageArgumentDataAtIndex:_argumentIndex];$/;"	p	interface:KWCaptureSpy
argumentIndex	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.m	/^            [anInvocation getMessageArgument:&argumentBuffer atIndex:_argumentIndex];$/;"	p	interface:KWCaptureSpy
argumentIndex	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.m	/^        const char *objCType = [signature messageArgumentTypeAtIndex:_argumentIndex];$/;"	p	interface:KWCaptureSpy
argumentList	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^    va_list argumentList;$/;"	p	interface:KWContainMatcher
argumentList	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    KWMessagePattern *messagePattern = [KWMessagePattern messagePatternWithSelector:aSelector firstArgumentFilter:firstArgument argumentList:argumentList];$/;"	p	interface:KWMock
argumentList	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    va_list argumentList;$/;"	p	interface:KWMock
array	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    NSMutableArray *parts = [NSMutableArray array];$/;"	p	interface:KWExample
array	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^    NSMutableArray *invocations = [NSMutableArray array];$/;"	p	interface:KWExampleSuite
array	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^    NSMutableArray *objects = [NSMutableArray array];$/;"	p	interface:KWContainMatcher
array	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    NSMutableArray *protocolQueue = [NSMutableArray array];$/;"	p	interface:KWMock
array	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^        _letNodes = [NSMutableArray array];$/;"	p	interface:KWContextNode
array	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^        _nodes = [NSMutableArray array];$/;"	p	interface:KWContextNode
array	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^        _registerMatchersNodes = [NSMutableArray array];$/;"	p	interface:KWContextNode
array	Example/Pods/Kiwi/Classes/Nodes/KWItNode.m	/^    NSMutableArray *contextStack = [NSMutableArray array];$/;"	p	interface:KWItNode
arrayWithCapacity	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^		NSMutableArray *args = [NSMutableArray arrayWithCapacity:(numberOfArguments-2)];$/;"	p	interface:KWStub
assert	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    assert(0 && "should never reach here");$/;"	p	interface:KWHaveMatcher
assert	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^    assert(0 && "should never reach here");$/;"	p	interface:KWInequalityMatcher
assert	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    assert(self.value && "self.value must not be nil");$/;"	p	interface:KWStub
asyncVerifierWithExpectationType:callSite:matcherFactory:reporter:probeTimeout:shouldWait:	Example/Pods/Kiwi/Classes/Verifiers/KWAsyncVerifier.m	/^+ (id)asyncVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite matcherFactory:(KWMatcherFactory *)aMatcherFactory reporter:(id<KWReporting>)aReporter probeTimeout:(NSTimeInterval)probeTimeout shouldWait:(BOOL)shouldWait {$/;"	c	implementation:KWAsyncVerifier
atIndex	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^        [matcherClassChain insertObject:aClass atIndex:0];$/;"	p	interface:KWMatcherFactory
atIndex	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^        [self.invocation getArgument:&argument atIndex:2];$/;"	p	interface:KWUserDefinedMatcher
attachToVerifier:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiVerifierAdditions.h	/^- (id)attachToVerifier:(id<KWVerifying>)aVerifier;$/;"	m	protocol:KWVerifying
attachToVerifier:	Example/Pods/BuildHeaders/Kiwi/NSProxy+KiwiVerifierAdditions.h	/^- (id)attachToVerifier:(id<KWVerifying>)aVerifier;$/;"	m	protocol:KWVerifying
attachToVerifier:	Example/Pods/Headers/Kiwi/NSObject+KiwiVerifierAdditions.h	/^- (id)attachToVerifier:(id<KWVerifying>)aVerifier;$/;"	m	protocol:KWVerifying
attachToVerifier:	Example/Pods/Headers/Kiwi/NSProxy+KiwiVerifierAdditions.h	/^- (id)attachToVerifier:(id<KWVerifying>)aVerifier;$/;"	m	protocol:KWVerifying
attachToVerifier:	Example/Pods/Kiwi/Classes/Core/NSObject+KiwiVerifierAdditions.h	/^- (id)attachToVerifier:(id<KWVerifying>)aVerifier;$/;"	m	protocol:KWVerifying
attachToVerifier:	Example/Pods/Kiwi/Classes/Core/NSObject+KiwiVerifierAdditions.m	/^- (id)attachToVerifier:(id<KWVerifying>)aVerifier {$/;"	m	implementation:NSObject
attachToVerifier:	Example/Pods/Kiwi/Classes/Core/NSProxy+KiwiVerifierAdditions.h	/^- (id)attachToVerifier:(id<KWVerifying>)aVerifier;$/;"	m	protocol:KWVerifying
attachToVerifier:	Example/Pods/Kiwi/Classes/Core/NSProxy+KiwiVerifierAdditions.m	/^- (id)attachToVerifier:(id<KWVerifying>)aVerifier {$/;"	m	implementation:NSProxy
attachToVerifier:verifier:	Example/Pods/BuildHeaders/Kiwi/NSProxy+KiwiVerifierAdditions.h	/^- (id)attachToVerifier:(id<KWVerifying>)firstVerifier verifier:(id<KWVerifying>)secondVerifier;$/;"	m	protocol:KWVerifying
attachToVerifier:verifier:	Example/Pods/Headers/Kiwi/NSProxy+KiwiVerifierAdditions.h	/^- (id)attachToVerifier:(id<KWVerifying>)firstVerifier verifier:(id<KWVerifying>)secondVerifier;$/;"	m	protocol:KWVerifying
attachToVerifier:verifier:	Example/Pods/Kiwi/Classes/Core/NSProxy+KiwiVerifierAdditions.h	/^- (id)attachToVerifier:(id<KWVerifying>)firstVerifier verifier:(id<KWVerifying>)secondVerifier;$/;"	m	protocol:KWVerifying
attachToVerifier:verifier:	Example/Pods/Kiwi/Classes/Core/NSProxy+KiwiVerifierAdditions.m	/^- (id)attachToVerifier:(id<KWVerifying>)firstVerifier verifier:(id<KWVerifying>)secondVerifier {$/;"	m	implementation:NSProxy
b	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    NSInvocation *invocation = [NSInvocation invocationWithTarget:self selector:_cmd messageArguments:&a, &b];$/;"	p	interface:KWMock
beBetween:and:	Example/Pods/BuildHeaders/Kiwi/KWBeBetweenMatcher.h	/^- (void)beBetween:(id)aLowerEndpoint and:(id)anUpperEndpoint;$/;"	m	interface:KWBeBetweenMatcher
beBetween:and:	Example/Pods/Headers/Kiwi/KWBeBetweenMatcher.h	/^- (void)beBetween:(id)aLowerEndpoint and:(id)anUpperEndpoint;$/;"	m	interface:KWBeBetweenMatcher
beBetween:and:	Example/Pods/Kiwi/Classes/Matchers/KWBeBetweenMatcher.h	/^- (void)beBetween:(id)aLowerEndpoint and:(id)anUpperEndpoint;$/;"	m	interface:KWBeBetweenMatcher
beEmpty	Example/Pods/BuildHeaders/Kiwi/KWBeEmptyMatcher.h	/^- (void)beEmpty;$/;"	m	interface:KWBeEmptyMatcher
beEmpty	Example/Pods/Headers/Kiwi/KWBeEmptyMatcher.h	/^- (void)beEmpty;$/;"	m	interface:KWBeEmptyMatcher
beEmpty	Example/Pods/Kiwi/Classes/Matchers/KWBeEmptyMatcher.h	/^- (void)beEmpty;$/;"	m	interface:KWBeEmptyMatcher
beEmpty	Example/Pods/Kiwi/Classes/Matchers/KWBeEmptyMatcher.m	/^- (void)beEmpty {$/;"	m	implementation:KWBeEmptyMatcher
beFalse	Example/Pods/BuildHeaders/Kiwi/KWBeTrueMatcher.h	/^- (void)beFalse;$/;"	m	interface:KWBeTrueMatcher
beFalse	Example/Pods/Headers/Kiwi/KWBeTrueMatcher.h	/^- (void)beFalse;$/;"	m	interface:KWBeTrueMatcher
beFalse	Example/Pods/Kiwi/Classes/Matchers/KWBeTrueMatcher.h	/^- (void)beFalse;$/;"	m	interface:KWBeTrueMatcher
beGreaterThan:	Example/Pods/BuildHeaders/Kiwi/KWInequalityMatcher.h	/^- (void)beGreaterThan:(id)aValue;$/;"	m	interface:KWInequalityMatcher
beGreaterThan:	Example/Pods/Headers/Kiwi/KWInequalityMatcher.h	/^- (void)beGreaterThan:(id)aValue;$/;"	m	interface:KWInequalityMatcher
beGreaterThan:	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.h	/^- (void)beGreaterThan:(id)aValue;$/;"	m	interface:KWInequalityMatcher
beGreaterThanOrEqualTo:	Example/Pods/BuildHeaders/Kiwi/KWInequalityMatcher.h	/^- (void)beGreaterThanOrEqualTo:(id)aValue;$/;"	m	interface:KWInequalityMatcher
beGreaterThanOrEqualTo:	Example/Pods/Headers/Kiwi/KWInequalityMatcher.h	/^- (void)beGreaterThanOrEqualTo:(id)aValue;$/;"	m	interface:KWInequalityMatcher
beGreaterThanOrEqualTo:	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.h	/^- (void)beGreaterThanOrEqualTo:(id)aValue;$/;"	m	interface:KWInequalityMatcher
beIdenticalTo:	Example/Pods/BuildHeaders/Kiwi/KWBeIdenticalToMatcher.h	/^- (void)beIdenticalTo:(id)anObject;$/;"	m	interface:KWBeIdenticalToMatcher
beIdenticalTo:	Example/Pods/Headers/Kiwi/KWBeIdenticalToMatcher.h	/^- (void)beIdenticalTo:(id)anObject;$/;"	m	interface:KWBeIdenticalToMatcher
beIdenticalTo:	Example/Pods/Kiwi/Classes/Matchers/KWBeIdenticalToMatcher.h	/^- (void)beIdenticalTo:(id)anObject;$/;"	m	interface:KWBeIdenticalToMatcher
beIdenticalTo:	Example/Pods/Kiwi/Classes/Matchers/KWBeIdenticalToMatcher.m	/^- (void)beIdenticalTo:(id)anObject {$/;"	m	implementation:KWBeIdenticalToMatcher
beInTheIntervalFrom:to:	Example/Pods/BuildHeaders/Kiwi/KWBeBetweenMatcher.h	/^- (void)beInTheIntervalFrom:(id)aLowerEndpoint to:(id)anUpperEndpoint;$/;"	m	interface:KWBeBetweenMatcher
beInTheIntervalFrom:to:	Example/Pods/Headers/Kiwi/KWBeBetweenMatcher.h	/^- (void)beInTheIntervalFrom:(id)aLowerEndpoint to:(id)anUpperEndpoint;$/;"	m	interface:KWBeBetweenMatcher
beInTheIntervalFrom:to:	Example/Pods/Kiwi/Classes/Matchers/KWBeBetweenMatcher.h	/^- (void)beInTheIntervalFrom:(id)aLowerEndpoint to:(id)anUpperEndpoint;$/;"	m	interface:KWBeBetweenMatcher
beKindOfClass:	Example/Pods/BuildHeaders/Kiwi/KWBeKindOfClassMatcher.h	/^- (void)beKindOfClass:(Class)aClass;$/;"	m	interface:KWBeKindOfClassMatcher
beKindOfClass:	Example/Pods/Headers/Kiwi/KWBeKindOfClassMatcher.h	/^- (void)beKindOfClass:(Class)aClass;$/;"	m	interface:KWBeKindOfClassMatcher
beKindOfClass:	Example/Pods/Kiwi/Classes/Matchers/KWBeKindOfClassMatcher.h	/^- (void)beKindOfClass:(Class)aClass;$/;"	m	interface:KWBeKindOfClassMatcher
beLessThan:	Example/Pods/BuildHeaders/Kiwi/KWInequalityMatcher.h	/^- (void)beLessThan:(id)aValue;$/;"	m	interface:KWInequalityMatcher
beLessThan:	Example/Pods/Headers/Kiwi/KWInequalityMatcher.h	/^- (void)beLessThan:(id)aValue;$/;"	m	interface:KWInequalityMatcher
beLessThan:	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.h	/^- (void)beLessThan:(id)aValue;$/;"	m	interface:KWInequalityMatcher
beLessThanOrEqualTo:	Example/Pods/BuildHeaders/Kiwi/KWInequalityMatcher.h	/^- (void)beLessThanOrEqualTo:(id)aValue;$/;"	m	interface:KWInequalityMatcher
beLessThanOrEqualTo:	Example/Pods/Headers/Kiwi/KWInequalityMatcher.h	/^- (void)beLessThanOrEqualTo:(id)aValue;$/;"	m	interface:KWInequalityMatcher
beLessThanOrEqualTo:	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.h	/^- (void)beLessThanOrEqualTo:(id)aValue;$/;"	m	interface:KWInequalityMatcher
beMemberOfClass:	Example/Pods/BuildHeaders/Kiwi/KWBeMemberOfClassMatcher.h	/^- (void)beMemberOfClass:(Class)aClass;$/;"	m	interface:KWBeMemberOfClassMatcher
beMemberOfClass:	Example/Pods/Headers/Kiwi/KWBeMemberOfClassMatcher.h	/^- (void)beMemberOfClass:(Class)aClass;$/;"	m	interface:KWBeMemberOfClassMatcher
beMemberOfClass:	Example/Pods/Kiwi/Classes/Matchers/KWBeMemberOfClassMatcher.h	/^- (void)beMemberOfClass:(Class)aClass;$/;"	m	interface:KWBeMemberOfClassMatcher
beNil	Example/Pods/BuildHeaders/Kiwi/KWNilMatcher.h	/^- (void)beNil;$/;"	m	interface:KWNilMatcher
beNil	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define beNil beNil:[KWNilMatcher verifyNilSubject]$/;"	M	interface:
beNil	Example/Pods/Headers/Kiwi/KWNilMatcher.h	/^- (void)beNil;$/;"	m	interface:KWNilMatcher
beNil	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define beNil beNil:[KWNilMatcher verifyNilSubject]$/;"	M	interface:
beNil	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define beNil beNil:[KWNilMatcher verifyNilSubject]$/;"	M	interface:
beNil	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.h	/^- (void)beNil;$/;"	m	interface:KWNilMatcher
beNil:	Example/Pods/BuildHeaders/Kiwi/KWNilMatcher.h	/^- (void)beNil:(BOOL)workaroundArgument;$/;"	m	interface:KWNilMatcher
beNil:	Example/Pods/Headers/Kiwi/KWNilMatcher.h	/^- (void)beNil:(BOOL)workaroundArgument;$/;"	m	interface:KWNilMatcher
beNil:	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.h	/^- (void)beNil:(BOOL)workaroundArgument;$/;"	m	interface:KWNilMatcher
beNo	Example/Pods/BuildHeaders/Kiwi/KWBeTrueMatcher.h	/^- (void)beNo;$/;"	m	interface:KWBeTrueMatcher
beNo	Example/Pods/Headers/Kiwi/KWBeTrueMatcher.h	/^- (void)beNo;$/;"	m	interface:KWBeTrueMatcher
beNo	Example/Pods/Kiwi/Classes/Matchers/KWBeTrueMatcher.h	/^- (void)beNo;$/;"	m	interface:KWBeTrueMatcher
beNonNil	Example/Pods/BuildHeaders/Kiwi/KWNilMatcher.h	/^- (void)beNonNil;$/;"	m	interface:KWNilMatcher
beNonNil	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define beNonNil beNonNil:[KWNilMatcher verifyNonNilSubject]$/;"	M	interface:
beNonNil	Example/Pods/Headers/Kiwi/KWNilMatcher.h	/^- (void)beNonNil;$/;"	m	interface:KWNilMatcher
beNonNil	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define beNonNil beNonNil:[KWNilMatcher verifyNonNilSubject]$/;"	M	interface:
beNonNil	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define beNonNil beNonNil:[KWNilMatcher verifyNonNilSubject]$/;"	M	interface:
beNonNil	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.h	/^- (void)beNonNil;$/;"	m	interface:KWNilMatcher
beNonNil:	Example/Pods/BuildHeaders/Kiwi/KWNilMatcher.h	/^- (void)beNonNil:(BOOL)workaroundArgument;$/;"	m	interface:KWNilMatcher
beNonNil:	Example/Pods/Headers/Kiwi/KWNilMatcher.h	/^- (void)beNonNil:(BOOL)workaroundArgument;$/;"	m	interface:KWNilMatcher
beNonNil:	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.h	/^- (void)beNonNil:(BOOL)workaroundArgument;$/;"	m	interface:KWNilMatcher
bePosted	Example/Pods/BuildHeaders/Kiwi/KWNotificationMatcher.h	/^- (void)bePosted;$/;"	m	interface:KWNotificationMatcher
bePosted	Example/Pods/Headers/Kiwi/KWNotificationMatcher.h	/^- (void)bePosted;$/;"	m	interface:KWNotificationMatcher
bePosted	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.h	/^- (void)bePosted;$/;"	m	interface:KWNotificationMatcher
bePostedEvaluatingBlock:	Example/Pods/BuildHeaders/Kiwi/KWNotificationMatcher.h	/^- (void)bePostedEvaluatingBlock:(PostedNotificationBlock)block;$/;"	m	interface:KWNotificationMatcher
bePostedEvaluatingBlock:	Example/Pods/Headers/Kiwi/KWNotificationMatcher.h	/^- (void)bePostedEvaluatingBlock:(PostedNotificationBlock)block;$/;"	m	interface:KWNotificationMatcher
bePostedEvaluatingBlock:	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.h	/^- (void)bePostedEvaluatingBlock:(PostedNotificationBlock)block;$/;"	m	interface:KWNotificationMatcher
bePostedWithObject:	Example/Pods/BuildHeaders/Kiwi/KWNotificationMatcher.h	/^- (void)bePostedWithObject:(id)object;$/;"	m	interface:KWNotificationMatcher
bePostedWithObject:	Example/Pods/Headers/Kiwi/KWNotificationMatcher.h	/^- (void)bePostedWithObject:(id)object;$/;"	m	interface:KWNotificationMatcher
bePostedWithObject:	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.h	/^- (void)bePostedWithObject:(id)object;$/;"	m	interface:KWNotificationMatcher
bePostedWithObject:andUserInfo:	Example/Pods/BuildHeaders/Kiwi/KWNotificationMatcher.h	/^- (void)bePostedWithObject:(id)object andUserInfo:(NSDictionary *)userInfo;$/;"	m	interface:KWNotificationMatcher
bePostedWithObject:andUserInfo:	Example/Pods/Headers/Kiwi/KWNotificationMatcher.h	/^- (void)bePostedWithObject:(id)object andUserInfo:(NSDictionary *)userInfo;$/;"	m	interface:KWNotificationMatcher
bePostedWithObject:andUserInfo:	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.h	/^- (void)bePostedWithObject:(id)object andUserInfo:(NSDictionary *)userInfo;$/;"	m	interface:KWNotificationMatcher
bePostedWithUserInfo:	Example/Pods/BuildHeaders/Kiwi/KWNotificationMatcher.h	/^- (void)bePostedWithUserInfo:(NSDictionary *)userInfo;$/;"	m	interface:KWNotificationMatcher
bePostedWithUserInfo:	Example/Pods/Headers/Kiwi/KWNotificationMatcher.h	/^- (void)bePostedWithUserInfo:(NSDictionary *)userInfo;$/;"	m	interface:KWNotificationMatcher
bePostedWithUserInfo:	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.h	/^- (void)bePostedWithUserInfo:(NSDictionary *)userInfo;$/;"	m	interface:KWNotificationMatcher
beSubclassOfClass:	Example/Pods/BuildHeaders/Kiwi/KWBeSubclassOfClassMatcher.h	/^- (void)beSubclassOfClass:(Class)aClass;$/;"	m	interface:KWBeSubclassOfClassMatcher
beSubclassOfClass:	Example/Pods/Headers/Kiwi/KWBeSubclassOfClassMatcher.h	/^- (void)beSubclassOfClass:(Class)aClass;$/;"	m	interface:KWBeSubclassOfClassMatcher
beSubclassOfClass:	Example/Pods/Kiwi/Classes/Matchers/KWBeSubclassOfClassMatcher.h	/^- (void)beSubclassOfClass:(Class)aClass;$/;"	m	interface:KWBeSubclassOfClassMatcher
beSubclassOfClass:	Example/Pods/Kiwi/Classes/Matchers/KWBeSubclassOfClassMatcher.m	/^- (void)beSubclassOfClass:(Class)aClass {$/;"	m	implementation:KWBeSubclassOfClassMatcher
beTrue	Example/Pods/BuildHeaders/Kiwi/KWBeTrueMatcher.h	/^- (void)beTrue;$/;"	m	interface:KWBeTrueMatcher
beTrue	Example/Pods/Headers/Kiwi/KWBeTrueMatcher.h	/^- (void)beTrue;$/;"	m	interface:KWBeTrueMatcher
beTrue	Example/Pods/Kiwi/Classes/Matchers/KWBeTrueMatcher.h	/^- (void)beTrue;$/;"	m	interface:KWBeTrueMatcher
beWithin:of:	Example/Pods/BuildHeaders/Kiwi/KWBeWithinMatcher.h	/^- (void)beWithin:(id)aDistance of:(id)aValue;$/;"	m	interface:KWBeWithinMatcher
beWithin:of:	Example/Pods/Headers/Kiwi/KWBeWithinMatcher.h	/^- (void)beWithin:(id)aDistance of:(id)aValue;$/;"	m	interface:KWBeWithinMatcher
beWithin:of:	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.h	/^- (void)beWithin:(id)aDistance of:(id)aValue;$/;"	m	interface:KWBeWithinMatcher
beYes	Example/Pods/BuildHeaders/Kiwi/KWBeTrueMatcher.h	/^- (void)beYes;$/;"	m	interface:KWBeTrueMatcher
beYes	Example/Pods/Headers/Kiwi/KWBeTrueMatcher.h	/^- (void)beYes;$/;"	m	interface:KWBeTrueMatcher
beYes	Example/Pods/Kiwi/Classes/Matchers/KWBeTrueMatcher.h	/^- (void)beYes;$/;"	m	interface:KWBeTrueMatcher
beZero	Example/Pods/BuildHeaders/Kiwi/KWBeZeroMatcher.h	/^- (void)beZero;$/;"	m	interface:KWBeZeroMatcher
beZero	Example/Pods/Headers/Kiwi/KWBeZeroMatcher.h	/^- (void)beZero;$/;"	m	interface:KWBeZeroMatcher
beZero	Example/Pods/Kiwi/Classes/Matchers/KWBeZeroMatcher.h	/^- (void)beZero;$/;"	m	interface:KWBeZeroMatcher
beZero	Example/Pods/Kiwi/Classes/Matchers/KWBeZeroMatcher.m	/^- (void)beZero {$/;"	m	implementation:KWBeZeroMatcher
beforeAll	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void beforeAll(void (^block)(void));$/;"	p	interface:KWExample
beforeAll	Example/Pods/Headers/Kiwi/KWExample.h	/^void beforeAll(void (^block)(void));$/;"	p	interface:KWExample
beforeAll	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void beforeAll(void (^block)(void));$/;"	p	interface:KWExample
beforeAllNode	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^@property (nonatomic, strong) KWBeforeAllNode *beforeAllNode;$/;"	m	interface:KWContextNode
beforeAllNode	Example/Pods/Headers/Kiwi/KWContextNode.h	/^@property (nonatomic, strong) KWBeforeAllNode *beforeAllNode;$/;"	m	interface:KWContextNode
beforeAllNode	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    [contextNode setBeforeAllNode:beforeAllNode];$/;"	p	interface:KWExampleSuiteBuilder
beforeAllNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^@property (nonatomic, strong) KWBeforeAllNode *beforeAllNode;$/;"	m	interface:KWContextNode
beforeAllNodeWithCallSite:block:	Example/Pods/BuildHeaders/Kiwi/KWBeforeAllNode.h	/^+ (id)beforeAllNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	m	interface:KWBeforeAllNode
beforeAllNodeWithCallSite:block:	Example/Pods/Headers/Kiwi/KWBeforeAllNode.h	/^+ (id)beforeAllNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	m	interface:KWBeforeAllNode
beforeAllNodeWithCallSite:block:	Example/Pods/Kiwi/Classes/Nodes/KWBeforeAllNode.h	/^+ (id)beforeAllNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	m	interface:KWBeforeAllNode
beforeAllNodeWithCallSite:block:	Example/Pods/Kiwi/Classes/Nodes/KWBeforeAllNode.m	/^+ (id)beforeAllNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block {$/;"	m	implementation:KWBeforeAllNode
beforeAllSpecs	Example/Pods/BuildHeaders/Kiwi/KWSuiteConfigurationBase.h	/^void beforeAllSpecs(void (^block)(void));$/;"	p	interface:KWSuiteConfigurationBase
beforeAllSpecs	Example/Pods/Headers/Kiwi/KWSuiteConfigurationBase.h	/^void beforeAllSpecs(void (^block)(void));$/;"	p	interface:KWSuiteConfigurationBase
beforeAllSpecs	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.h	/^void beforeAllSpecs(void (^block)(void));$/;"	p	interface:KWSuiteConfigurationBase
beforeAllWithCallSite	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void beforeAllWithCallSite(KWCallSite *aCallSite, void (^block)(void));$/;"	p	interface:KWExample
beforeAllWithCallSite	Example/Pods/Headers/Kiwi/KWExample.h	/^void beforeAllWithCallSite(KWCallSite *aCallSite, void (^block)(void));$/;"	p	interface:KWExample
beforeAllWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void beforeAllWithCallSite(KWCallSite *aCallSite, void (^block)(void));$/;"	p	interface:KWExample
beforeAllWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    beforeAllWithCallSite(nil, block);$/;"	p	interface:KWExample
beforeEach	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void beforeEach(void (^block)(void));$/;"	p	interface:KWExample
beforeEach	Example/Pods/Headers/Kiwi/KWExample.h	/^void beforeEach(void (^block)(void));$/;"	p	interface:KWExample
beforeEach	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void beforeEach(void (^block)(void));$/;"	p	interface:KWExample
beforeEachNode	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^@property (nonatomic, strong) KWBeforeEachNode *beforeEachNode;$/;"	p	interface:KWContextNode
beforeEachNode	Example/Pods/Headers/Kiwi/KWContextNode.h	/^@property (nonatomic, strong) KWBeforeEachNode *beforeEachNode;$/;"	p	interface:KWContextNode
beforeEachNode	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    [contextNode setBeforeEachNode:beforeEachNode];$/;"	p	interface:KWExampleSuiteBuilder
beforeEachNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^@property (nonatomic, strong) KWBeforeEachNode *beforeEachNode;$/;"	p	interface:KWContextNode
beforeEachNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^    [self raiseIfNodeAlreadyExists:self.beforeEachNode];$/;"	p	interface:KWContextNode
beforeEachNodeWithCallSite:block:	Example/Pods/BuildHeaders/Kiwi/KWBeforeEachNode.h	/^+ (id)beforeEachNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	m	interface:KWBeforeEachNode
beforeEachNodeWithCallSite:block:	Example/Pods/Headers/Kiwi/KWBeforeEachNode.h	/^+ (id)beforeEachNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	m	interface:KWBeforeEachNode
beforeEachNodeWithCallSite:block:	Example/Pods/Kiwi/Classes/Nodes/KWBeforeEachNode.h	/^+ (id)beforeEachNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	m	interface:KWBeforeEachNode
beforeEachNodeWithCallSite:block:	Example/Pods/Kiwi/Classes/Nodes/KWBeforeEachNode.m	/^+ (id)beforeEachNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block {$/;"	m	implementation:KWBeforeEachNode
beforeEachSpec	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^void beforeEachSpec(void (^block)(void));$/;"	f	interface:
beforeEachWithCallSite	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void beforeEachWithCallSite(KWCallSite *aCallSite, void (^block)(void));$/;"	p	interface:KWExample
beforeEachWithCallSite	Example/Pods/Headers/Kiwi/KWExample.h	/^void beforeEachWithCallSite(KWCallSite *aCallSite, void (^block)(void));$/;"	p	interface:KWExample
beforeEachWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void beforeEachWithCallSite(KWCallSite *aCallSite, void (^block)(void));$/;"	p	interface:KWExample
beforeEachWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    beforeEachWithCallSite(nil, block);$/;"	p	interface:KWExample
block	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^- (void)addItNodeWithCallSite:(KWCallSite *)aCallSite description:(NSString *)aDescription block:(void (^)(void))block;$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^- (void)addLetNodeWithCallSite:(KWCallSite *)aCallSite objectRef:(id *)anObjectRef symbolName:(NSString *)aSymbolName block:(id (^)(void))block;$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^- (void)setAfterAllNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^- (void)setAfterEachNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^- (void)setBeforeAllNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^- (void)setBeforeEachNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/BuildHeaders/Kiwi/KWItNode.h	/^                   block:(void (^)(void))block;$/;"	p	interface:KWItNode
block	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (void)stub:(SEL)aSelector withBlock:(id (^)(NSArray *params))block;$/;"	p	protocol:KWMessageSpying
block	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^- (void)failureMessageForShould:(KWUserDefinedMatcherMessageBlock)block;$/;"	p	interface:KWUserDefinedMatcher
block	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^- (void)failureMessageForShouldNot:(KWUserDefinedMatcherMessageBlock)block;$/;"	p	interface:KWUserDefinedMatcher
block	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^- (void)match:(KWUserDefinedMatcherBlock)block;$/;"	p	interface:KWUserDefinedMatcher
block	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^- (void)addItNodeWithCallSite:(KWCallSite *)aCallSite description:(NSString *)aDescription block:(void (^)(void))block;$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^- (void)addLetNodeWithCallSite:(KWCallSite *)aCallSite objectRef:(id *)anObjectRef symbolName:(NSString *)aSymbolName block:(id (^)(void))block;$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^- (void)setAfterAllNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^- (void)setAfterEachNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^- (void)setBeforeAllNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^- (void)setBeforeEachNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/Headers/Kiwi/KWItNode.h	/^                   block:(void (^)(void))block;$/;"	p	interface:KWItNode
block	Example/Pods/Headers/Kiwi/KWMock.h	/^- (void)stub:(SEL)aSelector withBlock:(id (^)(NSArray *params))block;$/;"	p	protocol:KWMessageSpying
block	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^- (void)failureMessageForShould:(KWUserDefinedMatcherMessageBlock)block;$/;"	p	interface:KWUserDefinedMatcher
block	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^- (void)failureMessageForShouldNot:(KWUserDefinedMatcherMessageBlock)block;$/;"	p	interface:KWUserDefinedMatcher
block	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^- (void)match:(KWUserDefinedMatcherBlock)block;$/;"	p	interface:KWUserDefinedMatcher
block	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^    [[KWSuiteConfigurationBase defaultConfiguration] setAfterAllSpecsBlock:block];$/;"	p	interface:KWSuiteConfigurationBase
block	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^    [[KWSuiteConfigurationBase defaultConfiguration] setAfterEachSpecBlock:block];$/;"	p	interface:KWSuiteConfigurationBase
block	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^    [[KWSuiteConfigurationBase defaultConfiguration] setBeforeAllSpecsBlock:block];$/;"	p	interface:KWSuiteConfigurationBase
block	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^    [[KWSuiteConfigurationBase defaultConfiguration] setBeforeEachSpecBlock:block];$/;"	p	interface:KWSuiteConfigurationBase
block	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^            aNode.block();$/;"	p	interface:KWExample
block	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    [[KWExampleSuiteBuilder sharedExampleSuiteBuilder] addItNodeWithCallSite:aCallSite description:aDescription block:block];$/;"	p	interface:KWExample
block	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    [[KWExampleSuiteBuilder sharedExampleSuiteBuilder] addLetNodeWithCallSite:aCallSite objectRef:anObjectRef symbolName:aSymbolName block:block];$/;"	p	interface:KWExample
block	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    [[KWExampleSuiteBuilder sharedExampleSuiteBuilder] setAfterAllNodeWithCallSite:aCallSite block:block];$/;"	p	interface:KWExample
block	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    [[KWExampleSuiteBuilder sharedExampleSuiteBuilder] setAfterEachNodeWithCallSite:aCallSite block:block];$/;"	p	interface:KWExample
block	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    [[KWExampleSuiteBuilder sharedExampleSuiteBuilder] setBeforeAllNodeWithCallSite:aCallSite block:block];$/;"	p	interface:KWExample
block	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    [[KWExampleSuiteBuilder sharedExampleSuiteBuilder] setBeforeEachNodeWithCallSite:aCallSite block:block];$/;"	p	interface:KWExample
block	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    aNode.block();$/;"	p	interface:KWExample
block	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    block();$/;"	p	interface:KWExample
block	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^- (void)addItNodeWithCallSite:(KWCallSite *)aCallSite description:(NSString *)aDescription block:(void (^)(void))block;$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^- (void)addLetNodeWithCallSite:(KWCallSite *)aCallSite objectRef:(id *)anObjectRef symbolName:(NSString *)aSymbolName block:(id (^)(void))block;$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^- (void)setAfterAllNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^- (void)setAfterEachNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^- (void)setBeforeAllNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^- (void)setBeforeEachNodeWithCallSite:(KWCallSite *)aCallSite block:(void (^)(void))block;$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    KWAfterAllNode *afterAllNode = [KWAfterAllNode afterAllNodeWithCallSite:aCallSite block:block];$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    KWAfterEachNode *afterEachNode = [KWAfterEachNode afterEachNodeWithCallSite:aCallSite block:block];$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    KWBeforeAllNode *beforeAllNode = [KWBeforeAllNode beforeAllNodeWithCallSite:aCallSite block:block];$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    KWBeforeEachNode *beforeEachNode = [KWBeforeEachNode beforeEachNodeWithCallSite:aCallSite block:block];$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    KWItNode* itNode = [KWItNode itNodeWithCallSite:aCallSite description:aDescription context:contextNode block:block];$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    [contextNode addLetNode:[KWLetNode letNodeWithSymbolName:aSymbolName objectRef:anObjectRef block:block]];$/;"	p	interface:KWExampleSuiteBuilder
block	Example/Pods/Kiwi/Classes/Core/KWFutureObject.m	/^  return [[self alloc] initWithBlock:block];$/;"	p	interface:KWFutureObject
block	Example/Pods/Kiwi/Classes/Core/KWFutureObject.m	/^  return self.block();$/;"	p	interface:KWFutureObject
block	Example/Pods/Kiwi/Classes/Core/KWFutureObject.m	/^@property (nonatomic, strong) KWFutureObjectBlock block;$/;"	p	interface:KWFutureObject
block	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^    self.evaluationBlock = block;$/;"	p	interface:KWNotificationMatcher
block	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^- (void)failureMessageForShould:(KWUserDefinedMatcherMessageBlock)block;$/;"	p	interface:KWUserDefinedMatcher
block	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^- (void)failureMessageForShouldNot:(KWUserDefinedMatcherMessageBlock)block;$/;"	p	interface:KWUserDefinedMatcher
block	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^- (void)match:(KWUserDefinedMatcherBlock)block;$/;"	p	interface:KWUserDefinedMatcher
block	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^    matcher.matcherBlock = block;$/;"	p	interface:KWUserDefinedMatcher
block	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (void)stub:(SEL)aSelector withBlock:(id (^)(NSArray *params))block;$/;"	p	protocol:KWMessageSpying
block	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    KWStub *stub = [KWStub stubWithMessagePattern:aMessagePattern block:block];$/;"	p	interface:KWMock
block	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    [self stubMessagePattern:messagePattern withBlock:block];$/;"	p	interface:KWMock
block	Example/Pods/Kiwi/Classes/Nodes/KWItNode.h	/^                   block:(void (^)(void))block;$/;"	p	interface:KWItNode
block	Example/Pods/Kiwi/Classes/Nodes/KWItNode.m	/^    KWItNode *itNode = [[self alloc] initWithCallSite:aCallSite description:aDescription block:block];$/;"	p	interface:KWItNode
block	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^        result = self.block();$/;"	p	interface:KWLetNode
block	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    return [[self alloc] initWithSymbolName:aSymbolName objectRef:anObjectRef block:block];$/;"	p	interface:KWLetNode
block	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^		id newValue = self.block(args);$/;"	p	interface:KWStub
blockWithBlock:	Example/Pods/BuildHeaders/Kiwi/KWBlock.h	/^+ (id)blockWithBlock:(void (^)(void))block;$/;"	c	interface:KWBlock
blockWithBlock:	Example/Pods/Headers/Kiwi/KWBlock.h	/^+ (id)blockWithBlock:(void (^)(void))block;$/;"	c	interface:KWBlock
blockWithBlock:	Example/Pods/Kiwi/Classes/Core/KWBlock.h	/^+ (id)blockWithBlock:(void (^)(void))block;$/;"	c	interface:KWBlock
blockWithBlock:	Example/Pods/Kiwi/Classes/Core/KWBlock.m	/^+ (id)blockWithBlock:(void (^)(void))aBlock {$/;"	c	implementation:KWBlock
boolData	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSData *)boolData;$/;"	p	interface:KWValue
boolData	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSData *)boolData;$/;"	p	interface:KWValue
boolData	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSData *)boolData;$/;"	p	interface:KWValue
boolData	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSData *)boolData {$/;"	m	implementation:KWValue
boolValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (BOOL)boolValue;$/;"	p	interface:KWValue
boolValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (BOOL)boolValue;$/;"	p	interface:KWValue
boolValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (BOOL)boolValue;$/;"	p	interface:KWValue
boolValue	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (BOOL)boolValue {$/;"	m	implementation:KWValue
break	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^            break;$/;"	p	interface:KWHaveMatcher
break	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^            break;$/;"	p	interface:KWMatchVerifier
buffer	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (void)getValue:(void *)buffer;$/;"	p	interface:KWValue
buffer	Example/Pods/Headers/Kiwi/KWValue.h	/^- (void)getValue:(void *)buffer;$/;"	p	interface:KWValue
buffer	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (void)getValue:(void *)buffer;$/;"	p	interface:KWValue
buildExampleGroups	Example/Pods/BuildHeaders/Kiwi/KWSpec.h	/^+ (void)buildExampleGroups;$/;"	c	interface:KWSpec
buildExampleGroups	Example/Pods/Headers/Kiwi/KWSpec.h	/^+ (void)buildExampleGroups;$/;"	c	interface:KWSpec
buildExampleGroups	Example/Pods/Kiwi/Classes/Core/KWSpec.h	/^+ (void)buildExampleGroups;$/;"	c	interface:KWSpec
buildExampleGroups	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^        [self buildExampleGroups];$/;"	p	interface:KWSpec
buildExampleGroups	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^    SEL buildExampleGroups = @selector(buildExampleGroups);$/;"	p	interface:KWSpec
builder	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^+ (id)builder;$/;"	p	interface:KWUserDefinedMatcher
builder	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^+ (id)builder;$/;"	p	interface:KWUserDefinedMatcher
builder	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^+ (id)builder;$/;"	p	interface:KWUserDefinedMatcher
buildingBlock	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^- (KWExampleSuite *)buildExampleSuite:(void (^)(void))buildingBlock;$/;"	p	interface:KWExampleSuiteBuilder
buildingBlock	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^- (KWExampleSuite *)buildExampleSuite:(void (^)(void))buildingBlock;$/;"	p	interface:KWExampleSuiteBuilder
buildingBlock	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^- (KWExampleSuite *)buildExampleSuite:(void (^)(void))buildingBlock;$/;"	p	interface:KWExampleSuiteBuilder
buildingBlock	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    buildingBlock();$/;"	p	interface:KWExampleSuiteBuilder
bytes	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    [anInvocation setReturnValue:(void *)[data bytes]];$/;"	p	interface:KWStub
bytes	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    [anInvocation setReturnValue:bytes];$/;"	p	interface:KWStub
cStringDescriptionAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)cStringDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
cStringDescriptionAtIndex:	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)cStringDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
cStringDescriptionAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (NSString *)cStringDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
call	Example/Pods/BuildHeaders/Kiwi/KWBlock.h	/^- (void)call;$/;"	m	interface:KWBlock
call	Example/Pods/Headers/Kiwi/KWBlock.h	/^- (void)call;$/;"	m	interface:KWBlock
call	Example/Pods/Kiwi/Classes/Core/KWBlock.h	/^- (void)call;$/;"	m	interface:KWBlock
call	Example/Pods/Kiwi/Classes/Core/KWBlock.m	/^- (void)call {$/;"	m	implementation:KWBlock
call	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^        [self.subject call];$/;"	p	interface:KWBlockRaiseMatcher
call	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^    [self.subject call];$/;"	p	interface:KWChangeMatcher
callSite	Example/Pods/BuildHeaders/Kiwi/KWBlockNode.h	/^@property (nonatomic, strong, readonly) KWCallSite *callSite;$/;"	m	interface:KWBlockNode
callSite	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^@property (nonatomic, weak, readonly) KWCallSite *callSite;$/;"	m	interface:KWContextNode
callSite	Example/Pods/BuildHeaders/Kiwi/KWFailure.h	/^@property (nonatomic, weak, readonly) KWCallSite *callSite;$/;"	p	interface:KWFailure
callSite	Example/Pods/BuildHeaders/Kiwi/KWPendingNode.h	/^@property (nonatomic, readonly) KWCallSite *callSite;$/;"	p	interface:KWPendingNode
callSite	Example/Pods/BuildHeaders/Kiwi/KWRegisterMatchersNode.h	/^@property (nonatomic, readonly) KWCallSite *callSite;$/;"	m	interface:KWRegisterMatchersNode
callSite	Example/Pods/BuildHeaders/Kiwi/KWVerifying.h	/^@property (nonatomic, readonly) KWCallSite *callSite;$/;"	p	protocol:KWVerifying
callSite	Example/Pods/Headers/Kiwi/KWBlockNode.h	/^@property (nonatomic, strong, readonly) KWCallSite *callSite;$/;"	m	interface:KWBlockNode
callSite	Example/Pods/Headers/Kiwi/KWContextNode.h	/^@property (nonatomic, weak, readonly) KWCallSite *callSite;$/;"	m	interface:KWContextNode
callSite	Example/Pods/Headers/Kiwi/KWFailure.h	/^@property (nonatomic, weak, readonly) KWCallSite *callSite;$/;"	p	interface:KWFailure
callSite	Example/Pods/Headers/Kiwi/KWPendingNode.h	/^@property (nonatomic, readonly) KWCallSite *callSite;$/;"	p	interface:KWPendingNode
callSite	Example/Pods/Headers/Kiwi/KWRegisterMatchersNode.h	/^@property (nonatomic, readonly) KWCallSite *callSite;$/;"	m	interface:KWRegisterMatchersNode
callSite	Example/Pods/Headers/Kiwi/KWVerifying.h	/^@property (nonatomic, readonly) KWCallSite *callSite;$/;"	p	protocol:KWVerifying
callSite	Example/Pods/Kiwi/Classes/Core/KWFailure.h	/^@property (nonatomic, weak, readonly) KWCallSite *callSite;$/;"	p	interface:KWFailure
callSite	Example/Pods/Kiwi/Classes/Nodes/KWBlockNode.h	/^@property (nonatomic, strong, readonly) KWCallSite *callSite;$/;"	m	interface:KWBlockNode
callSite	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^@property (nonatomic, weak, readonly) KWCallSite *callSite;$/;"	m	interface:KWContextNode
callSite	Example/Pods/Kiwi/Classes/Nodes/KWPendingNode.h	/^@property (nonatomic, readonly) KWCallSite *callSite;$/;"	p	interface:KWPendingNode
callSite	Example/Pods/Kiwi/Classes/Nodes/KWRegisterMatchersNode.h	/^@property (nonatomic, readonly) KWCallSite *callSite;$/;"	m	interface:KWRegisterMatchersNode
callSite	Example/Pods/Kiwi/Classes/Verifiers/KWExistVerifier.m	/^@property (nonatomic, strong) KWCallSite *callSite;$/;"	p	interface:KWExistVerifier
callSite	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^@property (nonatomic, strong) KWCallSite *callSite;$/;"	p	interface:KWMatchVerifier
callSite	Example/Pods/Kiwi/Classes/Verifiers/KWVerifying.h	/^@property (nonatomic, readonly) KWCallSite *callSite;$/;"	p	protocol:KWVerifying
callSiteAtAddressIfNecessary	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    KWCallSite *callSite = callSiteAtAddressIfNecessary(kwCallerAddress());$/;"	p	interface:KWExample
callSiteAtAddressIfNecessary	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^KWCallSite *callSiteAtAddressIfNecessary(long address);$/;"	p	interface:KWExample
callSiteWithAddress	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^KWCallSite *callSiteWithAddress(long address);$/;"	p	interface:KWExample
callSiteWithFilename:lineNumber:	Example/Pods/BuildHeaders/Kiwi/KWCallSite.h	/^+ (id)callSiteWithFilename:(NSString *)aFilename lineNumber:(NSUInteger)aLineNumber;$/;"	c	interface:KWCallSite
callSiteWithFilename:lineNumber:	Example/Pods/Headers/Kiwi/KWCallSite.h	/^+ (id)callSiteWithFilename:(NSString *)aFilename lineNumber:(NSUInteger)aLineNumber;$/;"	c	interface:KWCallSite
callSiteWithFilename:lineNumber:	Example/Pods/Kiwi/Classes/Core/KWCallSite.h	/^+ (id)callSiteWithFilename:(NSString *)aFilename lineNumber:(NSUInteger)aLineNumber;$/;"	c	interface:KWCallSite
callSiteWithFilename:lineNumber:	Example/Pods/Kiwi/Classes/Core/KWCallSite.m	/^+ (id)callSiteWithFilename:(NSString *)aFilename lineNumber:(NSUInteger)aLineNumber {$/;"	c	implementation:KWCallSite
canMatchSubject:	Example/Pods/BuildHeaders/Kiwi/KWMatcher.h	/^+ (BOOL)canMatchSubject:(id)anObject;$/;"	m	interface:KWMatcher
canMatchSubject:	Example/Pods/BuildHeaders/Kiwi/KWMatching.h	/^+ (BOOL)canMatchSubject:(id)anObject;$/;"	m	protocol:KWMatching
canMatchSubject:	Example/Pods/Headers/Kiwi/KWMatcher.h	/^+ (BOOL)canMatchSubject:(id)anObject;$/;"	m	interface:KWMatcher
canMatchSubject:	Example/Pods/Headers/Kiwi/KWMatching.h	/^+ (BOOL)canMatchSubject:(id)anObject;$/;"	m	protocol:KWMatching
canMatchSubject:	Example/Pods/Kiwi/Classes/Core/KWMatcher.h	/^+ (BOOL)canMatchSubject:(id)anObject;$/;"	m	interface:KWMatcher
canMatchSubject:	Example/Pods/Kiwi/Classes/Core/KWMatcher.m	/^+ (BOOL)canMatchSubject:(id)anObject {$/;"	m	implementation:KWMatcher
canMatchSubject:	Example/Pods/Kiwi/Classes/Core/KWMatching.h	/^+ (BOOL)canMatchSubject:(id)anObject;$/;"	m	protocol:KWMatching
candidateClass	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^            [matcherClasses addObject:candidateClass];$/;"	p	interface:KWMatcherFactory
captureArgument:atIndex:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiSpyAdditions.h	/^+ (KWCaptureSpy *)captureArgument:(SEL)selector atIndex:(NSUInteger)index;$/;"	c	protocol:KiwiSpyAdditions
captureArgument:atIndex:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiSpyAdditions.h	/^- (KWCaptureSpy *)captureArgument:(SEL)selector atIndex:(NSUInteger)index;$/;"	m	protocol:KiwiSpyAdditions
captureArgument:atIndex:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (KWCaptureSpy *)captureArgument:(SEL)selector atIndex:(NSUInteger)index;$/;"	c	protocol:KWMessageSpying
captureArgument:atIndex:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^- (KWCaptureSpy *)captureArgument:(SEL)selector atIndex:(NSUInteger)index;$/;"	m	protocol:KWMessageSpying
captureArgument:atIndex:	Example/Pods/Headers/Kiwi/NSObject+KiwiSpyAdditions.h	/^+ (KWCaptureSpy *)captureArgument:(SEL)selector atIndex:(NSUInteger)index;$/;"	c	protocol:KiwiSpyAdditions
captureArgument:atIndex:	Example/Pods/Headers/Kiwi/NSObject+KiwiSpyAdditions.h	/^- (KWCaptureSpy *)captureArgument:(SEL)selector atIndex:(NSUInteger)index;$/;"	m	protocol:KiwiSpyAdditions
captureArgument:atIndex:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (KWCaptureSpy *)captureArgument:(SEL)selector atIndex:(NSUInteger)index;$/;"	c	protocol:KWMessageSpying
captureArgument:atIndex:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^- (KWCaptureSpy *)captureArgument:(SEL)selector atIndex:(NSUInteger)index;$/;"	m	protocol:KWMessageSpying
captureArgument:atIndex:	Example/Pods/Kiwi/Classes/Core/NSObject+KiwiSpyAdditions.h	/^+ (KWCaptureSpy *)captureArgument:(SEL)selector atIndex:(NSUInteger)index;$/;"	c	protocol:KiwiSpyAdditions
captureArgument:atIndex:	Example/Pods/Kiwi/Classes/Core/NSObject+KiwiSpyAdditions.h	/^- (KWCaptureSpy *)captureArgument:(SEL)selector atIndex:(NSUInteger)index;$/;"	m	protocol:KiwiSpyAdditions
captureArgument:atIndex:	Example/Pods/Kiwi/Classes/Core/NSObject+KiwiSpyAdditions.m	/^+ (KWCaptureSpy *)captureArgument:(SEL)selector atIndex:(NSUInteger)index {$/;"	c	implementation:NSObject
captureArgument:atIndex:	Example/Pods/Kiwi/Classes/Core/NSObject+KiwiSpyAdditions.m	/^- (KWCaptureSpy *)captureArgument:(SEL)selector atIndex:(NSUInteger)index {$/;"	m	implementation:NSObject
captureArgument:atIndex:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^+ (KWCaptureSpy *)captureArgument:(SEL)selector atIndex:(NSUInteger)index;$/;"	c	protocol:KWMessageSpying
captureArgument:atIndex:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^- (KWCaptureSpy *)captureArgument:(SEL)selector atIndex:(NSUInteger)index;$/;"	m	protocol:KWMessageSpying
captureArgument:atIndex:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^+ (KWCaptureSpy *)captureArgument:(SEL)selector atIndex:(NSUInteger)index {$/;"	c	implementation:NSObject
captureArgument:atIndex:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^- (KWCaptureSpy *)captureArgument:(SEL)selector atIndex:(NSUInteger)index {$/;"	m	implementation:NSObject
change:	Example/Pods/BuildHeaders/Kiwi/KWChangeMatcher.h	/^- (void)change:(KWChangeMatcherCountBlock)countBlock;$/;"	m	interface:KWChangeMatcher
change:	Example/Pods/Headers/Kiwi/KWChangeMatcher.h	/^- (void)change:(KWChangeMatcherCountBlock)countBlock;$/;"	m	interface:KWChangeMatcher
change:	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.h	/^- (void)change:(KWChangeMatcherCountBlock)countBlock;$/;"	m	interface:KWChangeMatcher
change:by:	Example/Pods/BuildHeaders/Kiwi/KWChangeMatcher.h	/^- (void)change:(KWChangeMatcherCountBlock)countBlock by:(NSInteger)expectedDifference;$/;"	m	interface:KWChangeMatcher
change:by:	Example/Pods/Headers/Kiwi/KWChangeMatcher.h	/^- (void)change:(KWChangeMatcherCountBlock)countBlock by:(NSInteger)expectedDifference;$/;"	m	interface:KWChangeMatcher
change:by:	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.h	/^- (void)change:(KWChangeMatcherCountBlock)countBlock by:(NSInteger)expectedDifference;$/;"	m	interface:KWChangeMatcher
charData	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSData *)charData;$/;"	p	interface:KWValue
charData	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSData *)charData;$/;"	p	interface:KWValue
charData	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSData *)charData;$/;"	p	interface:KWValue
charData	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSData *)charData {$/;"	m	implementation:KWValue
charDescriptionAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)charDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
charDescriptionAtIndex:	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)charDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
charDescriptionAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (NSString *)charDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
charValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (char)charValue;$/;"	p	interface:KWValue
charValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (char)charValue;$/;"	p	interface:KWValue
charValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (char)charValue;$/;"	p	interface:KWValue
charValue	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (char)charValue {$/;"	m	implementation:KWValue
check:	Example/Pods/BuildHeaders/Kiwi/KWProbePoller.h	/^- (BOOL)check:(id<KWProbe>)probe;$/;"	m	interface:KWProbePoller
check:	Example/Pods/Headers/Kiwi/KWProbePoller.h	/^- (BOOL)check:(id<KWProbe>)probe;$/;"	m	interface:KWProbePoller
check:	Example/Pods/Kiwi/Classes/Core/KWProbePoller.h	/^- (BOOL)check:(id<KWProbe>)probe;$/;"	m	interface:KWProbePoller
child	Example/Pods/BuildHeaders/Kiwi/KWLetNode.h	/^@property (nonatomic, readonly, strong) KWLetNode *child;$/;"	p	interface:KWLetNode
child	Example/Pods/Headers/Kiwi/KWLetNode.h	/^@property (nonatomic, readonly, strong) KWLetNode *child;$/;"	p	interface:KWLetNode
child	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.h	/^@property (nonatomic, readonly, strong) KWLetNode *child;$/;"	p	interface:KWLetNode
child	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^@property (nonatomic, strong) KWLetNode *child;$/;"	p	interface:KWLetNode
choosedForData	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^        data = choosedForData;$/;"	p	interface:KWStub
choosedForData	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    [anInvocation setReturnValue:choosedForData];$/;"	p	interface:KWStub
class	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    BOOL isPending = [self.exampleNode isKindOfClass:[KWPendingNode class]];$/;"	p	interface:KWExample
class	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^    return [anObject isKindOfClass:[NSString class]];$/;"	p	interface:KWNotificationMatcher
clearStubs	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (void)clearStubs;$/;"	p	protocol:KWMessageSpying
clearStubs	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)clearStubs;$/;"	m	protocol:KWMessageSpying
clearStubs	Example/Pods/Headers/Kiwi/KWMock.h	/^- (void)clearStubs;$/;"	p	protocol:KWMessageSpying
clearStubs	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)clearStubs;$/;"	m	protocol:KWMessageSpying
clearStubs	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (void)clearStubs;$/;"	p	protocol:KWMessageSpying
clearStubs	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^- (void)clearStubs;$/;"	m	protocol:KWMessageSpying
clearStubs	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^- (void)clearStubs {$/;"	m	implementation:NSObject
cmd	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        KWMessagePattern *messagePattern = [KWMessagePattern messagePatternWithSelector:_cmd];$/;"	p	interface:KWMock
cmd	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        NSInvocation *invocation = [NSInvocation invocationWithTarget:self selector:_cmd];$/;"	p	interface:KWMock
cmd	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    KWMessagePattern *messagePattern = [KWMessagePattern messagePatternWithSelector:_cmd];$/;"	p	interface:KWMock
cmd	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    NSInvocation *invocation = [NSInvocation invocationWithTarget:self selector:_cmd];$/;"	p	interface:KWMock
compare:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSComparisonResult)compare:(KWValue *)aValue {$/;"	m	implementation:KWValue
componentsJoinedByString	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    return [parts componentsJoinedByString:@" "];$/;"	p	interface:KWExample
componentsSeparatedByString	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    NSArray *focusInfo = [nodeUrl componentsSeparatedByString:@":"];$/;"	p	interface:KWExampleSuiteBuilder
componentsSeparatedByString	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^    NSArray *words = [name componentsSeparatedByString:@" "];$/;"	p	interface:KWSpec
configClass	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^    static Class configClass;$/;"	p	interface:KWSuiteConfigurationBase
configureSuite	Example/Pods/BuildHeaders/Kiwi/KWSuiteConfigurationBase.h	/^- (void)configureSuite;$/;"	m	interface:KWSuiteConfigurationBase
configureSuite	Example/Pods/Headers/Kiwi/KWSuiteConfigurationBase.h	/^- (void)configureSuite;$/;"	m	interface:KWSuiteConfigurationBase
configureSuite	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.h	/^- (void)configureSuite;$/;"	m	interface:KWSuiteConfigurationBase
configureSuite	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^    [self configureSuite];$/;"	p	interface:KWSuiteConfigurationBase
conformToProtocol:	Example/Pods/BuildHeaders/Kiwi/KWConformToProtocolMatcher.h	/^- (void)conformToProtocol:(Protocol *)aProtocol;$/;"	m	interface:KWConformToProtocolMatcher
conformToProtocol:	Example/Pods/Headers/Kiwi/KWConformToProtocolMatcher.h	/^- (void)conformToProtocol:(Protocol *)aProtocol;$/;"	m	interface:KWConformToProtocolMatcher
conformToProtocol:	Example/Pods/Kiwi/Classes/Matchers/KWConformToProtocolMatcher.h	/^- (void)conformToProtocol:(Protocol *)aProtocol;$/;"	m	interface:KWConformToProtocolMatcher
contain:	Example/Pods/BuildHeaders/Kiwi/KWContainMatcher.h	/^- (void)contain:(id)anObject;$/;"	m	interface:KWContainMatcher
contain:	Example/Pods/Headers/Kiwi/KWContainMatcher.h	/^- (void)contain:(id)anObject;$/;"	m	interface:KWContainMatcher
contain:	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.h	/^- (void)contain:(id)anObject;$/;"	m	interface:KWContainMatcher
containObjects:	Example/Pods/BuildHeaders/Kiwi/KWContainMatcher.h	/^- (void)containObjects:(id)firstObject, ... NS_REQUIRES_NIL_TERMINATION;$/;"	m	interface:KWMatchVerifier
containObjects:	Example/Pods/Headers/Kiwi/KWContainMatcher.h	/^- (void)containObjects:(id)firstObject, ... NS_REQUIRES_NIL_TERMINATION;$/;"	m	interface:KWMatchVerifier
containObjects:	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.h	/^- (void)containObjects:(id)firstObject, ... NS_REQUIRES_NIL_TERMINATION;$/;"	m	interface:KWMatchVerifier
containObjectsInArray:	Example/Pods/BuildHeaders/Kiwi/KWContainMatcher.h	/^- (void)containObjectsInArray:(NSArray *)anArray;$/;"	m	interface:KWContainMatcher
containObjectsInArray:	Example/Pods/Headers/Kiwi/KWContainMatcher.h	/^- (void)containObjectsInArray:(NSArray *)anArray;$/;"	m	interface:KWContainMatcher
containObjectsInArray:	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.h	/^- (void)containObjectsInArray:(NSArray *)anArray;$/;"	m	interface:KWContainMatcher
containString:	Example/Pods/BuildHeaders/Kiwi/KWContainStringMatcher.h	/^- (void)containString:(NSString *)string;$/;"	m	interface:KWContainStringMatcher
containString:	Example/Pods/Headers/Kiwi/KWContainStringMatcher.h	/^- (void)containString:(NSString *)string;$/;"	m	interface:KWContainStringMatcher
containString:	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.h	/^- (void)containString:(NSString *)string;$/;"	m	interface:KWContainStringMatcher
containString:options:	Example/Pods/BuildHeaders/Kiwi/KWContainStringMatcher.h	/^- (void)containString:(NSString *)string options:(NSStringCompareOptions)options;$/;"	m	interface:KWContainStringMatcher
containString:options:	Example/Pods/Headers/Kiwi/KWContainStringMatcher.h	/^- (void)containString:(NSString *)string options:(NSStringCompareOptions)options;$/;"	m	interface:KWContainStringMatcher
containString:options:	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.h	/^- (void)containString:(NSString *)string options:(NSStringCompareOptions)options;$/;"	m	interface:KWContainStringMatcher
containsObjectEqualToOrMatching:	Example/Pods/BuildHeaders/Kiwi/KWGenericMatchingAdditions.h	/^- (BOOL)containsObjectEqualToOrMatching:(id)object DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSArray
containsObjectEqualToOrMatching:	Example/Pods/BuildHeaders/Kiwi/KWGenericMatchingAdditions.h	/^- (BOOL)containsObjectEqualToOrMatching:(id)object DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSOrderedSet
containsObjectEqualToOrMatching:	Example/Pods/BuildHeaders/Kiwi/KWGenericMatchingAdditions.h	/^- (BOOL)containsObjectEqualToOrMatching:(id)object DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSSet
containsObjectEqualToOrMatching:	Example/Pods/Headers/Kiwi/KWGenericMatchingAdditions.h	/^- (BOOL)containsObjectEqualToOrMatching:(id)object DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSArray
containsObjectEqualToOrMatching:	Example/Pods/Headers/Kiwi/KWGenericMatchingAdditions.h	/^- (BOOL)containsObjectEqualToOrMatching:(id)object DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSOrderedSet
containsObjectEqualToOrMatching:	Example/Pods/Headers/Kiwi/KWGenericMatchingAdditions.h	/^- (BOOL)containsObjectEqualToOrMatching:(id)object DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSSet
containsObjectEqualToOrMatching:	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchingAdditions.h	/^- (BOOL)containsObjectEqualToOrMatching:(id)object DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSArray
containsObjectEqualToOrMatching:	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchingAdditions.h	/^- (BOOL)containsObjectEqualToOrMatching:(id)object DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSOrderedSet
containsObjectEqualToOrMatching:	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchingAdditions.h	/^- (BOOL)containsObjectEqualToOrMatching:(id)object DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSSet
containsObjectEqualToOrMatching:	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchingAdditions.m	/^- (BOOL)containsObjectEqualToOrMatching:(id)object {$/;"	m	implementation:NSArray
containsObjectEqualToOrMatching:	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchingAdditions.m	/^- (BOOL)containsObjectEqualToOrMatching:(id)object {$/;"	m	implementation:NSOrderedSet
containsObjectEqualToOrMatching:	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchingAdditions.m	/^- (BOOL)containsObjectEqualToOrMatching:(id)object {$/;"	m	implementation:NSSet
containsObjectMatching:	Example/Pods/BuildHeaders/Kiwi/KWGenericMatchingAdditions.h	/^- (BOOL)containsObjectMatching:(id)matcher DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSArray
containsObjectMatching:	Example/Pods/Headers/Kiwi/KWGenericMatchingAdditions.h	/^- (BOOL)containsObjectMatching:(id)matcher DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSArray
containsObjectMatching:	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchingAdditions.h	/^- (BOOL)containsObjectMatching:(id)matcher DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSArray
containsObjectMatching:	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchingAdditions.m	/^- (BOOL)containsObjectMatching:(id)matcher {$/;"	m	implementation:NSArray
context	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^- (BOOL)isLastInContext:(KWContextNode *)context;$/;"	p	interface:KWExample
context	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void context(NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
context	Example/Pods/BuildHeaders/Kiwi/KWItNode.h	/^@property (nonatomic, weak, readonly) KWContextNode *context;$/;"	p	interface:KWItNode
context	Example/Pods/BuildHeaders/Kiwi/KWPendingNode.h	/^@property (nonatomic, readonly, strong) KWContextNode *context;$/;"	p	interface:KWPendingNode
context	Example/Pods/Headers/Kiwi/KWExample.h	/^- (BOOL)isLastInContext:(KWContextNode *)context;$/;"	p	interface:KWExample
context	Example/Pods/Headers/Kiwi/KWExample.h	/^void context(NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
context	Example/Pods/Headers/Kiwi/KWItNode.h	/^@property (nonatomic, weak, readonly) KWContextNode *context;$/;"	p	interface:KWItNode
context	Example/Pods/Headers/Kiwi/KWPendingNode.h	/^@property (nonatomic, readonly, strong) KWContextNode *context;$/;"	p	interface:KWPendingNode
context	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^- (BOOL)isLastInContext:(KWContextNode *)context;$/;"	p	interface:KWExample
context	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void context(NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
context	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^        [lastExample.lastInContexts addObject:context];$/;"	p	interface:KWExampleSuite
context	Example/Pods/Kiwi/Classes/Nodes/KWItNode.h	/^@property (nonatomic, weak, readonly) KWContextNode *context;$/;"	p	interface:KWItNode
context	Example/Pods/Kiwi/Classes/Nodes/KWItNode.m	/^    KWContextNode *currentContext = _context;$/;"	p	interface:KWItNode
context	Example/Pods/Kiwi/Classes/Nodes/KWItNode.m	/^    itNode.context = context;$/;"	p	interface:KWItNode
context	Example/Pods/Kiwi/Classes/Nodes/KWItNode.m	/^@property (nonatomic, weak) KWContextNode *context;$/;"	p	interface:KWItNode
context	Example/Pods/Kiwi/Classes/Nodes/KWPendingNode.h	/^@property (nonatomic, readonly, strong) KWContextNode *context;$/;"	p	interface:KWPendingNode
contextNode	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^        _rootNode = contextNode;$/;"	p	interface:KWExampleSuite
contextNode	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^        node.isFocused = [self shouldFocusContextNodeWithCallSite:aCallSite parentNode:contextNode];$/;"	p	interface:KWExampleSuiteBuilder
contextNode	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    [self.currentExampleSuite markLastExampleAsLastInContext:contextNode];$/;"	p	interface:KWExampleSuiteBuilder
contextNodeStack	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^@property (nonatomic, readonly) NSMutableArray *contextNodeStack;$/;"	p	interface:KWExampleSuiteBuilder
contextNodeWithCallSite:parentContext:description:	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^+ (id)contextNodeWithCallSite:(KWCallSite *)aCallSite parentContext:(KWContextNode *)contextNode description:(NSString *)aDescription;$/;"	c	interface:KWContextNode
contextNodeWithCallSite:parentContext:description:	Example/Pods/Headers/Kiwi/KWContextNode.h	/^+ (id)contextNodeWithCallSite:(KWCallSite *)aCallSite parentContext:(KWContextNode *)contextNode description:(NSString *)aDescription;$/;"	c	interface:KWContextNode
contextNodeWithCallSite:parentContext:description:	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^+ (id)contextNodeWithCallSite:(KWCallSite *)aCallSite parentContext:(KWContextNode *)contextNode description:(NSString *)aDescription;$/;"	c	interface:KWContextNode
contextStack	Example/Pods/BuildHeaders/Kiwi/KWExampleNode.h	/^- (NSArray *)contextStack;$/;"	m	protocol:KWExampleNodeVisitor
contextStack	Example/Pods/Headers/Kiwi/KWExampleNode.h	/^- (NSArray *)contextStack;$/;"	m	protocol:KWExampleNodeVisitor
contextStack	Example/Pods/Kiwi/Classes/Nodes/KWExampleNode.h	/^- (NSArray *)contextStack;$/;"	m	protocol:KWExampleNodeVisitor
contextStack	Example/Pods/Kiwi/Classes/Nodes/KWItNode.m	/^    return contextStack;$/;"	p	interface:KWItNode
contextStack	Example/Pods/Kiwi/Classes/Nodes/KWPendingNode.m	/^{$/;"	m	implementation:KWPendingNode
contextWithCallSite	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void contextWithCallSite(KWCallSite *aCallSite, NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
contextWithCallSite	Example/Pods/Headers/Kiwi/KWExample.h	/^void contextWithCallSite(KWCallSite *aCallSite, NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
contextWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void contextWithCallSite(KWCallSite *aCallSite, NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
contextWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    contextWithCallSite(aCallSite, aDescription, block);$/;"	p	interface:KWExample
contextWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    contextWithCallSite(callSite, aDescription, block);$/;"	p	interface:KWExample
continue	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^                continue;$/;"	p	interface:KWMatcherFactory
continue	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^            continue;$/;"	p	interface:KWSpec
continue	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^            continue;$/;"	p	interface:KWMock
copy	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.m	/^                _argument = [argument copy];$/;"	p	interface:KWCaptureSpy
copy	Example/Pods/Kiwi/Classes/Core/KWFutureObject.m	/^        _block = [aBlock copy];$/;"	p	interface:KWFutureObject
copy	Example/Pods/Kiwi/Classes/Matchers/KWStringContainsMatcher.m	/^        _substring = [aSubstring copy];$/;"	p	interface:KWStringContainsMatcher
copy	Example/Pods/Kiwi/Classes/Matchers/KWStringPrefixMatcher.m	/^        _prefix = [aPrefix copy];$/;"	p	interface:KWStringPrefixMatcher
copy	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^        matcherBlock = [aBlock copy];$/;"	p	interface:KWUserDefinedMatcher
copy	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^    description = [aDescription copy];$/;"	p	interface:KWUserDefinedMatcher
copy	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^    failureMessageForShouldBlock = [block copy];$/;"	p	interface:KWUserDefinedMatcher
copy	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^    failureMessageForShouldNotBlock = [block copy];$/;"	p	interface:KWUserDefinedMatcher
copy	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        _mockName = [aName copy];$/;"	p	interface:KWMock
copy	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        return [super copy];$/;"	p	interface:KWMock
copy	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^        _description = [aDescription copy];$/;"	p	interface:KWContextNode
copy	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^    void (^innerExampleBlock)(void) = [exampleBlock copy];$/;"	p	interface:KWContextNode
copy	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^        _block = [block copy];$/;"	p	interface:KWLetNode
copy	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^        _symbolName = [aSymbolName copy];$/;"	p	interface:KWLetNode
copy	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^        return [description copy];$/;"	p	interface:KWLetNode
copy	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^			if (strcmp(argType, "@?") == 0) arg = [arg copy];$/;"	p	interface:KWStub
count	Example/Pods/BuildHeaders/Kiwi/KWMessageTracker.h	/^@property (nonatomic, readonly) NSUInteger count;$/;"	p	interface:KWMessageTracker
count	Example/Pods/Headers/Kiwi/KWMessageTracker.h	/^@property (nonatomic, readonly) NSUInteger count;$/;"	p	interface:KWMessageTracker
count	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    return [self.contextNodeStack count] > 0;$/;"	p	interface:KWExampleSuiteBuilder
count	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.h	/^@property (nonatomic, readonly) NSUInteger count;$/;"	p	interface:KWMessageTracker
count	Example/Pods/Kiwi/Classes/Matchers/KWBeEmptyMatcher.m	/^@property (nonatomic, readwrite) NSUInteger count;$/;"	m	interface:KWBeEmptyMatcher
count	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^        return self.actualCount <= self.count;$/;"	p	interface:KWHaveMatcher
count	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^        return self.actualCount == self.count;$/;"	p	interface:KWHaveMatcher
count	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^        return self.actualCount >= self.count;$/;"	p	interface:KWHaveMatcher
count	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^        self.actualCount = [targetObject count];$/;"	p	interface:KWHaveMatcher
count	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^@property (nonatomic, assign) NSUInteger count;$/;"	p	interface:KWHaveMatcher
count	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        unsigned int count = 0;$/;"	p	interface:KWMock
count	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    NSUInteger stubCount = [self.stubs count];$/;"	p	interface:KWMock
countBlock	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^    NSInteger before = self.countBlock();$/;"	p	interface:KWChangeMatcher
countBlock	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^    self.actualTotal = self.countBlock();$/;"	p	interface:KWChangeMatcher
countBlock	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^    self.countBlock = countBlock;$/;"	p	interface:KWChangeMatcher
countBlock	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^@property (nonatomic, copy) KWChangeMatcherCountBlock countBlock;$/;"	p	interface:KWChangeMatcher
countPhrase	Example/Pods/Kiwi/Classes/Matchers/KWBeEmptyMatcher.m	/^- (NSString *)countPhrase {$/;"	m	implementation:KWBeEmptyMatcher
countType	Example/Pods/BuildHeaders/Kiwi/KWMessageTracker.h	/^@property (nonatomic, readonly) KWCountType countType;$/;"	p	interface:KWMessageTracker
countType	Example/Pods/Headers/Kiwi/KWMessageTracker.h	/^@property (nonatomic, readonly) KWCountType countType;$/;"	p	interface:KWMessageTracker
countType	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.h	/^@property (nonatomic, readonly) KWCountType countType;$/;"	p	interface:KWMessageTracker
countType	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^@property (nonatomic, assign) KWCountType countType;$/;"	m	interface:KWHaveMatcher
currentContext	Example/Pods/Kiwi/Classes/Nodes/KWItNode.m	/^        [contextStack addObject:currentContext];$/;"	p	interface:KWItNode
currentExample	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^@property (nonatomic, strong) KWExample *currentExample;$/;"	p	interface:KWExampleSuiteBuilder
currentExample	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^@property (nonatomic, strong) KWExample *currentExample;$/;"	p	interface:KWExampleSuiteBuilder
currentExample	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^@property (nonatomic, strong) KWExample *currentExample;$/;"	p	interface:KWExampleSuiteBuilder
currentExample	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^@property (nonatomic, strong) KWExample *currentExample;$/;"	p	interface:KWSpec
currentExample	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^    KWExample *currentExample = [[KWExampleSuiteBuilder sharedExampleSuiteBuilder] currentExample];$/;"	p	interface:KWNilMatcher
currentExampleSuite	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^@property (nonatomic, strong, readonly) KWExampleSuite *currentExampleSuite;$/;"	p	interface:KWExampleSuiteBuilder
currentExampleSuite	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^@property (nonatomic, strong, readonly) KWExampleSuite *currentExampleSuite;$/;"	p	interface:KWExampleSuiteBuilder
currentExampleSuite	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^@property (nonatomic, strong, readonly) KWExampleSuite *currentExampleSuite;$/;"	p	interface:KWExampleSuiteBuilder
currentExampleSuite	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    [self.suites addObject:self.currentExampleSuite];$/;"	p	interface:KWExampleSuiteBuilder
currentExampleSuite	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    return self.currentExampleSuite;$/;"	p	interface:KWExampleSuiteBuilder
currentExampleSuite	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^@property (nonatomic, strong) KWExampleSuite *currentExampleSuite;$/;"	m	interface:KWExampleSuiteBuilder
data	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    return data;$/;"	p	interface:KWStub
dataForObjCType:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSData *)dataForObjCType:(const char *)anObjCType {$/;"	m	implementation:KWValue
dataValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSData *)dataValue;$/;"	p	interface:KWValue
dataValue	Example/Pods/BuildHeaders/Kiwi/NSValue+KiwiAdditions.h	/^- (NSData *)dataValue;$/;"	m	interface:NSValue
dataValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSData *)dataValue;$/;"	p	interface:KWValue
dataValue	Example/Pods/Headers/Kiwi/NSValue+KiwiAdditions.h	/^- (NSData *)dataValue;$/;"	m	interface:NSValue
dataValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSData *)dataValue;$/;"	p	interface:KWValue
dataValue	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSData *)dataValue {$/;"	m	implementation:KWValue
dataValue	Example/Pods/Kiwi/Classes/Core/NSValue+KiwiAdditions.h	/^- (NSData *)dataValue;$/;"	m	interface:NSValue
dataValue	Example/Pods/Kiwi/Classes/Core/NSValue+KiwiAdditions.m	/^- (NSData *)dataValue {$/;"	m	implementation:NSValue
dataValue	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^            choosedForData = [self.secondValue dataValue];$/;"	p	interface:KWStub
dataValue	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    NSData *choosedForData = [self.value dataValue];$/;"	p	interface:KWStub
defaultCenter	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^    NSNotificationCenter *center = [NSNotificationCenter defaultCenter];$/;"	p	interface:KWNotificationMatcher
defaultConfiguration	Example/Pods/BuildHeaders/Kiwi/KWSuiteConfigurationBase.h	/^+ (instancetype)defaultConfiguration;$/;"	c	interface:KWSuiteConfigurationBase
defaultConfiguration	Example/Pods/Headers/Kiwi/KWSuiteConfigurationBase.h	/^+ (instancetype)defaultConfiguration;$/;"	c	interface:KWSuiteConfigurationBase
defaultConfiguration	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.h	/^+ (instancetype)defaultConfiguration;$/;"	c	interface:KWSuiteConfigurationBase
defaultConfiguration	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^    return defaultConfiguration;$/;"	p	interface:KWSuiteConfigurationBase
defaultConfiguration	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^    static KWSuiteConfigurationBase *defaultConfiguration;$/;"	p	interface:KWSuiteConfigurationBase
defineMatcher	Example/Pods/BuildHeaders/Kiwi/KiwiBlockMacros.h	/^#define defineMatcher(...) KWDefineMatchers(__VA_ARGS__)$/;"	M	interface:
defineMatcher	Example/Pods/Headers/Kiwi/KiwiBlockMacros.h	/^#define defineMatcher(...) KWDefineMatchers(__VA_ARGS__)$/;"	M	interface:
defineMatcher	Example/Pods/Kiwi/Classes/Core/KiwiBlockMacros.h	/^#define defineMatcher(...) KWDefineMatchers(__VA_ARGS__)$/;"	M	interface:
defineMatcher:as:	Example/Pods/BuildHeaders/Kiwi/KWMatchers.h	/^+ (void)defineMatcher:(NSString *)selectorString as:(KWMatchersBuildingBlock)block;$/;"	m	interface:KWMatchers
defineMatcher:as:	Example/Pods/BuildHeaders/Kiwi/KWMatchers.h	/^- (void)defineMatcher:(NSString *)selectorString as:(KWMatchersBuildingBlock)block;$/;"	m	interface:KWMatchers
defineMatcher:as:	Example/Pods/Headers/Kiwi/KWMatchers.h	/^+ (void)defineMatcher:(NSString *)selectorString as:(KWMatchersBuildingBlock)block;$/;"	m	interface:KWMatchers
defineMatcher:as:	Example/Pods/Headers/Kiwi/KWMatchers.h	/^- (void)defineMatcher:(NSString *)selectorString as:(KWMatchersBuildingBlock)block;$/;"	m	interface:KWMatchers
defineMatcher:as:	Example/Pods/Kiwi/Classes/Core/KWMatchers.h	/^+ (void)defineMatcher:(NSString *)selectorString as:(KWMatchersBuildingBlock)block;$/;"	m	interface:KWMatchers
defineMatcher:as:	Example/Pods/Kiwi/Classes/Core/KWMatchers.h	/^- (void)defineMatcher:(NSString *)selectorString as:(KWMatchersBuildingBlock)block;$/;"	m	interface:KWMatchers
defineMatcher:as:	Example/Pods/Kiwi/Classes/Core/KWMatchers.m	/^+ (void)defineMatcher:(NSString *)selectorString as:(KWMatchersBuildingBlock)block {$/;"	m	implementation:KWMatchers
defineMatcher:as:	Example/Pods/Kiwi/Classes/Core/KWMatchers.m	/^- (void)defineMatcher:(NSString *)selectorString as:(KWMatchersBuildingBlock)block {$/;"	m	implementation:KWMatchers
delayInterval	Example/Pods/Kiwi/Classes/Core/KWProbePoller.m	/^@property (nonatomic, assign) NSTimeInterval delayInterval;$/;"	p	interface:KWTimeout
delegate	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^- (void)runWithDelegate:(id<KWExampleDelegate>)delegate;$/;"	p	interface:KWExample
delegate	Example/Pods/BuildHeaders/Kiwi/KWInvocationCapturer.h	/^@property (nonatomic, weak, readonly) id delegate;$/;"	m	protocol:KWInvocationCapturerDelegate
delegate	Example/Pods/Headers/Kiwi/KWExample.h	/^- (void)runWithDelegate:(id<KWExampleDelegate>)delegate;$/;"	p	interface:KWExample
delegate	Example/Pods/Headers/Kiwi/KWInvocationCapturer.h	/^@property (nonatomic, weak, readonly) id delegate;$/;"	m	protocol:KWInvocationCapturerDelegate
delegate	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^- (void)runWithDelegate:(id<KWExampleDelegate>)delegate;$/;"	p	interface:KWExample
delegate	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    self.delegate = delegate;$/;"	p	interface:KWExample
delegate	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^- (void)runWithDelegate:(id<KWExampleDelegate>)delegate; {$/;"	p	interface:KWExample
delegate	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^@property (nonatomic, weak) id<KWExampleDelegate> delegate;$/;"	p	interface:KWExample
delegate	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.h	/^@property (nonatomic, weak, readonly) id delegate;$/;"	m	protocol:KWInvocationCapturerDelegate
delegate	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.m	/^@synthesize delegate;$/;"	m	implementation:KWInvocationCapturer
describe	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void describe(NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
describe	Example/Pods/Headers/Kiwi/KWExample.h	/^void describe(NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
describe	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void describe(NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
describe	Example/Tests/Tests.m	/^describe(@"My initial tests", ^{$/;"	f	interface:
describeWithCallSite	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void describeWithCallSite(KWCallSite *aCallSite, NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
describeWithCallSite	Example/Pods/Headers/Kiwi/KWExample.h	/^void describeWithCallSite(KWCallSite *aCallSite, NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
describeWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void describeWithCallSite(KWCallSite *aCallSite, NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
describeWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    describeWithCallSite(callSite, aDescription, block);$/;"	p	interface:KWExample
description	Example/Pods/BuildHeaders/Kiwi/KWBlockNode.h	/^@property (nonatomic, copy) NSString *description;$/;"	m	interface:KWBlockNode
description	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^@property (readonly, copy) NSString *description;$/;"	m	interface:KWContextNode
description	Example/Pods/BuildHeaders/Kiwi/KWPendingNode.h	/^@property (readonly, copy) NSString *description;$/;"	p	interface:KWPendingNode
description	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^    NSString *description;$/;"	p	interface:KWUserDefinedMatcher
description	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^- (void)description:(NSString *)description;$/;"	p	interface:KWUserDefinedMatcher
description	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^@property (nonatomic, copy) NSString *description;$/;"	p	interface:KWUserDefinedMatcher
description	Example/Pods/Headers/Kiwi/KWBlockNode.h	/^@property (nonatomic, copy) NSString *description;$/;"	m	interface:KWBlockNode
description	Example/Pods/Headers/Kiwi/KWContextNode.h	/^@property (readonly, copy) NSString *description;$/;"	m	interface:KWContextNode
description	Example/Pods/Headers/Kiwi/KWPendingNode.h	/^@property (readonly, copy) NSString *description;$/;"	p	interface:KWPendingNode
description	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^    NSString *description;$/;"	p	interface:KWUserDefinedMatcher
description	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^- (void)description:(NSString *)description;$/;"	p	interface:KWUserDefinedMatcher
description	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^@property (nonatomic, copy) NSString *description;$/;"	p	interface:KWUserDefinedMatcher
description	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^                                        [self.exampleNode description] ? [self.exampleNode description] : @""];$/;"	p	interface:KWExample
description	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^  return [NSString stringWithFormat:@"<KWExample: %@>", self.exampleNode.description];$/;"	p	interface:KWExample
description	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.m	/^- (NSString *)description {$/;"	m	implementation:KWInvocationCapturer
description	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.m	/^- (NSString *)description {$/;"	m	implementation:KWMessagePattern
description	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.m	/^- (NSString *)description {$/;"	m	implementation:KWMessageTracker
description	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^    return [self description];$/;"	p	interface:KWSpec
description	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSString *)description {$/;"	m	implementation:KWValue
description	Example/Pods/Kiwi/Classes/Matchers/KWBeEmptyMatcher.m	/^- (NSString *)description {$/;"	m	implementation:KWBeEmptyMatcher
description	Example/Pods/Kiwi/Classes/Matchers/KWBeIdenticalToMatcher.m	/^- (NSString *)description {$/;"	m	implementation:KWBeIdenticalToMatcher
description	Example/Pods/Kiwi/Classes/Matchers/KWBeSubclassOfClassMatcher.m	/^- (NSString *)description {$/;"	m	implementation:KWBeSubclassOfClassMatcher
description	Example/Pods/Kiwi/Classes/Matchers/KWBeZeroMatcher.m	/^- (NSString *)description {$/;"	m	implementation:KWBeZeroMatcher
description	Example/Pods/Kiwi/Classes/Matchers/KWEqualMatcher.m	/^{$/;"	m	implementation:KWEqualMatcher
description	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatcher.m	/^  return [NSString stringWithFormat:@"match %@", [self.matcher description]];$/;"	p	interface:KWGenericMatcher
description	Example/Pods/Kiwi/Classes/Matchers/KWRespondToSelectorMatcher.m	/^- (NSString *)description {$/;"	m	implementation:KWRespondToSelectorMatcher
description	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^    NSString *description;$/;"	p	interface:KWUserDefinedMatcher
description	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^- (void)description:(NSString *)description;$/;"	p	interface:KWUserDefinedMatcher
description	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^@property (nonatomic, copy) NSString *description;$/;"	p	interface:KWUserDefinedMatcher
description	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^        [matcher setDescription:description];$/;"	p	interface:KWUserDefinedMatcher
description	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^        self.description = @"match user defined matcher";$/;"	p	interface:KWUserDefinedMatcher
description	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^@synthesize description;$/;"	p	interface:KWUserDefinedMatcher
description	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        return [super description];$/;"	p	interface:KWMock
description	Example/Pods/Kiwi/Classes/Nodes/KWBlockNode.h	/^@property (nonatomic, copy) NSString *description;$/;"	m	interface:KWBlockNode
description	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^@property (readonly, copy) NSString *description;$/;"	m	interface:KWContextNode
description	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^@synthesize description = _description;$/;"	p	interface:KWContextNode
description	Example/Pods/Kiwi/Classes/Nodes/KWItNode.m	/^    NSString *description = [super description];$/;"	p	interface:KWItNode
description	Example/Pods/Kiwi/Classes/Nodes/KWItNode.m	/^    return description;$/;"	p	interface:KWItNode
description	Example/Pods/Kiwi/Classes/Nodes/KWPendingNode.h	/^@property (readonly, copy) NSString *description;$/;"	p	interface:KWPendingNode
description	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^        failureMessage = [exception description];$/;"	p	interface:KWMatchVerifier
descriptionForAnonymousItNode	Example/Pods/BuildHeaders/Kiwi/KWVerifying.h	/^- (NSString *)descriptionForAnonymousItNode;$/;"	p	protocol:KWVerifying
descriptionForAnonymousItNode	Example/Pods/Headers/Kiwi/KWVerifying.h	/^- (NSString *)descriptionForAnonymousItNode;$/;"	p	protocol:KWVerifying
descriptionForAnonymousItNode	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    return [(self.verifiers)[0] descriptionForAnonymousItNode];$/;"	p	interface:KWExample
descriptionForAnonymousItNode	Example/Pods/Kiwi/Classes/Verifiers/KWVerifying.h	/^- (NSString *)descriptionForAnonymousItNode;$/;"	p	protocol:KWVerifying
descriptionWithContext	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^- (NSString *)descriptionWithContext;$/;"	p	interface:KWExample
descriptionWithContext	Example/Pods/Headers/Kiwi/KWExample.h	/^- (NSString *)descriptionWithContext;$/;"	p	interface:KWExample
descriptionWithContext	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^- (NSString *)descriptionWithContext;$/;"	p	interface:KWExample
descriptionWithContext	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    return isPending ? [descriptionWithContext stringByAppendingString:[self pendingNotFinished]] : descriptionWithContext;$/;"	p	interface:KWExample
descriptionWithContext	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^    NSString *name = [currentExample descriptionWithContext];$/;"	p	interface:KWSpec
didNotFinish	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    BOOL reportPending = self.didNotFinish;$/;"	p	interface:KWExample
didNotFinish	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^@property (nonatomic, assign) BOOL didNotFinish;$/;"	p	interface:KWExample
didReceiveMemoryWarning	Example/Clappr/CLPViewController.m	/^{$/;"	m	implementation:CLPViewController
didReceiveNotification	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^                                            self.didReceiveNotification &= (self.expectedObject==note.object);$/;"	p	interface:KWNotificationMatcher
didReceiveNotification	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^    return self.didReceiveNotification;$/;"	p	interface:KWNotificationMatcher
didReceiveNotification	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^@property (nonatomic, assign) BOOL didReceiveNotification;$/;"	p	interface:KWNotificationMatcher
dispatch_once	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^        configClass = NSClassFromString(@"KWSuiteConfiguration");$/;"	p	interface:KWSuiteConfigurationBase
dispatch_once	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    });$/;"	p	interface:KWExampleSuiteBuilder
distance	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^@property (nonatomic, readwrite, strong) id distance;$/;"	p	interface:KWBeWithinMatcher
doubleData	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSData *)doubleData;$/;"	p	interface:KWValue
doubleData	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSData *)doubleData;$/;"	p	interface:KWValue
doubleData	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSData *)doubleData;$/;"	p	interface:KWValue
doubleData	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSData *)doubleData {$/;"	m	implementation:KWValue
doubleDescriptionAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)doubleDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
doubleDescriptionAtIndex:	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)doubleDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
doubleDescriptionAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (NSString *)doubleDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
doubleValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (double)doubleValue;$/;"	p	interface:KWValue
doubleValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (double)doubleValue;$/;"	p	interface:KWValue
doubleValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (double)doubleValue;$/;"	p	interface:KWValue
doubleValue	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (double)doubleValue {$/;"	m	implementation:KWValue
doubleValue	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^    double firstValue = [self.subject doubleValue];$/;"	p	interface:KWBeWithinMatcher
doubleValue	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^    double secondValue = [self.otherValue doubleValue];$/;"	p	interface:KWBeWithinMatcher
doubleValue	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^    double theDistance = [self.distance doubleValue];$/;"	p	interface:KWBeWithinMatcher
e	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    NSError *e;$/;"	p	interface:KWExample
e	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    NSRegularExpression *regex = [NSRegularExpression regularExpressionWithPattern:pattern options:NSRegularExpressionCaseInsensitive error:&e];$/;"	p	interface:KWExample
elements	Example/Pods/BuildHeaders/Kiwi/KWHaveMatcher.h	/^- (id)elements;$/;"	m	protocol:KWContainmentCountMatcherTerminals
elements	Example/Pods/Headers/Kiwi/KWHaveMatcher.h	/^- (id)elements;$/;"	m	protocol:KWContainmentCountMatcherTerminals
elements	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.h	/^- (id)elements;$/;"	m	protocol:KWContainmentCountMatcherTerminals
endOfExampleMatcher	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^        [self verifyWithMatcher:self.endOfExampleMatcher];$/;"	p	interface:KWMatchVerifier
endOfExampleMatcher	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^    id<KWMatching> actualMatcher = (self.endOfExampleMatcher == nil) ? self.matcher : self.endOfExampleMatcher;$/;"	p	interface:KWMatchVerifier
endOfExampleMatcher	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^@property (nonatomic, readwrite, strong) id<KWMatching> endOfExampleMatcher;$/;"	m	interface:KWMatchVerifier
endWithString:	Example/Pods/BuildHeaders/Kiwi/KWContainStringMatcher.h	/^- (void)endWithString:(NSString *)suffix;$/;"	m	interface:KWContainStringMatcher
endWithString:	Example/Pods/Headers/Kiwi/KWContainStringMatcher.h	/^- (void)endWithString:(NSString *)suffix;$/;"	m	interface:KWContainStringMatcher
endWithString:	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.h	/^- (void)endWithString:(NSString *)suffix;$/;"	m	interface:KWContainStringMatcher
equal:	Example/Pods/BuildHeaders/Kiwi/KWEqualMatcher.h	/^- (void)equal:(id)anObject;$/;"	m	interface:KWEqualMatcher
equal:	Example/Pods/Headers/Kiwi/KWEqualMatcher.h	/^- (void)equal:(id)anObject;$/;"	m	interface:KWEqualMatcher
equal:	Example/Pods/Kiwi/Classes/Matchers/KWEqualMatcher.h	/^- (void)equal:(id)anObject;$/;"	m	interface:KWEqualMatcher
equal:	Example/Pods/Kiwi/Classes/Matchers/KWEqualMatcher.m	/^- (void)equal:(id)anObject {$/;"	m	implementation:KWEqualMatcher
equal:withDelta:	Example/Pods/BuildHeaders/Kiwi/KWBeWithinMatcher.h	/^- (void)equal:(double)aValue withDelta:(double)aDelta;$/;"	m	interface:KWBeWithinMatcher
equal:withDelta:	Example/Pods/Headers/Kiwi/KWBeWithinMatcher.h	/^- (void)equal:(double)aValue withDelta:(double)aDelta;$/;"	m	interface:KWBeWithinMatcher
equal:withDelta:	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.h	/^- (void)equal:(double)aValue withDelta:(double)aDelta;$/;"	m	interface:KWBeWithinMatcher
error	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^    NSRegularExpression *regex = [NSRegularExpression regularExpressionWithPattern:@"[^a-zA-Z0-9_]*" options:0 error:&error];$/;"	p	interface:KWSpec
error	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.m	/^                                                                             error:&error];$/;"	p	interface:KWRegularExpressionPatternMatcher
evaluate	Example/Pods/BuildHeaders/Kiwi/KWLetNode.h	/^- (id)evaluate;$/;"	p	interface:KWLetNode
evaluate	Example/Pods/BuildHeaders/Kiwi/KWMatcher.h	/^- (BOOL)evaluate;$/;"	m	interface:KWMatcher
evaluate	Example/Pods/BuildHeaders/Kiwi/KWMatching.h	/^- (BOOL)evaluate;$/;"	m	protocol:KWMatching
evaluate	Example/Pods/Headers/Kiwi/KWLetNode.h	/^- (id)evaluate;$/;"	p	interface:KWLetNode
evaluate	Example/Pods/Headers/Kiwi/KWMatcher.h	/^- (BOOL)evaluate;$/;"	m	interface:KWMatcher
evaluate	Example/Pods/Headers/Kiwi/KWMatching.h	/^- (BOOL)evaluate;$/;"	m	protocol:KWMatching
evaluate	Example/Pods/Kiwi/Classes/Core/KWMatcher.h	/^- (BOOL)evaluate;$/;"	m	interface:KWMatcher
evaluate	Example/Pods/Kiwi/Classes/Core/KWMatcher.m	/^- (BOOL)evaluate {$/;"	m	implementation:KWMatcher
evaluate	Example/Pods/Kiwi/Classes/Core/KWMatching.h	/^- (BOOL)evaluate;$/;"	m	protocol:KWMatching
evaluate	Example/Pods/Kiwi/Classes/Matchers/KWBeEmptyMatcher.m	/^- (BOOL)evaluate {$/;"	m	implementation:KWBeEmptyMatcher
evaluate	Example/Pods/Kiwi/Classes/Matchers/KWBeIdenticalToMatcher.m	/^- (BOOL)evaluate {$/;"	m	implementation:KWBeIdenticalToMatcher
evaluate	Example/Pods/Kiwi/Classes/Matchers/KWBeSubclassOfClassMatcher.m	/^- (BOOL)evaluate {$/;"	m	implementation:KWBeSubclassOfClassMatcher
evaluate	Example/Pods/Kiwi/Classes/Matchers/KWBeZeroMatcher.m	/^- (BOOL)evaluate {$/;"	m	implementation:KWBeZeroMatcher
evaluate	Example/Pods/Kiwi/Classes/Matchers/KWEqualMatcher.m	/^- (BOOL)evaluate {$/;"	m	implementation:KWEqualMatcher
evaluate	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (BOOL)evaluate {$/;"	m	implementation:KWReceiveMatcher
evaluate	Example/Pods/Kiwi/Classes/Matchers/KWRespondToSelectorMatcher.m	/^- (BOOL)evaluate {$/;"	m	implementation:KWRespondToSelectorMatcher
evaluate	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.h	/^- (id)evaluate;$/;"	p	interface:KWLetNode
evaluate	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^        result = [self.child evaluate];$/;"	p	interface:KWLetNode
evaluate	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    [self evaluate];$/;"	p	interface:KWLetNode
evaluate	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^        BOOL matchResult = [aMatcher evaluate];$/;"	p	interface:KWMatchVerifier
evaluateForFloatingPoint	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^        return [self evaluateForFloatingPoint];$/;"	p	interface:KWBeWithinMatcher
evaluateForSignedIntegral	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^        return [self evaluateForSignedIntegral];$/;"	p	interface:KWBeWithinMatcher
evaluateForUnsignedIntegral	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^        return [self evaluateForUnsignedIntegral];$/;"	p	interface:KWBeWithinMatcher
evaluateTree	Example/Pods/BuildHeaders/Kiwi/KWLetNode.h	/^- (void)evaluateTree;$/;"	p	interface:KWLetNode
evaluateTree	Example/Pods/Headers/Kiwi/KWLetNode.h	/^- (void)evaluateTree;$/;"	p	interface:KWLetNode
evaluateTree	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    [aNode evaluateTree];$/;"	p	interface:KWExample
evaluateTree	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.h	/^- (void)evaluateTree;$/;"	p	interface:KWLetNode
evaluateTree	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    [self.next evaluateTree];$/;"	p	interface:KWLetNode
evaluationBlock	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^                                            self.evaluationBlock(note);$/;"	p	interface:KWNotificationMatcher
evaluationBlock	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^@property (nonatomic, copy) PostedNotificationBlock evaluationBlock;$/;"	p	interface:KWNotificationMatcher
example	Example/Pods/BuildHeaders/Kiwi/KWItNode.h	/^@property (nonatomic, strong) KWExample *example;$/;"	p	interface:KWItNode
example	Example/Pods/Headers/Kiwi/KWItNode.h	/^@property (nonatomic, strong) KWExample *example;$/;"	p	interface:KWItNode
example	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^    [self.examples addObject:example];$/;"	p	interface:KWExampleSuite
example	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    [self.currentExampleSuite addExample:example];$/;"	p	interface:KWExampleSuiteBuilder
example	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^                [registerNode acceptExampleNodeVisitor:example];$/;"	p	interface:KWContextNode
example	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^                [self.afterAllNode acceptExampleNodeVisitor:example];$/;"	p	interface:KWContextNode
example	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^                [self.beforeAllNode acceptExampleNodeVisitor:example];$/;"	p	interface:KWContextNode
example	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^            [letNodeTree acceptExampleNodeVisitor:example];$/;"	p	interface:KWContextNode
example	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^            [self.afterEachNode acceptExampleNodeVisitor:example];$/;"	p	interface:KWContextNode
example	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^            [self.beforeEachNode acceptExampleNodeVisitor:example];$/;"	p	interface:KWContextNode
example	Example/Pods/Kiwi/Classes/Nodes/KWItNode.h	/^@property (nonatomic, strong) KWExample *example;$/;"	p	interface:KWItNode
example	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^@property (nonatomic, readwrite, strong) KWExample *example;$/;"	p	interface:KWMatchVerifier
example:didFailWithFailure:	Example/Pods/BuildHeaders/Kiwi/KWExampleDelegate.h	/^- (void)example:(KWExample *)example didFailWithFailure:(KWFailure *)failure;$/;"	m	protocol:KWExampleDelegate
example:didFailWithFailure:	Example/Pods/Headers/Kiwi/KWExampleDelegate.h	/^- (void)example:(KWExample *)example didFailWithFailure:(KWFailure *)failure;$/;"	m	protocol:KWExampleDelegate
example:didFailWithFailure:	Example/Pods/Kiwi/Classes/Core/KWExampleDelegate.h	/^- (void)example:(KWExample *)example didFailWithFailure:(KWFailure *)failure;$/;"	m	protocol:KWExampleDelegate
exampleBlock	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^- (void)performExample:(KWExample *)example withBlock:(void (^)(void))exampleBlock;$/;"	p	interface:KWContextNode
exampleBlock	Example/Pods/Headers/Kiwi/KWContextNode.h	/^- (void)performExample:(KWExample *)example withBlock:(void (^)(void))exampleBlock;$/;"	p	interface:KWContextNode
exampleBlock	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^- (void)performExample:(KWExample *)example withBlock:(void (^)(void))exampleBlock;$/;"	p	interface:KWContextNode
exampleGroup	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^        invocation.kw_example = exampleGroup;$/;"	p	interface:KWExampleSuite
exampleNode	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^@property (nonatomic, strong) id<KWExampleNode> exampleNode;$/;"	p	interface:KWExample
exampleWillEnd	Example/Pods/BuildHeaders/Kiwi/KWVerifying.h	/^- (void)exampleWillEnd;$/;"	p	protocol:KWVerifying
exampleWillEnd	Example/Pods/Headers/Kiwi/KWVerifying.h	/^- (void)exampleWillEnd;$/;"	p	protocol:KWVerifying
exampleWillEnd	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^                [verifier exampleWillEnd];$/;"	p	interface:KWExample
exampleWillEnd	Example/Pods/Kiwi/Classes/Verifiers/KWVerifying.h	/^- (void)exampleWillEnd;$/;"	p	protocol:KWVerifying
examples	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^@property (nonatomic, strong) NSMutableArray *examples;$/;"	p	interface:KWExampleSuite
exception	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^    return [NSString stringWithFormat:@"raise %@", [[self class] exceptionPhraseWithException:self.exception]];$/;"	p	interface:KWBlockRaiseMatcher
exception	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^@property (nonatomic, readwrite, strong) NSException *exception;$/;"	p	interface:KWBlockRaiseMatcher
existVerifierWithExpectationType:callSite:reporter:	Example/Pods/BuildHeaders/Kiwi/KWExistVerifier.h	/^+ (id)existVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite reporter:(id<KWReporting>)aReporter;$/;"	c	protocol:KWReporting
existVerifierWithExpectationType:callSite:reporter:	Example/Pods/Headers/Kiwi/KWExistVerifier.h	/^+ (id)existVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite reporter:(id<KWReporting>)aReporter;$/;"	c	protocol:KWReporting
existVerifierWithExpectationType:callSite:reporter:	Example/Pods/Kiwi/Classes/Verifiers/KWExistVerifier.h	/^+ (id)existVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite reporter:(id<KWReporting>)aReporter;$/;"	c	protocol:KWReporting
existingStub	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^            [self.stubs removeObject:existingStub];$/;"	p	interface:KWMock
expect	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (id)expect;$/;"	p	protocol:KWMessageSpying
expect	Example/Pods/Headers/Kiwi/KWMock.h	/^- (id)expect;$/;"	p	protocol:KWMessageSpying
expect	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (id)expect;$/;"	p	protocol:KWMessageSpying
expectFutureValue	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define expectFutureValue(futureValue) [KWFutureObject futureObjectWithBlock:^{ return futureValue; }]$/;"	M	interface:
expectFutureValue	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define expectFutureValue(futureValue) [KWFutureObject futureObjectWithBlock:^{ return futureValue; }]$/;"	M	interface:
expectFutureValue	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define expectFutureValue(futureValue) [KWFutureObject futureObjectWithBlock:^{ return futureValue; }]$/;"	M	interface:
expectationType	Example/Pods/BuildHeaders/Kiwi/KWMatchVerifier.h	/^@property (nonatomic, readonly) KWExpectationType expectationType;$/;"	m	protocol:KWMatching
expectationType	Example/Pods/Headers/Kiwi/KWMatchVerifier.h	/^@property (nonatomic, readonly) KWExpectationType expectationType;$/;"	m	protocol:KWMatching
expectationType	Example/Pods/Kiwi/Classes/Verifiers/KWExistVerifier.m	/^@property (nonatomic, readonly) KWExpectationType expectationType;$/;"	p	interface:KWExistVerifier
expectationType	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.h	/^@property (nonatomic, readonly) KWExpectationType expectationType;$/;"	m	protocol:KWMatching
expectedCountPhrase	Example/Pods/BuildHeaders/Kiwi/KWMessageTracker.h	/^- (NSString *)expectedCountPhrase;$/;"	p	interface:KWMessageTracker
expectedCountPhrase	Example/Pods/Headers/Kiwi/KWMessageTracker.h	/^- (NSString *)expectedCountPhrase;$/;"	p	interface:KWMessageTracker
expectedCountPhrase	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.h	/^- (NSString *)expectedCountPhrase;$/;"	p	interface:KWMessageTracker
expectedCountPhrase	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.m	/^- (NSString *)expectedCountPhrase {$/;"	m	implementation:KWMessageTracker
expectedDifference	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^        return [NSString stringWithFormat:@"change count by %d", (int)self.expectedDifference];$/;"	p	interface:KWChangeMatcher
expectedDifference	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^        self.expectedTotal = before + self.expectedDifference;$/;"	p	interface:KWChangeMatcher
expectedDifference	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^    self.expectedDifference = expectedDifference;$/;"	p	interface:KWChangeMatcher
expectedKey	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^                                          [KWFormatter formatObject:self.expectedKey]];$/;"	p	interface:KWHaveValueMatcher
expectedKey	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^        keyDescription = [NSString stringWithFormat:@"key %@", [KWFormatter formatObject:self.expectedKey]];$/;"	p	interface:KWHaveValueMatcher
expectedKey	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^        value = [self.subject valueForKey:self.expectedKey];$/;"	p	interface:KWHaveValueMatcher
expectedKey	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^@property (nonatomic, strong) NSString *expectedKey;$/;"	p	interface:KWHaveValueMatcher
expectedKeyPath	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^            value = [self.subject valueForKeyPath:self.expectedKeyPath];$/;"	p	interface:KWHaveValueMatcher
expectedKeyPath	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^        keyDescription = [NSString stringWithFormat:@"keypath %@", [KWFormatter formatObject:self.expectedKeyPath]];$/;"	p	interface:KWHaveValueMatcher
expectedKeyPath	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^@property (nonatomic, strong) NSString *expectedKeyPath;$/;"	p	interface:KWHaveValueMatcher
expectedMessagePatterns	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^@property (nonatomic, readonly) NSMutableArray *expectedMessagePatterns;$/;"	p	interface:KWMock
expectedObject	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^        [message appendFormat:@" with object: %@", self.expectedObject];$/;"	p	interface:KWNotificationMatcher
expectedObject	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^@property (nonatomic, strong) id expectedObject;$/;"	p	interface:KWNotificationMatcher
expectedUserInfo	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^        [message appendFormat:@" with object: %@ and user info: %@", self.expectedObject, self.expectedUserInfo];$/;"	p	interface:KWNotificationMatcher
expectedUserInfo	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^        [message appendFormat:@" with user info: %@", self.expectedUserInfo];$/;"	p	interface:KWNotificationMatcher
expectedUserInfo	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^@property (nonatomic, strong) NSDictionary *expectedUserInfo;$/;"	p	interface:KWNotificationMatcher
expectedValue	Example/Pods/Kiwi/Classes/Matchers/KWBeTrueMatcher.m	/^                                       self.expectedValue ? @"true" : @"false"];$/;"	p	interface:KWBeTrueMatcher
expectedValue	Example/Pods/Kiwi/Classes/Matchers/KWBeTrueMatcher.m	/^    return [self.subject boolValue] == self.expectedValue;$/;"	p	interface:KWBeTrueMatcher
expectedValue	Example/Pods/Kiwi/Classes/Matchers/KWBeTrueMatcher.m	/^@property (nonatomic, readwrite) BOOL expectedValue;$/;"	p	interface:KWBeTrueMatcher
expectedValue	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^        valueDescription = [NSString stringWithFormat:@"value %@", [KWFormatter formatObject:self.expectedValue]];$/;"	p	interface:KWHaveValueMatcher
expectedValue	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^@property (nonatomic, strong) id expectedValue;$/;"	p	interface:KWHaveValueMatcher
expectsNil	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^    return [NSString stringWithFormat:@"be %@nil", self.expectsNil ? @"" : @"non "];$/;"	p	interface:KWNilMatcher
expectsNil	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^@property (nonatomic, assign) BOOL expectsNil;$/;"	p	interface:KWNilMatcher
fail	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define fail(message, ...) [[[KWExampleSuiteBuilder sharedExampleSuiteBuilder] currentExample] reportFailure:[KWFailure failureWithCallSite:KW_THIS_CALLSITE format:message, ##__VA_ARGS__]]$/;"	M	interface:
fail	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define fail(message, ...) [[[KWExampleSuiteBuilder sharedExampleSuiteBuilder] currentExample] reportFailure:[KWFailure failureWithCallSite:KW_THIS_CALLSITE format:message, ##__VA_ARGS__]]$/;"	M	interface:
fail	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define fail(message, ...) [[[KWExampleSuiteBuilder sharedExampleSuiteBuilder] currentExample] reportFailure:[KWFailure failureWithCallSite:KW_THIS_CALLSITE format:message, ##__VA_ARGS__]]$/;"	M	interface:
failure	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^- (void)reportFailure:(KWFailure *)failure;$/;"	p	interface:KWExample
failure	Example/Pods/Headers/Kiwi/KWExample.h	/^- (void)reportFailure:(KWFailure *)failure;$/;"	p	interface:KWExample
failure	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^- (void)reportFailure:(KWFailure *)failure;$/;"	p	interface:KWExample
failure	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^                [self reportFailure:failure];$/;"	p	interface:KWExample
failure	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^            [self reportFailure:failure];$/;"	p	interface:KWExample
failure	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^        [self reportFailure:failure];$/;"	p	interface:KWExample
failure	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    [self.delegate example:self didFailWithFailure:[self outputReadyFailureWithFailure:failure]];$/;"	p	interface:KWExample
failure	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^            [example reportFailure:failure];$/;"	p	interface:KWContextNode
failure	Example/Pods/Kiwi/Classes/Verifiers/KWExistVerifier.m	/^        [self.reporter reportFailure:failure];$/;"	p	interface:KWExistVerifier
failure	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^            [self.reporter reportFailure:failure];$/;"	p	interface:KWMatchVerifier
failure	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^        [self.reporter reportFailure:failure];$/;"	p	interface:KWMatchVerifier
failure	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^      [self.reporter reportFailure:failure];$/;"	p	interface:KWMatchVerifier
failureMessage	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^            KWFailure *failure = [KWFailure failureWithCallSite:self.callSite message:failureMessage];$/;"	p	interface:KWMatchVerifier
failureMessageForShould	Example/Pods/BuildHeaders/Kiwi/KWMatcher.h	/^- (NSString *)failureMessageForShould;$/;"	m	interface:KWMatcher
failureMessageForShould	Example/Pods/BuildHeaders/Kiwi/KWMatching.h	/^- (NSString *)failureMessageForShould;$/;"	m	protocol:KWMatching
failureMessageForShould	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^@property (nonatomic, copy) NSString *failureMessageForShould;$/;"	p	interface:KWUserDefinedMatcher
failureMessageForShould	Example/Pods/Headers/Kiwi/KWMatcher.h	/^- (NSString *)failureMessageForShould;$/;"	m	interface:KWMatcher
failureMessageForShould	Example/Pods/Headers/Kiwi/KWMatching.h	/^- (NSString *)failureMessageForShould;$/;"	m	protocol:KWMatching
failureMessageForShould	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^@property (nonatomic, copy) NSString *failureMessageForShould;$/;"	p	interface:KWUserDefinedMatcher
failureMessageForShould	Example/Pods/Kiwi/Classes/Core/KWMatcher.h	/^- (NSString *)failureMessageForShould;$/;"	m	interface:KWMatcher
failureMessageForShould	Example/Pods/Kiwi/Classes/Core/KWMatcher.m	/^- (NSString *)failureMessageForShould {$/;"	m	implementation:KWMatcher
failureMessageForShould	Example/Pods/Kiwi/Classes/Core/KWMatching.h	/^- (NSString *)failureMessageForShould;$/;"	m	protocol:KWMatching
failureMessageForShould	Example/Pods/Kiwi/Classes/Matchers/KWBeEmptyMatcher.m	/^- (NSString *)failureMessageForShould {$/;"	m	implementation:KWBeEmptyMatcher
failureMessageForShould	Example/Pods/Kiwi/Classes/Matchers/KWBeIdenticalToMatcher.m	/^- (NSString *)failureMessageForShould {$/;"	m	implementation:KWBeIdenticalToMatcher
failureMessageForShould	Example/Pods/Kiwi/Classes/Matchers/KWBeSubclassOfClassMatcher.m	/^- (NSString *)failureMessageForShould {$/;"	m	implementation:KWBeSubclassOfClassMatcher
failureMessageForShould	Example/Pods/Kiwi/Classes/Matchers/KWBeZeroMatcher.m	/^- (NSString *)failureMessageForShould {$/;"	m	implementation:KWBeZeroMatcher
failureMessageForShould	Example/Pods/Kiwi/Classes/Matchers/KWEqualMatcher.m	/^- (NSString *)failureMessageForShould {$/;"	m	implementation:KWEqualMatcher
failureMessageForShould	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (NSString *)failureMessageForShould {$/;"	m	implementation:KWReceiveMatcher
failureMessageForShould	Example/Pods/Kiwi/Classes/Matchers/KWRespondToSelectorMatcher.m	/^- (NSString *)failureMessageForShould {$/;"	m	implementation:KWRespondToSelectorMatcher
failureMessageForShould	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^@property (nonatomic, copy) NSString *failureMessageForShould;$/;"	p	interface:KWUserDefinedMatcher
failureMessageForShould	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^@synthesize failureMessageForShould;$/;"	p	interface:KWUserDefinedMatcher
failureMessageForShould	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^            failureMessage = [aMatcher failureMessageForShould];$/;"	p	interface:KWMatchVerifier
failureMessageForShouldBlock	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^    KWUserDefinedMatcherMessageBlock failureMessageForShouldBlock;$/;"	p	interface:KWUserDefinedMatcher
failureMessageForShouldBlock	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^    KWUserDefinedMatcherMessageBlock failureMessageForShouldBlock;$/;"	p	interface:KWUserDefinedMatcher
failureMessageForShouldBlock	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^    KWUserDefinedMatcherMessageBlock failureMessageForShouldBlock;$/;"	p	interface:KWUserDefinedMatcher
failureMessageForShouldBlock	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^        [matcher setFailureMessageForShould:failureMessageForShouldBlock(subject)];$/;"	p	interface:KWUserDefinedMatcher
failureMessageForShouldNot	Example/Pods/BuildHeaders/Kiwi/KWMatcher.h	/^- (NSString *)failureMessageForShouldNot;$/;"	m	interface:KWMatcher
failureMessageForShouldNot	Example/Pods/BuildHeaders/Kiwi/KWMatching.h	/^- (NSString *)failureMessageForShouldNot;$/;"	m	protocol:KWMatching
failureMessageForShouldNot	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^@property (nonatomic, copy) NSString *failureMessageForShouldNot;$/;"	p	interface:KWUserDefinedMatcher
failureMessageForShouldNot	Example/Pods/Headers/Kiwi/KWMatcher.h	/^- (NSString *)failureMessageForShouldNot;$/;"	m	interface:KWMatcher
failureMessageForShouldNot	Example/Pods/Headers/Kiwi/KWMatching.h	/^- (NSString *)failureMessageForShouldNot;$/;"	m	protocol:KWMatching
failureMessageForShouldNot	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^@property (nonatomic, copy) NSString *failureMessageForShouldNot;$/;"	p	interface:KWUserDefinedMatcher
failureMessageForShouldNot	Example/Pods/Kiwi/Classes/Core/KWMatcher.h	/^- (NSString *)failureMessageForShouldNot;$/;"	m	interface:KWMatcher
failureMessageForShouldNot	Example/Pods/Kiwi/Classes/Core/KWMatcher.m	/^- (NSString *)failureMessageForShouldNot {$/;"	m	implementation:KWMatcher
failureMessageForShouldNot	Example/Pods/Kiwi/Classes/Core/KWMatching.h	/^- (NSString *)failureMessageForShouldNot;$/;"	m	protocol:KWMatching
failureMessageForShouldNot	Example/Pods/Kiwi/Classes/Matchers/KWBeEmptyMatcher.m	/^- (NSString *)failureMessageForShouldNot {$/;"	m	implementation:KWBeEmptyMatcher
failureMessageForShouldNot	Example/Pods/Kiwi/Classes/Matchers/KWBeIdenticalToMatcher.m	/^- (NSString *)failureMessageForShouldNot {$/;"	m	implementation:KWBeIdenticalToMatcher
failureMessageForShouldNot	Example/Pods/Kiwi/Classes/Matchers/KWBeZeroMatcher.m	/^- (NSString *)failureMessageForShouldNot {$/;"	m	implementation:KWBeZeroMatcher
failureMessageForShouldNot	Example/Pods/Kiwi/Classes/Matchers/KWEqualMatcher.m	/^- (NSString *)failureMessageForShouldNot {$/;"	m	implementation:KWEqualMatcher
failureMessageForShouldNot	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (NSString *)failureMessageForShouldNot {$/;"	m	implementation:KWReceiveMatcher
failureMessageForShouldNot	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^@property (nonatomic, copy) NSString *failureMessageForShouldNot;$/;"	p	interface:KWUserDefinedMatcher
failureMessageForShouldNot	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^@synthesize failureMessageForShouldNot;$/;"	p	interface:KWUserDefinedMatcher
failureMessageForShouldNot	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^            failureMessage = [aMatcher failureMessageForShouldNot];$/;"	p	interface:KWMatchVerifier
failureMessageForShouldNotBlock	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^    KWUserDefinedMatcherMessageBlock failureMessageForShouldNotBlock;$/;"	p	interface:KWUserDefinedMatcher
failureMessageForShouldNotBlock	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^    KWUserDefinedMatcherMessageBlock failureMessageForShouldNotBlock;$/;"	p	interface:KWUserDefinedMatcher
failureMessageForShouldNotBlock	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^    KWUserDefinedMatcherMessageBlock failureMessageForShouldNotBlock;$/;"	p	interface:KWUserDefinedMatcher
failureMessageForShouldNotBlock	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^        [matcher setFailureMessageForShouldNot:failureMessageForShouldNotBlock(subject)];$/;"	p	interface:KWUserDefinedMatcher
failureWithCallSite:format:	Example/Pods/BuildHeaders/Kiwi/KWFailure.h	/^+ (id)failureWithCallSite:(KWCallSite *)aCallSite format:(NSString *)format, ...;$/;"	c	interface:KWFailure
failureWithCallSite:format:	Example/Pods/Headers/Kiwi/KWFailure.h	/^+ (id)failureWithCallSite:(KWCallSite *)aCallSite format:(NSString *)format, ...;$/;"	c	interface:KWFailure
failureWithCallSite:format:	Example/Pods/Kiwi/Classes/Core/KWFailure.h	/^+ (id)failureWithCallSite:(KWCallSite *)aCallSite format:(NSString *)format, ...;$/;"	c	interface:KWFailure
failureWithCallSite:format:	Example/Pods/Kiwi/Classes/Core/KWFailure.m	/^+ (id)failureWithCallSite:(KWCallSite *)aCallSite format:(NSString *)format, ... {$/;"	c	implementation:KWFailure
failureWithCallSite:message:	Example/Pods/BuildHeaders/Kiwi/KWFailure.h	/^+ (id)failureWithCallSite:(KWCallSite *)aCallSite message:(NSString *)aMessage;$/;"	c	interface:KWFailure
failureWithCallSite:message:	Example/Pods/Headers/Kiwi/KWFailure.h	/^+ (id)failureWithCallSite:(KWCallSite *)aCallSite message:(NSString *)aMessage;$/;"	c	interface:KWFailure
failureWithCallSite:message:	Example/Pods/Kiwi/Classes/Core/KWFailure.h	/^+ (id)failureWithCallSite:(KWCallSite *)aCallSite message:(NSString *)aMessage;$/;"	c	interface:KWFailure
failureWithCallSite:message:	Example/Pods/Kiwi/Classes/Core/KWFailure.m	/^+ (id)failureWithCallSite:(KWCallSite *)aCallSite message:(NSString *)aMessage {$/;"	c	implementation:KWFailure
file	Example/Pods/BuildHeaders/Kiwi/KWSpec.h	/^+ (NSString *)file;$/;"	m	interface:KWSpec
file	Example/Pods/Headers/Kiwi/KWSpec.h	/^+ (NSString *)file;$/;"	m	interface:KWSpec
file	Example/Pods/Kiwi/Classes/Core/KWSpec.h	/^+ (NSString *)file;$/;"	m	interface:KWSpec
filename	Example/Pods/BuildHeaders/Kiwi/KWCallSite.h	/^@property (nonatomic, readonly, copy) NSString *filename;$/;"	m	interface:KWCallSite
filename	Example/Pods/Headers/Kiwi/KWCallSite.h	/^@property (nonatomic, readonly, copy) NSString *filename;$/;"	m	interface:KWCallSite
filename	Example/Pods/Kiwi/Classes/Core/KWCallSite.h	/^@property (nonatomic, readonly, copy) NSString *filename;$/;"	m	interface:KWCallSite
firstArgument	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (void)expect:(SEL)aSelector withArguments:(id)firstArgument, ...;$/;"	p	protocol:KWMessageSpying
firstArgument	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (void)stub:(SEL)aSelector andReturn:(id)aValue withArguments:(id)firstArgument, ...;$/;"	p	protocol:KWMessageSpying
firstArgument	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (void)stub:(SEL)aSelector withArguments:(id)firstArgument, ...;$/;"	p	protocol:KWMessageSpying
firstArgument	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withArguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCount:(NSUInteger)aCount arguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCountAtLeast:(NSUInteger)aCount arguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCountAtMost:(NSUInteger)aCount arguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withArguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withCount:(NSUInteger)aCount arguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withCountAtLeast:(NSUInteger)aCount arguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withCountAtMost:(NSUInteger)aCount arguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/Headers/Kiwi/KWMock.h	/^- (void)expect:(SEL)aSelector withArguments:(id)firstArgument, ...;$/;"	p	protocol:KWMessageSpying
firstArgument	Example/Pods/Headers/Kiwi/KWMock.h	/^- (void)stub:(SEL)aSelector andReturn:(id)aValue withArguments:(id)firstArgument, ...;$/;"	p	protocol:KWMessageSpying
firstArgument	Example/Pods/Headers/Kiwi/KWMock.h	/^- (void)stub:(SEL)aSelector withArguments:(id)firstArgument, ...;$/;"	p	protocol:KWMessageSpying
firstArgument	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withArguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCount:(NSUInteger)aCount arguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCountAtLeast:(NSUInteger)aCount arguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCountAtMost:(NSUInteger)aCount arguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withArguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withCount:(NSUInteger)aCount arguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withCountAtLeast:(NSUInteger)aCount arguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withCountAtMost:(NSUInteger)aCount arguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withArguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCount:(NSUInteger)aCount arguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCountAtLeast:(NSUInteger)aCount arguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCountAtMost:(NSUInteger)aCount arguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withArguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withCount:(NSUInteger)aCount arguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withCountAtLeast:(NSUInteger)aCount arguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^- (void)receive:(SEL)aSelector withCountAtMost:(NSUInteger)aCount arguments:(id)firstArgument, ...;$/;"	p	interface:KWReceiveMatcher
firstArgument	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (void)expect:(SEL)aSelector withArguments:(id)firstArgument, ...;$/;"	p	protocol:KWMessageSpying
firstArgument	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (void)stub:(SEL)aSelector andReturn:(id)aValue withArguments:(id)firstArgument, ...;$/;"	p	protocol:KWMessageSpying
firstArgument	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (void)stub:(SEL)aSelector withArguments:(id)firstArgument, ...;$/;"	p	protocol:KWMessageSpying
firstObject	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^    id object = firstObject;$/;"	p	interface:KWContainMatcher
firstValue	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^    double absoluteDifference = firstValue > secondValue ? firstValue - secondValue : secondValue - firstValue;$/;"	p	interface:KWBeWithinMatcher
firstValue	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^    long long absoluteDifference = firstValue > secondValue ? firstValue - secondValue : secondValue - firstValue;$/;"	p	interface:KWBeWithinMatcher
firstValue	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^    unsigned long long absoluteDifference = firstValue > secondValue ? firstValue - secondValue : secondValue - firstValue;$/;"	p	interface:KWBeWithinMatcher
floatData	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSData *)floatData;$/;"	p	interface:KWValue
floatData	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSData *)floatData;$/;"	p	interface:KWValue
floatData	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSData *)floatData;$/;"	p	interface:KWValue
floatData	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSData *)floatData {$/;"	m	implementation:KWValue
floatDescriptionAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)floatDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
floatDescriptionAtIndex:	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)floatDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
floatDescriptionAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (NSString *)floatDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
floatValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (float)floatValue;$/;"	p	interface:KWValue
floatValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (float)floatValue;$/;"	p	interface:KWValue
floatValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (float)floatValue;$/;"	p	interface:KWValue
floatValue	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (float)floatValue {$/;"	m	implementation:KWValue
focusedCallSite	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^@property (nonatomic, strong) KWCallSite *focusedCallSite;$/;"	p	interface:KWExampleSuiteBuilder
focusedCallSite	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^@property (nonatomic, strong) KWCallSite *focusedCallSite;$/;"	p	interface:KWExampleSuiteBuilder
focusedCallSite	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^@property (nonatomic, strong) KWCallSite *focusedCallSite;$/;"	p	interface:KWExampleSuiteBuilder
focusedContextNode	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^@property (nonatomic, assign) BOOL focusedContextNode;$/;"	p	interface:KWExampleSuiteBuilder
focusedItNode	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    return self.focusedContextNode || self.focusedItNode;$/;"	p	interface:KWExampleSuiteBuilder
focusedItNode	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^@property (nonatomic, assign) BOOL focusedItNode;$/;"	p	interface:KWExampleSuiteBuilder
format	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^                KWFailure *failure = [KWFailure failureWithCallSite:self.unresolvedVerifier.callSite format:@"expected subject not to be nil"];$/;"	p	interface:KWExample
format	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^        KWFailure *failure = [KWFailure failureWithCallSite:self.unresolvedVerifier.callSite format:@"expected subject not to be nil"];$/;"	p	interface:KWExample
format	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^                    format:@"an example group has not been started"];$/;"	p	interface:KWExampleSuiteBuilder
format	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^                    format:@"there is no open context to pop"];$/;"	p	interface:KWExampleSuiteBuilder
format	Example/Pods/Kiwi/Classes/Matchers/KWBeBetweenMatcher.m	/^        [NSException raise:@"KWMatcherException" format:@"subject does not respond to -compare:"];$/;"	p	interface:KWBeBetweenMatcher
format	Example/Pods/Kiwi/Classes/Matchers/KWBeTrueMatcher.m	/^        [NSException raise:@"KWMatcherException" format:@"subject does not respond to -boolValue"];$/;"	p	interface:KWBeTrueMatcher
format	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^        [NSException raise:@"KWMatcherException" format:@"subject must be a KWBlock"];$/;"	p	interface:KWBlockRaiseMatcher
format	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^        [NSException raise:@"KWMatcherException" format:@"subject does not respond to -containsObjectEqualToOrMatching:"];$/;"	p	interface:KWContainMatcher
format	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.m	/^        [NSException raise:@"KWMatcherException" format:@"subject is not a string"];$/;"	p	interface:KWContainStringMatcher
format	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^            [NSException raise:@"KWMatcherEception" format:@"a valid collection was not specified"];$/;"	p	interface:KWHaveMatcher
format	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^        [NSException raise:@"KWMatcherException" format:@"subject does not respond to -compare:"];$/;"	p	interface:KWInequalityMatcher
formatObject	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^        return [KWFormatter formatObject:(self.objects)[0]];$/;"	p	interface:KWContainMatcher
formatObject:	Example/Pods/BuildHeaders/Kiwi/KWFormatter.h	/^+ (NSString *)formatObject:(id)anObject;$/;"	m	interface:KWFormatter
formatObject:	Example/Pods/Headers/Kiwi/KWFormatter.h	/^+ (NSString *)formatObject:(id)anObject;$/;"	m	interface:KWFormatter
formatObject:	Example/Pods/Kiwi/Classes/Core/KWFormatter.h	/^+ (NSString *)formatObject:(id)anObject;$/;"	m	interface:KWFormatter
formatObject:	Example/Pods/Kiwi/Classes/Core/KWFormatter.m	/^+ (NSString *)formatObject:(id)anObject {$/;"	m	implementation:KWFormatter
formatObjectIncludingClass:	Example/Pods/BuildHeaders/Kiwi/KWFormatter.h	/^+ (NSString *)formatObjectIncludingClass:(id)anObject;$/;"	c	interface:KWFormatter
formatObjectIncludingClass:	Example/Pods/Headers/Kiwi/KWFormatter.h	/^+ (NSString *)formatObjectIncludingClass:(id)anObject;$/;"	c	interface:KWFormatter
formatObjectIncludingClass:	Example/Pods/Kiwi/Classes/Core/KWFormatter.h	/^+ (NSString *)formatObjectIncludingClass:(id)anObject;$/;"	c	interface:KWFormatter
formatObjectIncludingClass:	Example/Pods/Kiwi/Classes/Core/KWFormatter.m	/^+ (NSString *)formatObjectIncludingClass:(id)anObject {$/;"	c	implementation:KWFormatter
formattedCollection:	Example/Pods/Kiwi/Classes/Core/KWFormatter.m	/^+ (NSString *)formattedCollection:(id<NSFastEnumeration>)collection {$/;"	m	implementation:KWFormatter
forwardInvocation:	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.m	/^- (void)forwardInvocation:(NSInvocation *)anInvocation {$/;"	m	implementation:KWInvocationCapturer
foundFocus	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^- (BOOL)foundFocus;$/;"	p	interface:KWExampleSuiteBuilder
foundFocus	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^- (BOOL)foundFocus;$/;"	p	interface:KWExampleSuiteBuilder
foundFocus	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    BOOL shouldLookup = [[KWExampleSuiteBuilder sharedExampleSuiteBuilder] isFocused] && ![[KWExampleSuiteBuilder sharedExampleSuiteBuilder] foundFocus];$/;"	p	interface:KWExample
foundFocus	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^- (BOOL)foundFocus;$/;"	p	interface:KWExampleSuiteBuilder
free	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^            free(classes);$/;"	p	interface:KWMatcherFactory
free	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^        free(classes);$/;"	p	interface:KWMatcherFactory
free	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        free(protocols);$/;"	p	interface:KWMock
free	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    free(bytes);$/;"	p	interface:KWStub
futureObjectWithBlock:	Example/Pods/BuildHeaders/Kiwi/KWFutureObject.h	/^+ (id)futureObjectWithBlock:(KWFutureObjectBlock)block;$/;"	c	interface:KWFutureObject
futureObjectWithBlock:	Example/Pods/Headers/Kiwi/KWFutureObject.h	/^+ (id)futureObjectWithBlock:(KWFutureObjectBlock)block;$/;"	c	interface:KWFutureObject
futureObjectWithBlock:	Example/Pods/Kiwi/Classes/Core/KWFutureObject.h	/^+ (id)futureObjectWithBlock:(KWFutureObjectBlock)block;$/;"	c	interface:KWFutureObject
generateDescriptionForAnonymousItNode	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^- (NSString *)generateDescriptionForAnonymousItNode;$/;"	p	interface:KWExample
generateDescriptionForAnonymousItNode	Example/Pods/Headers/Kiwi/KWExample.h	/^- (NSString *)generateDescriptionForAnonymousItNode;$/;"	p	interface:KWExample
generateDescriptionForAnonymousItNode	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^- (NSString *)generateDescriptionForAnonymousItNode;$/;"	p	interface:KWExample
generateDescriptionForAnonymousItNode	Example/Pods/Kiwi/Classes/Nodes/KWItNode.m	/^        description = [self.example generateDescriptionForAnonymousItNode];$/;"	p	interface:KWItNode
genericMatcher:matches:	Example/Pods/BuildHeaders/Kiwi/KWGenericMatchEvaluator.h	/^+ (BOOL)genericMatcher:(id)matcher matches:(id)object;$/;"	c	interface:KWGenericMatchEvaluator
genericMatcher:matches:	Example/Pods/Headers/Kiwi/KWGenericMatchEvaluator.h	/^+ (BOOL)genericMatcher:(id)matcher matches:(id)object;$/;"	c	interface:KWGenericMatchEvaluator
genericMatcher:matches:	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchEvaluator.h	/^+ (BOOL)genericMatcher:(id)matcher matches:(id)object;$/;"	c	interface:KWGenericMatchEvaluator
genericMatcher:matches:	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchEvaluator.m	/^+ (BOOL)genericMatcher:(id)matcher matches:(id)object {$/;"	c	implementation:KWGenericMatchEvaluator
getArgumentAtIndexAsObject:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (id)getArgumentAtIndexAsObject:(int)argIndex;$/;"	m	interface:NSInvocation
getArgumentAtIndexAsObject:	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (id)getArgumentAtIndexAsObject:(int)argIndex;$/;"	m	interface:NSInvocation
getArgumentAtIndexAsObject:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (id)getArgumentAtIndexAsObject:(int)argIndex;$/;"	m	interface:NSInvocation
getArgumentAtIndexAsObject:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.m	/^{$/;"	m	implementation:NSInvocation
getMessageArgument:atIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+KiwiAdditions.h	/^- (void)getMessageArgument:(void *)buffer atIndex:(NSUInteger)anIndex;$/;"	m	interface:NSInvocation
getMessageArgument:atIndex:	Example/Pods/Headers/Kiwi/NSInvocation+KiwiAdditions.h	/^- (void)getMessageArgument:(void *)buffer atIndex:(NSUInteger)anIndex;$/;"	m	interface:NSInvocation
getMessageArgument:atIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+KiwiAdditions.h	/^- (void)getMessageArgument:(void *)buffer atIndex:(NSUInteger)anIndex;$/;"	m	interface:NSInvocation
getMessageArgument:atIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+KiwiAdditions.m	/^- (void)getMessageArgument:(void *)buffer atIndex:(NSUInteger)anIndex {$/;"	m	implementation:NSInvocation
getValue:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (void)getValue:(void *)buffer {$/;"	m	implementation:KWValue
hasPrefix	Example/Pods/BuildHeaders/Kiwi/KWStringPrefixMatcher.h	/^#define hasPrefix(prefix) [KWStringPrefixMatcher matcherWithPrefix:prefix]$/;"	M	interface:
hasPrefix	Example/Pods/Headers/Kiwi/KWStringPrefixMatcher.h	/^#define hasPrefix(prefix) [KWStringPrefixMatcher matcherWithPrefix:prefix]$/;"	M	interface:
hasPrefix	Example/Pods/Kiwi/Classes/Matchers/KWStringPrefixMatcher.h	/^#define hasPrefix(prefix) [KWStringPrefixMatcher matcherWithPrefix:prefix]$/;"	M	interface:
hasSubstring	Example/Pods/BuildHeaders/Kiwi/KWStringContainsMatcher.h	/^#define hasSubstring(substring) [KWStringContainsMatcher matcherWithSubstring:substring]$/;"	M	interface:
hasSubstring	Example/Pods/Headers/Kiwi/KWStringContainsMatcher.h	/^#define hasSubstring(substring) [KWStringContainsMatcher matcherWithSubstring:substring]$/;"	M	interface:
hasSubstring	Example/Pods/Kiwi/Classes/Matchers/KWStringContainsMatcher.h	/^#define hasSubstring(substring) [KWStringContainsMatcher matcherWithSubstring:substring]$/;"	M	interface:
hash	Example/Pods/Kiwi/Classes/Core/KWCallSite.m	/^- (NSUInteger)hash {$/;"	m	implementation:KWCallSite
hash	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.m	/^- (NSUInteger)hash {$/;"	m	implementation:KWInvocationCapturer
hash	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.m	/^- (NSUInteger)hash {$/;"	m	implementation:KWMessagePattern
hash	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSUInteger)hash {$/;"	m	implementation:KWValue
hash	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        return [super hash];$/;"	p	interface:KWMock
have:	Example/Pods/BuildHeaders/Kiwi/KWHaveMatcher.h	/^- (id)have:(NSUInteger)aCount;$/;"	m	interface:KWMatchVerifier
have:	Example/Pods/Headers/Kiwi/KWHaveMatcher.h	/^- (id)have:(NSUInteger)aCount;$/;"	m	interface:KWMatchVerifier
have:	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.h	/^- (id)have:(NSUInteger)aCount;$/;"	m	interface:KWMatchVerifier
have:itemsForInvocation:	Example/Pods/BuildHeaders/Kiwi/KWHaveMatcher.h	/^- (void)have:(NSUInteger)aCount itemsForInvocation:(NSInvocation *)anInvocation;$/;"	m	interface:KWHaveMatcher
have:itemsForInvocation:	Example/Pods/Headers/Kiwi/KWHaveMatcher.h	/^- (void)have:(NSUInteger)aCount itemsForInvocation:(NSInvocation *)anInvocation;$/;"	m	interface:KWHaveMatcher
have:itemsForInvocation:	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.h	/^- (void)have:(NSUInteger)aCount itemsForInvocation:(NSInvocation *)anInvocation;$/;"	m	interface:KWHaveMatcher
haveAtLeast:	Example/Pods/BuildHeaders/Kiwi/KWHaveMatcher.h	/^- (id)haveAtLeast:(NSUInteger)aCount;$/;"	m	interface:KWMatchVerifier
haveAtLeast:	Example/Pods/Headers/Kiwi/KWHaveMatcher.h	/^- (id)haveAtLeast:(NSUInteger)aCount;$/;"	m	interface:KWMatchVerifier
haveAtLeast:	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.h	/^- (id)haveAtLeast:(NSUInteger)aCount;$/;"	m	interface:KWMatchVerifier
haveAtLeast:itemsForInvocation:	Example/Pods/BuildHeaders/Kiwi/KWHaveMatcher.h	/^- (void)haveAtLeast:(NSUInteger)aCount itemsForInvocation:(NSInvocation *)anInvocation;$/;"	m	interface:KWHaveMatcher
haveAtLeast:itemsForInvocation:	Example/Pods/Headers/Kiwi/KWHaveMatcher.h	/^- (void)haveAtLeast:(NSUInteger)aCount itemsForInvocation:(NSInvocation *)anInvocation;$/;"	m	interface:KWHaveMatcher
haveAtLeast:itemsForInvocation:	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.h	/^- (void)haveAtLeast:(NSUInteger)aCount itemsForInvocation:(NSInvocation *)anInvocation;$/;"	m	interface:KWHaveMatcher
haveAtMost:	Example/Pods/BuildHeaders/Kiwi/KWHaveMatcher.h	/^- (id)haveAtMost:(NSUInteger)aCount;$/;"	m	interface:KWMatchVerifier
haveAtMost:	Example/Pods/Headers/Kiwi/KWHaveMatcher.h	/^- (id)haveAtMost:(NSUInteger)aCount;$/;"	m	interface:KWMatchVerifier
haveAtMost:	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.h	/^- (id)haveAtMost:(NSUInteger)aCount;$/;"	m	interface:KWMatchVerifier
haveAtMost:itemsForInvocation:	Example/Pods/BuildHeaders/Kiwi/KWHaveMatcher.h	/^- (void)haveAtMost:(NSUInteger)aCount itemsForInvocation:(NSInvocation *)anInvocation;$/;"	m	interface:KWHaveMatcher
haveAtMost:itemsForInvocation:	Example/Pods/Headers/Kiwi/KWHaveMatcher.h	/^- (void)haveAtMost:(NSUInteger)aCount itemsForInvocation:(NSInvocation *)anInvocation;$/;"	m	interface:KWHaveMatcher
haveAtMost:itemsForInvocation:	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.h	/^- (void)haveAtMost:(NSUInteger)aCount itemsForInvocation:(NSInvocation *)anInvocation;$/;"	m	interface:KWHaveMatcher
haveCountOf:	Example/Pods/BuildHeaders/Kiwi/KWHaveMatcher.h	/^- (void)haveCountOf:(NSUInteger)aCount;$/;"	m	interface:KWHaveMatcher
haveCountOf:	Example/Pods/Headers/Kiwi/KWHaveMatcher.h	/^- (void)haveCountOf:(NSUInteger)aCount;$/;"	m	interface:KWHaveMatcher
haveCountOf:	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.h	/^- (void)haveCountOf:(NSUInteger)aCount;$/;"	m	interface:KWHaveMatcher
haveCountOfAtLeast:	Example/Pods/BuildHeaders/Kiwi/KWHaveMatcher.h	/^- (void)haveCountOfAtLeast:(NSUInteger)aCount;$/;"	m	interface:KWHaveMatcher
haveCountOfAtLeast:	Example/Pods/Headers/Kiwi/KWHaveMatcher.h	/^- (void)haveCountOfAtLeast:(NSUInteger)aCount;$/;"	m	interface:KWHaveMatcher
haveCountOfAtLeast:	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.h	/^- (void)haveCountOfAtLeast:(NSUInteger)aCount;$/;"	m	interface:KWHaveMatcher
haveCountOfAtMost:	Example/Pods/BuildHeaders/Kiwi/KWHaveMatcher.h	/^- (void)haveCountOfAtMost:(NSUInteger)aCount;$/;"	m	interface:KWHaveMatcher
haveCountOfAtMost:	Example/Pods/Headers/Kiwi/KWHaveMatcher.h	/^- (void)haveCountOfAtMost:(NSUInteger)aCount;$/;"	m	interface:KWHaveMatcher
haveCountOfAtMost:	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.h	/^- (void)haveCountOfAtMost:(NSUInteger)aCount;$/;"	m	interface:KWHaveMatcher
haveLengthOf:	Example/Pods/BuildHeaders/Kiwi/KWHaveMatcher.h	/^- (void)haveLengthOf:(NSUInteger)aCount;$/;"	m	interface:KWHaveMatcher
haveLengthOf:	Example/Pods/Headers/Kiwi/KWHaveMatcher.h	/^- (void)haveLengthOf:(NSUInteger)aCount;$/;"	m	interface:KWHaveMatcher
haveLengthOf:	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.h	/^- (void)haveLengthOf:(NSUInteger)aCount;$/;"	m	interface:KWHaveMatcher
haveLengthOfAtLeast:	Example/Pods/BuildHeaders/Kiwi/KWHaveMatcher.h	/^- (void)haveLengthOfAtLeast:(NSUInteger)aCount;$/;"	m	interface:KWHaveMatcher
haveLengthOfAtLeast:	Example/Pods/Headers/Kiwi/KWHaveMatcher.h	/^- (void)haveLengthOfAtLeast:(NSUInteger)aCount;$/;"	m	interface:KWHaveMatcher
haveLengthOfAtLeast:	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.h	/^- (void)haveLengthOfAtLeast:(NSUInteger)aCount;$/;"	m	interface:KWHaveMatcher
haveLengthOfAtMost:	Example/Pods/BuildHeaders/Kiwi/KWHaveMatcher.h	/^- (void)haveLengthOfAtMost:(NSUInteger)aCount;$/;"	m	interface:KWHaveMatcher
haveLengthOfAtMost:	Example/Pods/Headers/Kiwi/KWHaveMatcher.h	/^- (void)haveLengthOfAtMost:(NSUInteger)aCount;$/;"	m	interface:KWHaveMatcher
haveLengthOfAtMost:	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.h	/^- (void)haveLengthOfAtMost:(NSUInteger)aCount;$/;"	m	interface:KWHaveMatcher
haveValue:forKey:	Example/Pods/BuildHeaders/Kiwi/KWHaveValueMatcher.h	/^- (void)haveValue:(id)value forKey:(NSString *)key;$/;"	m	interface:KWHaveValueMatcher
haveValue:forKey:	Example/Pods/Headers/Kiwi/KWHaveValueMatcher.h	/^- (void)haveValue:(id)value forKey:(NSString *)key;$/;"	m	interface:KWHaveValueMatcher
haveValue:forKey:	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.h	/^- (void)haveValue:(id)value forKey:(NSString *)key;$/;"	m	interface:KWHaveValueMatcher
haveValue:forKeyPath:	Example/Pods/BuildHeaders/Kiwi/KWHaveValueMatcher.h	/^- (void)haveValue:(id)value forKeyPath:(NSString *)keyPath;$/;"	m	interface:KWHaveValueMatcher
haveValue:forKeyPath:	Example/Pods/Headers/Kiwi/KWHaveValueMatcher.h	/^- (void)haveValue:(id)value forKeyPath:(NSString *)keyPath;$/;"	m	interface:KWHaveValueMatcher
haveValue:forKeyPath:	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.h	/^- (void)haveValue:(id)value forKeyPath:(NSString *)keyPath;$/;"	m	interface:KWHaveValueMatcher
haveValueForKey:	Example/Pods/BuildHeaders/Kiwi/KWHaveValueMatcher.h	/^- (void)haveValueForKey:(NSString *)key;$/;"	m	interface:KWHaveValueMatcher
haveValueForKey:	Example/Pods/Headers/Kiwi/KWHaveValueMatcher.h	/^- (void)haveValueForKey:(NSString *)key;$/;"	m	interface:KWHaveValueMatcher
haveValueForKey:	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.h	/^- (void)haveValueForKey:(NSString *)key;$/;"	m	interface:KWHaveValueMatcher
haveValueForKeyPath:	Example/Pods/BuildHeaders/Kiwi/KWHaveValueMatcher.h	/^- (void)haveValueForKeyPath:(NSString *)keyPath;$/;"	m	interface:KWHaveValueMatcher
haveValueForKeyPath:	Example/Pods/Headers/Kiwi/KWHaveValueMatcher.h	/^- (void)haveValueForKeyPath:(NSString *)keyPath;$/;"	m	interface:KWHaveValueMatcher
haveValueForKeyPath:	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.h	/^- (void)haveValueForKeyPath:(NSString *)keyPath;$/;"	m	interface:KWHaveValueMatcher
i	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^            Class candidateClass = classes[i];$/;"	p	interface:KWMatcherFactory
i	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^            [protocolQueue addObject:protocols[i]];$/;"	p	interface:KWMock
i	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        KWStub *stub = (self.stubs)[i];$/;"	p	interface:KWMock
i	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^			const char *argType = [[anInvocation methodSignature] getArgumentTypeAtIndex:i];$/;"	p	interface:KWStub
i	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^			id arg = [anInvocation getArgumentAtIndexAsObject:(int)i];$/;"	p	interface:KWStub
id	Example/Pods/BuildHeaders/Kiwi/KWLetNode.h	/^@property (nonatomic, copy) id (^block)(void);$/;"	p	interface:KWLetNode
id	Example/Pods/Headers/Kiwi/KWLetNode.h	/^@property (nonatomic, copy) id (^block)(void);$/;"	p	interface:KWLetNode
id	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.h	/^@property (nonatomic, copy) id (^block)(void);$/;"	p	interface:KWLetNode
id	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^@property (nonatomic, copy) id (^block)(NSArray *params);$/;"	p	interface:KWStub
index	Example/Pods/BuildHeaders/Kiwi/KWCaptureSpy.h	/^- (id)initWithArgumentIndex:(NSUInteger)index;$/;"	p	interface:KWCaptureSpy
index	Example/Pods/Headers/Kiwi/KWCaptureSpy.h	/^- (id)initWithArgumentIndex:(NSUInteger)index;$/;"	p	interface:KWCaptureSpy
index	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.h	/^- (id)initWithArgumentIndex:(NSUInteger)index;$/;"	p	interface:KWCaptureSpy
index	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.m	/^        _argumentIndex = index;$/;"	p	interface:KWCaptureSpy
inequalityType	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^@property (nonatomic, assign) KWInequalityType inequalityType;$/;"	m	interface:KWInequalityMatcher
init	Example/Pods/BuildHeaders/Kiwi/KWMatcherFactory.h	/^- (id)init;$/;"	m	interface:KWMatcherFactory
init	Example/Pods/Headers/Kiwi/KWMatcherFactory.h	/^- (id)init;$/;"	m	interface:KWMatcherFactory
init	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.m	/^    self = [super init];$/;"	p	interface:KWCaptureSpy
init	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^        _lastInContexts = [[NSMutableArray alloc] init];$/;"	p	interface:KWExample
init	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^        _matcherFactory = [[KWMatcherFactory alloc] init];$/;"	p	interface:KWExample
init	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^        _verifiers = [[NSMutableArray alloc] init];$/;"	p	interface:KWExample
init	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    self = [super init];$/;"	p	interface:KWExample
init	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^        _examples = [[NSMutableArray alloc] init];$/;"	p	interface:KWExampleSuite
init	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^    self = [super init];$/;"	p	interface:KWExampleSuite
init	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^        _contextNodeStack = [[NSMutableArray alloc] init];$/;"	p	interface:KWExampleSuiteBuilder
init	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^        _suites = [[NSMutableSet alloc] init];$/;"	p	interface:KWExampleSuiteBuilder
init	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    self = [super init];$/;"	p	interface:KWExampleSuiteBuilder
init	Example/Pods/Kiwi/Classes/Core/KWFutureObject.m	/^    self = [super init];$/;"	p	interface:KWFutureObject
init	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.h	/^- (id)init;$/;"	m	interface:KWMatcherFactory
init	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^            matcherClassChain = [[NSMutableArray alloc] init];$/;"	p	interface:KWMatcherFactory
init	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^        _matcherClassChains = [[NSMutableDictionary alloc] init];$/;"	p	interface:KWMatcherFactory
init	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^        _registeredMatcherClasses = [[NSMutableArray alloc] init];$/;"	p	interface:KWMatcherFactory
init	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^        matcherClasses = [[NSMutableArray alloc] init];$/;"	p	interface:KWMatcherFactory
init	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^    self = [super init];$/;"	p	interface:KWMatcherFactory
init	Example/Pods/Kiwi/Classes/Core/KWMatchers.m	/^- (id)init {$/;"	m	implementation:KWMatchers
init	Example/Pods/Kiwi/Classes/Core/KWProbePoller.m	/^    self = [super init];$/;"	p	interface:KWTimeout
init	Example/Pods/Kiwi/Classes/Matchers/KWStringContainsMatcher.m	/^    self = [super init];$/;"	p	interface:KWStringContainsMatcher
init	Example/Pods/Kiwi/Classes/Matchers/KWStringPrefixMatcher.m	/^    self = [super init];$/;"	p	interface:KWStringPrefixMatcher
init	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^        matcher = [[KWUserDefinedMatcher alloc] init];$/;"	p	interface:KWUserDefinedMatcher
init	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^    self = [super init];$/;"	p	interface:KWUserDefinedMatcher
init	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        _expectedMessagePatterns = [[NSMutableArray alloc] init];$/;"	p	interface:KWMock
init	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        _stubs = [[NSMutableArray alloc] init];$/;"	p	interface:KWMock
init	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        messagePatternSpies = [[NSMutableArray alloc] init];$/;"	p	interface:KWMock
init	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    self = [super init];$/;"	p	interface:KWMock
init	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^    self = [super init];$/;"	p	interface:KWContextNode
init	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    self = [super init];$/;"	p	interface:KWStub
init	Example/Pods/Kiwi/Classes/Verifiers/KWExistVerifier.m	/^    self = [super init];$/;"	p	interface:KWExistVerifier
init	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^    self = [super init];$/;"	p	interface:KWMatchVerifier
initAsNullMockForClass:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (id)initAsNullMockForClass:(Class)aClass;$/;"	m	protocol:KWMessageSpying
initAsNullMockForClass:	Example/Pods/Headers/Kiwi/KWMock.h	/^- (id)initAsNullMockForClass:(Class)aClass;$/;"	m	protocol:KWMessageSpying
initAsNullMockForClass:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (id)initAsNullMockForClass:(Class)aClass;$/;"	m	protocol:KWMessageSpying
initAsNullMockForProtocol:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (id)initAsNullMockForProtocol:(Protocol *)aProtocol;$/;"	m	protocol:KWMessageSpying
initAsNullMockForProtocol:	Example/Pods/Headers/Kiwi/KWMock.h	/^- (id)initAsNullMockForProtocol:(Protocol *)aProtocol;$/;"	m	protocol:KWMessageSpying
initAsNullMockForProtocol:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (id)initAsNullMockForProtocol:(Protocol *)aProtocol;$/;"	m	protocol:KWMessageSpying
initAsNullMockWithName:forClass:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (id)initAsNullMockWithName:(NSString *)aName forClass:(Class)aClass;$/;"	m	protocol:KWMessageSpying
initAsNullMockWithName:forClass:	Example/Pods/Headers/Kiwi/KWMock.h	/^- (id)initAsNullMockWithName:(NSString *)aName forClass:(Class)aClass;$/;"	m	protocol:KWMessageSpying
initAsNullMockWithName:forClass:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (id)initAsNullMockWithName:(NSString *)aName forClass:(Class)aClass;$/;"	m	protocol:KWMessageSpying
initAsNullMockWithName:forProtocol:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (id)initAsNullMockWithName:(NSString *)aName forProtocol:(Protocol *)aProtocol;$/;"	m	protocol:KWMessageSpying
initAsNullMockWithName:forProtocol:	Example/Pods/Headers/Kiwi/KWMock.h	/^- (id)initAsNullMockWithName:(NSString *)aName forProtocol:(Protocol *)aProtocol;$/;"	m	protocol:KWMessageSpying
initAsNullMockWithName:forProtocol:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (id)initAsNullMockWithName:(NSString *)aName forProtocol:(Protocol *)aProtocol;$/;"	m	protocol:KWMessageSpying
initAsPartialMockForObject:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (id)initAsPartialMockForObject:(id)object;$/;"	m	protocol:KWMessageSpying
initAsPartialMockForObject:	Example/Pods/Headers/Kiwi/KWMock.h	/^- (id)initAsPartialMockForObject:(id)object;$/;"	m	protocol:KWMessageSpying
initAsPartialMockForObject:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (id)initAsPartialMockForObject:(id)object;$/;"	m	protocol:KWMessageSpying
initAsPartialMockWithName:forObject:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (id)initAsPartialMockWithName:(NSString *)aName forObject:(id)object;$/;"	m	protocol:KWMessageSpying
initAsPartialMockWithName:forObject:	Example/Pods/Headers/Kiwi/KWMock.h	/^- (id)initAsPartialMockWithName:(NSString *)aName forObject:(id)object;$/;"	m	protocol:KWMessageSpying
initAsPartialMockWithName:forObject:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (id)initAsPartialMockWithName:(NSString *)aName forObject:(id)object;$/;"	m	protocol:KWMessageSpying
initForClass:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (id)initForClass:(Class)aClass;$/;"	m	protocol:KWMessageSpying
initForClass:	Example/Pods/Headers/Kiwi/KWMock.h	/^- (id)initForClass:(Class)aClass;$/;"	m	protocol:KWMessageSpying
initForClass:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (id)initForClass:(Class)aClass;$/;"	m	protocol:KWMessageSpying
initForProtocol:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (id)initForProtocol:(Protocol *)aProtocol;$/;"	m	protocol:KWMessageSpying
initForProtocol:	Example/Pods/Headers/Kiwi/KWMock.h	/^- (id)initForProtocol:(Protocol *)aProtocol;$/;"	m	protocol:KWMessageSpying
initForProtocol:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (id)initForProtocol:(Protocol *)aProtocol;$/;"	m	protocol:KWMessageSpying
initWithBlock:	Example/Pods/BuildHeaders/Kiwi/KWBlock.h	/^- (id)initWithBlock:(void (^)(void))block;$/;"	m	interface:KWBlock
initWithBlock:	Example/Pods/BuildHeaders/Kiwi/KWFutureObject.h	/^- (id)initWithBlock:(KWFutureObjectBlock)aBlock;$/;"	m	interface:KWFutureObject
initWithBlock:	Example/Pods/Headers/Kiwi/KWBlock.h	/^- (id)initWithBlock:(void (^)(void))block;$/;"	m	interface:KWBlock
initWithBlock:	Example/Pods/Headers/Kiwi/KWFutureObject.h	/^- (id)initWithBlock:(KWFutureObjectBlock)aBlock;$/;"	m	interface:KWFutureObject
initWithBlock:	Example/Pods/Kiwi/Classes/Core/KWBlock.h	/^- (id)initWithBlock:(void (^)(void))block;$/;"	m	interface:KWBlock
initWithBlock:	Example/Pods/Kiwi/Classes/Core/KWBlock.m	/^- (id)initWithBlock:(void (^)(void))block {$/;"	m	implementation:KWBlock
initWithBlock:	Example/Pods/Kiwi/Classes/Core/KWFutureObject.h	/^- (id)initWithBlock:(KWFutureObjectBlock)aBlock;$/;"	m	interface:KWFutureObject
initWithBytes:objCType:	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (id)initWithBytes:(const void *)bytes objCType:(const char *)anObjCType;$/;"	m	interface:KWValue
initWithBytes:objCType:	Example/Pods/Headers/Kiwi/KWValue.h	/^- (id)initWithBytes:(const void *)bytes objCType:(const char *)anObjCType;$/;"	m	interface:KWValue
initWithBytes:objCType:	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (id)initWithBytes:(const void *)bytes objCType:(const char *)anObjCType;$/;"	m	interface:KWValue
initWithBytes:objCType:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (id)initWithBytes:(const void *)bytes objCType:(const char *)anObjCType {$/;"	m	implementation:KWValue
initWithCallSite:context:description:	Example/Pods/Kiwi/Classes/Nodes/KWPendingNode.m	/^- (id)initWithCallSite:(KWCallSite *)aCallSite context:(KWContextNode *)context description:(NSString *)aDescription {$/;"	m	implementation:KWPendingNode
initWithCallSite:description:block:	Example/Pods/BuildHeaders/Kiwi/KWBlockNode.h	/^- (id)initWithCallSite:(KWCallSite *)aCallSite description:(NSString *)aDescription block:(void (^)(void))block;$/;"	m	interface:KWBlockNode
initWithCallSite:description:block:	Example/Pods/Headers/Kiwi/KWBlockNode.h	/^- (id)initWithCallSite:(KWCallSite *)aCallSite description:(NSString *)aDescription block:(void (^)(void))block;$/;"	m	interface:KWBlockNode
initWithCallSite:description:block:	Example/Pods/Kiwi/Classes/Nodes/KWBlockNode.h	/^- (id)initWithCallSite:(KWCallSite *)aCallSite description:(NSString *)aDescription block:(void (^)(void))block;$/;"	m	interface:KWBlockNode
initWithCallSite:description:block:	Example/Pods/Kiwi/Classes/Nodes/KWBlockNode.m	/^- (id)initWithCallSite:(KWCallSite *)aCallSite description:(NSString *)aDescription block:(void (^)(void))block {$/;"	m	implementation:KWBlockNode
initWithCallSite:format:	Example/Pods/BuildHeaders/Kiwi/KWFailure.h	/^- (id)initWithCallSite:(KWCallSite *)aCallSite format:(NSString *)format, ...;$/;"	m	interface:KWFailure
initWithCallSite:format:	Example/Pods/Headers/Kiwi/KWFailure.h	/^- (id)initWithCallSite:(KWCallSite *)aCallSite format:(NSString *)format, ...;$/;"	m	interface:KWFailure
initWithCallSite:format:	Example/Pods/Kiwi/Classes/Core/KWFailure.h	/^- (id)initWithCallSite:(KWCallSite *)aCallSite format:(NSString *)format, ...;$/;"	m	interface:KWFailure
initWithCallSite:format:	Example/Pods/Kiwi/Classes/Core/KWFailure.m	/^- (id)initWithCallSite:(KWCallSite *)aCallSite format:(NSString *)format, ... {$/;"	m	implementation:KWFailure
initWithCallSite:message:	Example/Pods/BuildHeaders/Kiwi/KWFailure.h	/^- (id)initWithCallSite:(KWCallSite *)aCallSite message:(NSString *)aMessage;$/;"	m	interface:KWFailure
initWithCallSite:message:	Example/Pods/Headers/Kiwi/KWFailure.h	/^- (id)initWithCallSite:(KWCallSite *)aCallSite message:(NSString *)aMessage;$/;"	m	interface:KWFailure
initWithCallSite:message:	Example/Pods/Kiwi/Classes/Core/KWFailure.h	/^- (id)initWithCallSite:(KWCallSite *)aCallSite message:(NSString *)aMessage;$/;"	m	interface:KWFailure
initWithCallSite:message:	Example/Pods/Kiwi/Classes/Core/KWFailure.m	/^- (id)initWithCallSite:(KWCallSite *)aCallSite message:(NSString *)aMessage {$/;"	m	implementation:KWFailure
initWithCallSite:namespacePrefix:	Example/Pods/BuildHeaders/Kiwi/KWRegisterMatchersNode.h	/^- (id)initWithCallSite:(KWCallSite *)aCallSite namespacePrefix:(NSString *)aNamespacePrefix;$/;"	m	interface:KWRegisterMatchersNode
initWithCallSite:namespacePrefix:	Example/Pods/Headers/Kiwi/KWRegisterMatchersNode.h	/^- (id)initWithCallSite:(KWCallSite *)aCallSite namespacePrefix:(NSString *)aNamespacePrefix;$/;"	m	interface:KWRegisterMatchersNode
initWithCallSite:namespacePrefix:	Example/Pods/Kiwi/Classes/Nodes/KWRegisterMatchersNode.h	/^- (id)initWithCallSite:(KWCallSite *)aCallSite namespacePrefix:(NSString *)aNamespacePrefix;$/;"	m	interface:KWRegisterMatchersNode
initWithCallSite:namespacePrefix:	Example/Pods/Kiwi/Classes/Nodes/KWRegisterMatchersNode.m	/^- (id)initWithCallSite:(KWCallSite *)aCallSite namespacePrefix:(NSString *)aNamespacePrefix {$/;"	m	implementation:KWRegisterMatchersNode
initWithCallSite:parentContext:description:	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^- (id)initWithCallSite:(KWCallSite *)aCallSite parentContext:(KWContextNode *)node description:(NSString *)aDescription;$/;"	m	interface:KWContextNode
initWithCallSite:parentContext:description:	Example/Pods/Headers/Kiwi/KWContextNode.h	/^- (id)initWithCallSite:(KWCallSite *)aCallSite parentContext:(KWContextNode *)node description:(NSString *)aDescription;$/;"	m	interface:KWContextNode
initWithCallSite:parentContext:description:	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^- (id)initWithCallSite:(KWCallSite *)aCallSite parentContext:(KWContextNode *)node description:(NSString *)aDescription;$/;"	m	interface:KWContextNode
initWithDelegate:	Example/Pods/BuildHeaders/Kiwi/KWInvocationCapturer.h	/^- (id)initWithDelegate:(id)aDelegate;$/;"	m	protocol:KWInvocationCapturerDelegate
initWithDelegate:	Example/Pods/Headers/Kiwi/KWInvocationCapturer.h	/^- (id)initWithDelegate:(id)aDelegate;$/;"	m	protocol:KWInvocationCapturerDelegate
initWithDelegate:	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.h	/^- (id)initWithDelegate:(id)aDelegate;$/;"	m	protocol:KWInvocationCapturerDelegate
initWithDelegate:	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.m	/^- (id)initWithDelegate:(id)aDelegate {$/;"	m	implementation:KWInvocationCapturer
initWithDelegate:userInfo:	Example/Pods/BuildHeaders/Kiwi/KWInvocationCapturer.h	/^- (id)initWithDelegate:(id)aDelegate userInfo:(NSDictionary *)aUserInfo;$/;"	m	protocol:KWInvocationCapturerDelegate
initWithDelegate:userInfo:	Example/Pods/Headers/Kiwi/KWInvocationCapturer.h	/^- (id)initWithDelegate:(id)aDelegate userInfo:(NSDictionary *)aUserInfo;$/;"	m	protocol:KWInvocationCapturerDelegate
initWithDelegate:userInfo:	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.h	/^- (id)initWithDelegate:(id)aDelegate userInfo:(NSDictionary *)aUserInfo;$/;"	m	protocol:KWInvocationCapturerDelegate
initWithDelegate:userInfo:	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.m	/^- (id)initWithDelegate:(id)aDelegate userInfo:(NSDictionary *)aUserInfo {$/;"	m	implementation:KWInvocationCapturer
initWithExpectationType:callSite:matcherFactory:reporter:	Example/Pods/Kiwi/Classes/Verifiers/KWAsyncVerifier.m	/^- (id)initWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite matcherFactory:(KWMatcherFactory *)aMatcherFactory reporter:(id<KWReporting>)aReporter {$/;"	m	implementation:KWAsyncVerifier
initWithExpectationType:callSite:reporter:	Example/Pods/BuildHeaders/Kiwi/KWExistVerifier.h	/^- (id)initWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite reporter:(id<KWReporting>)aReporter;$/;"	m	protocol:KWReporting
initWithExpectationType:callSite:reporter:	Example/Pods/Headers/Kiwi/KWExistVerifier.h	/^- (id)initWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite reporter:(id<KWReporting>)aReporter;$/;"	m	protocol:KWReporting
initWithExpectationType:callSite:reporter:	Example/Pods/Kiwi/Classes/Verifiers/KWExistVerifier.h	/^- (id)initWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite reporter:(id<KWReporting>)aReporter;$/;"	m	protocol:KWReporting
initWithFilename:lineNumber:	Example/Pods/BuildHeaders/Kiwi/KWCallSite.h	/^- (id)initWithFilename:(NSString *)aFilename lineNumber:(NSUInteger)aLineNumber;$/;"	m	interface:KWCallSite
initWithFilename:lineNumber:	Example/Pods/Headers/Kiwi/KWCallSite.h	/^- (id)initWithFilename:(NSString *)aFilename lineNumber:(NSUInteger)aLineNumber;$/;"	m	interface:KWCallSite
initWithFilename:lineNumber:	Example/Pods/Kiwi/Classes/Core/KWCallSite.h	/^- (id)initWithFilename:(NSString *)aFilename lineNumber:(NSUInteger)aLineNumber;$/;"	m	interface:KWCallSite
initWithFilename:lineNumber:	Example/Pods/Kiwi/Classes/Core/KWCallSite.m	/^- (id)initWithFilename:(NSString *)aFilename lineNumber:(NSUInteger)aLineNumber {$/;"	m	implementation:KWCallSite
initWithMatcher:	Example/Pods/Kiwi/Classes/Verifiers/KWAsyncVerifier.m	/^- (id)initWithMatcher:(id<KWMatching>)aMatcher {$/;"	m	implementation:KWAsyncMatcherProbe
initWithMessagePattern:	Example/Pods/BuildHeaders/Kiwi/KWStub.h	/^- (id)initWithMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	m	interface:KWStub
initWithMessagePattern:	Example/Pods/Headers/Kiwi/KWStub.h	/^- (id)initWithMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	m	interface:KWStub
initWithMessagePattern:	Example/Pods/Kiwi/Classes/Stubbing/KWStub.h	/^- (id)initWithMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	m	interface:KWStub
initWithMessagePattern:block:	Example/Pods/BuildHeaders/Kiwi/KWStub.h	/^- (id)initWithMessagePattern:(KWMessagePattern *)aMessagePattern block:(id (^)(NSArray *params))aBlock;$/;"	m	interface:KWStub
initWithMessagePattern:block:	Example/Pods/Headers/Kiwi/KWStub.h	/^- (id)initWithMessagePattern:(KWMessagePattern *)aMessagePattern block:(id (^)(NSArray *params))aBlock;$/;"	m	interface:KWStub
initWithMessagePattern:block:	Example/Pods/Kiwi/Classes/Stubbing/KWStub.h	/^- (id)initWithMessagePattern:(KWMessagePattern *)aMessagePattern block:(id (^)(NSArray *params))aBlock;$/;"	m	interface:KWStub
initWithMessagePattern:value:	Example/Pods/BuildHeaders/Kiwi/KWStub.h	/^- (id)initWithMessagePattern:(KWMessagePattern *)aMessagePattern value:(id)aValue;$/;"	m	interface:KWStub
initWithMessagePattern:value:	Example/Pods/Headers/Kiwi/KWStub.h	/^- (id)initWithMessagePattern:(KWMessagePattern *)aMessagePattern value:(id)aValue;$/;"	m	interface:KWStub
initWithMessagePattern:value:	Example/Pods/Kiwi/Classes/Stubbing/KWStub.h	/^- (id)initWithMessagePattern:(KWMessagePattern *)aMessagePattern value:(id)aValue;$/;"	m	interface:KWStub
initWithMessagePattern:value:times:afterThatReturn:	Example/Pods/BuildHeaders/Kiwi/KWStub.h	/^- (id)initWithMessagePattern:(KWMessagePattern *)aMessagePattern value:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue;$/;"	m	interface:KWStub
initWithMessagePattern:value:times:afterThatReturn:	Example/Pods/Headers/Kiwi/KWStub.h	/^- (id)initWithMessagePattern:(KWMessagePattern *)aMessagePattern value:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue;$/;"	m	interface:KWStub
initWithMessagePattern:value:times:afterThatReturn:	Example/Pods/Kiwi/Classes/Stubbing/KWStub.h	/^- (id)initWithMessagePattern:(KWMessagePattern *)aMessagePattern value:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue;$/;"	m	interface:KWStub
initWithName:forClass:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (id)initWithName:(NSString *)aName forClass:(Class)aClass;$/;"	m	protocol:KWMessageSpying
initWithName:forClass:	Example/Pods/Headers/Kiwi/KWMock.h	/^- (id)initWithName:(NSString *)aName forClass:(Class)aClass;$/;"	m	protocol:KWMessageSpying
initWithName:forClass:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (id)initWithName:(NSString *)aName forClass:(Class)aClass;$/;"	m	protocol:KWMessageSpying
initWithName:forProtocol:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (id)initWithName:(NSString *)aName forProtocol:(Protocol *)aProtocol;$/;"	m	protocol:KWMessageSpying
initWithName:forProtocol:	Example/Pods/Headers/Kiwi/KWMock.h	/^- (id)initWithName:(NSString *)aName forProtocol:(Protocol *)aProtocol;$/;"	m	protocol:KWMessageSpying
initWithName:forProtocol:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (id)initWithName:(NSString *)aName forProtocol:(Protocol *)aProtocol;$/;"	m	protocol:KWMessageSpying
initWithPrefix:	Example/Pods/BuildHeaders/Kiwi/KWStringPrefixMatcher.h	/^- (id)initWithPrefix:(NSString *)aPrefix;$/;"	m	interface:KWStringPrefixMatcher
initWithPrefix:	Example/Pods/Headers/Kiwi/KWStringPrefixMatcher.h	/^- (id)initWithPrefix:(NSString *)aPrefix;$/;"	m	interface:KWStringPrefixMatcher
initWithPrefix:	Example/Pods/Kiwi/Classes/Matchers/KWStringPrefixMatcher.h	/^- (id)initWithPrefix:(NSString *)aPrefix;$/;"	m	interface:KWStringPrefixMatcher
initWithRootNode:	Example/Pods/BuildHeaders/Kiwi/KWExampleSuite.h	/^- (id)initWithRootNode:(KWContextNode *)contextNode;$/;"	m	interface:KWExampleSuite
initWithRootNode:	Example/Pods/Headers/Kiwi/KWExampleSuite.h	/^- (id)initWithRootNode:(KWContextNode *)contextNode;$/;"	m	interface:KWExampleSuite
initWithRootNode:	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.h	/^- (id)initWithRootNode:(KWContextNode *)contextNode;$/;"	m	interface:KWExampleSuite
initWithSelector:	Example/Pods/BuildHeaders/Kiwi/KWMessagePattern.h	/^- (id)initWithSelector:(SEL)aSelector;$/;"	m	interface:KWMessagePattern
initWithSelector:	Example/Pods/Headers/Kiwi/KWMessagePattern.h	/^- (id)initWithSelector:(SEL)aSelector;$/;"	m	interface:KWMessagePattern
initWithSelector:	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.h	/^- (id)initWithSelector:(SEL)aSelector;$/;"	m	interface:KWMessagePattern
initWithSelector:	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.m	/^- (id)initWithSelector:(SEL)aSelector {$/;"	m	implementation:KWMessagePattern
initWithSelector:argumentFilters:	Example/Pods/BuildHeaders/Kiwi/KWMessagePattern.h	/^- (id)initWithSelector:(SEL)aSelector argumentFilters:(NSArray *)anArray;$/;"	m	interface:KWMessagePattern
initWithSelector:argumentFilters:	Example/Pods/Headers/Kiwi/KWMessagePattern.h	/^- (id)initWithSelector:(SEL)aSelector argumentFilters:(NSArray *)anArray;$/;"	m	interface:KWMessagePattern
initWithSelector:argumentFilters:	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.h	/^- (id)initWithSelector:(SEL)aSelector argumentFilters:(NSArray *)anArray;$/;"	m	interface:KWMessagePattern
initWithSelector:argumentFilters:	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.m	/^- (id)initWithSelector:(SEL)aSelector argumentFilters:(NSArray *)anArray {$/;"	m	implementation:KWMessagePattern
initWithSelector:firstArgumentFilter:argumentList:	Example/Pods/BuildHeaders/Kiwi/KWMessagePattern.h	/^- (id)initWithSelector:(SEL)aSelector firstArgumentFilter:(id)firstArgumentFilter argumentList:(va_list)argumentList;$/;"	m	interface:KWMessagePattern
initWithSelector:firstArgumentFilter:argumentList:	Example/Pods/Headers/Kiwi/KWMessagePattern.h	/^- (id)initWithSelector:(SEL)aSelector firstArgumentFilter:(id)firstArgumentFilter argumentList:(va_list)argumentList;$/;"	m	interface:KWMessagePattern
initWithSelector:firstArgumentFilter:argumentList:	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.h	/^- (id)initWithSelector:(SEL)aSelector firstArgumentFilter:(id)firstArgumentFilter argumentList:(va_list)argumentList;$/;"	m	interface:KWMessagePattern
initWithSelector:firstArgumentFilter:argumentList:	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.m	/^- (id)initWithSelector:(SEL)aSelector firstArgumentFilter:(id)firstArgumentFilter argumentList:(va_list)argumentList {$/;"	m	implementation:KWMessagePattern
initWithSubject:	Example/Pods/BuildHeaders/Kiwi/KWMatcher.h	/^- (id)initWithSubject:(id)anObject;$/;"	m	interface:KWMatcher
initWithSubject:	Example/Pods/BuildHeaders/Kiwi/KWMatching.h	/^- (id)initWithSubject:(id)anObject;$/;"	m	protocol:KWMatching
initWithSubject:	Example/Pods/Headers/Kiwi/KWMatcher.h	/^- (id)initWithSubject:(id)anObject;$/;"	m	interface:KWMatcher
initWithSubject:	Example/Pods/Headers/Kiwi/KWMatching.h	/^- (id)initWithSubject:(id)anObject;$/;"	m	protocol:KWMatching
initWithSubject:	Example/Pods/Kiwi/Classes/Core/KWMatcher.h	/^- (id)initWithSubject:(id)anObject;$/;"	m	interface:KWMatcher
initWithSubject:	Example/Pods/Kiwi/Classes/Core/KWMatcher.m	/^- (id)initWithSubject:(id)anObject {$/;"	m	implementation:KWMatcher
initWithSubject:	Example/Pods/Kiwi/Classes/Core/KWMatching.h	/^- (id)initWithSubject:(id)anObject;$/;"	m	protocol:KWMatching
initWithSubject:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (id)initWithSubject:(id)anObject {$/;"	m	implementation:KWReceiveMatcher
initWithSubject:messagePattern:countType:count:	Example/Pods/BuildHeaders/Kiwi/KWMessageTracker.h	/^- (id)initWithSubject:(id)anObject messagePattern:(KWMessagePattern *)aMessagePattern countType:(KWCountType)aCountType count:(NSUInteger)aCount;$/;"	m	interface:KWMessageTracker
initWithSubject:messagePattern:countType:count:	Example/Pods/Headers/Kiwi/KWMessageTracker.h	/^- (id)initWithSubject:(id)anObject messagePattern:(KWMessagePattern *)aMessagePattern countType:(KWCountType)aCountType count:(NSUInteger)aCount;$/;"	m	interface:KWMessageTracker
initWithSubject:messagePattern:countType:count:	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.h	/^- (id)initWithSubject:(id)anObject messagePattern:(KWMessagePattern *)aMessagePattern countType:(KWCountType)aCountType count:(NSUInteger)aCount;$/;"	m	interface:KWMessageTracker
initWithSubject:messagePattern:countType:count:	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.m	/^- (id)initWithSubject:(id)anObject messagePattern:(KWMessagePattern *)aMessagePattern countType:(KWCountType)aCountType count:(NSUInteger)aCount {$/;"	m	implementation:KWMessageTracker
initWithSubstring:	Example/Pods/BuildHeaders/Kiwi/KWStringContainsMatcher.h	/^- (id)initWithSubstring:(NSString *)aSubstring DEPRECATED_ATTRIBUTE;$/;"	m	interface:KWStringContainsMatcher
initWithSubstring:	Example/Pods/Headers/Kiwi/KWStringContainsMatcher.h	/^- (id)initWithSubstring:(NSString *)aSubstring DEPRECATED_ATTRIBUTE;$/;"	m	interface:KWStringContainsMatcher
initWithSubstring:	Example/Pods/Kiwi/Classes/Matchers/KWStringContainsMatcher.h	/^- (id)initWithSubstring:(NSString *)aSubstring DEPRECATED_ATTRIBUTE;$/;"	m	interface:KWStringContainsMatcher
initWithSymbolName:objectRef:block:	Example/Pods/BuildHeaders/Kiwi/KWLetNode.h	/^- (instancetype)initWithSymbolName:(NSString *)aSymbolName objectRef:(id *)anObjectRef block:(id (^)(void))block;$/;"	m	interface:KWLetNode
initWithSymbolName:objectRef:block:	Example/Pods/Headers/Kiwi/KWLetNode.h	/^- (instancetype)initWithSymbolName:(NSString *)aSymbolName objectRef:(id *)anObjectRef block:(id (^)(void))block;$/;"	m	interface:KWLetNode
initWithSymbolName:objectRef:block:	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.h	/^- (instancetype)initWithSymbolName:(NSString *)aSymbolName objectRef:(id *)anObjectRef block:(id (^)(void))block;$/;"	m	interface:KWLetNode
initWithTimeout:delay:shouldWait:	Example/Pods/BuildHeaders/Kiwi/KWProbePoller.h	/^- (id)initWithTimeout:(NSTimeInterval)theTimeout delay:(NSTimeInterval)theDelay shouldWait:(BOOL)wait;$/;"	m	interface:KWProbePoller
initWithTimeout:delay:shouldWait:	Example/Pods/Headers/Kiwi/KWProbePoller.h	/^- (id)initWithTimeout:(NSTimeInterval)theTimeout delay:(NSTimeInterval)theDelay shouldWait:(BOOL)wait;$/;"	m	interface:KWProbePoller
initWithTimeout:delay:shouldWait:	Example/Pods/Kiwi/Classes/Core/KWProbePoller.h	/^- (id)initWithTimeout:(NSTimeInterval)theTimeout delay:(NSTimeInterval)theDelay shouldWait:(BOOL)wait;$/;"	m	interface:KWProbePoller
initialize	Example/Pods/Kiwi/Classes/Core/KWMatchers.m	/^+ (void)initialize {$/;"	c	implementation:KWMatchers
innerExampleBlock	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^            innerExampleBlock();$/;"	p	interface:KWContextNode
install_resource	Example/Pods/Pods-Clappr-resources.sh	/^install_resource()$/;"	f
install_resource	Example/Pods/Pods-Tests-resources.sh	/^install_resource()$/;"	f
intData	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSData *)intData;$/;"	p	interface:KWValue
intData	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSData *)intData;$/;"	p	interface:KWValue
intData	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSData *)intData;$/;"	p	interface:KWValue
intData	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSData *)intData {$/;"	m	implementation:KWValue
intDescriptionAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)intDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
intDescriptionAtIndex:	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)intDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
intDescriptionAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (NSString *)intDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
intValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (int)intValue;$/;"	p	interface:KWValue
intValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (int)intValue;$/;"	p	interface:KWValue
intValue	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    self.focusedCallSite = [KWCallSite callSiteWithFilename:focusInfo[0] lineNumber:[focusInfo[1] intValue]];$/;"	p	interface:KWExampleSuiteBuilder
intValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (int)intValue;$/;"	p	interface:KWValue
intValue	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (int)intValue {$/;"	m	implementation:KWValue
intValue	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^        int returnValueTimesInt = [returnValueTimesString intValue];$/;"	p	interface:KWStub
integerData	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSData *)integerData;$/;"	p	interface:KWValue
integerData	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSData *)integerData;$/;"	p	interface:KWValue
integerData	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSData *)integerData;$/;"	p	interface:KWValue
integerData	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSData *)integerData {$/;"	m	implementation:KWValue
integerValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSInteger)integerValue;$/;"	p	interface:KWValue
integerValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSInteger)integerValue;$/;"	p	interface:KWValue
integerValue	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^        lineNumber = lineNumberMatch.integerValue;$/;"	p	interface:KWExample
integerValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSInteger)integerValue;$/;"	p	interface:KWValue
integerValue	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSInteger)integerValue {$/;"	m	implementation:KWValue
invocation	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^        [invocations addObject:invocation];$/;"	p	interface:KWExampleSuite
invocation	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^@property (nonatomic, strong) NSInvocation *invocation;$/;"	p	interface:KWHaveMatcher
invocation	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^@property (nonatomic, copy) NSInvocation *invocation;$/;"	p	interface:KWUserDefinedMatcher
invocation	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^                [spy object:self didReceiveInvocation:invocation];$/;"	p	interface:KWMock
invocation	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    [self processReceivedInvocation:invocation];$/;"	p	interface:KWMock
invocationCapturer:didCaptureInvocation:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^+ (void)invocationCapturer:(KWInvocationCapturer *)anInvocationCapturer didCaptureInvocation:(NSInvocation *)anInvocation {$/;"	c	implementation:KWReceiveMatcher
invocationCapturer:didCaptureInvocation:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^- (void)invocationCapturer:(KWInvocationCapturer *)anInvocationCapturer didCaptureInvocation:(NSInvocation *)anInvocation {$/;"	m	implementation:NSObject
invocationCapturer:methodSignatureForSelector:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^+ (NSMethodSignature *)invocationCapturer:(KWInvocationCapturer *)anInvocationCapturer methodSignatureForSelector:(SEL)aSelector {$/;"	m	implementation:KWReceiveMatcher
invocationCapturer:methodSignatureForSelector:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^- (NSMethodSignature *)invocationCapturer:(KWInvocationCapturer *)anInvocationCapturer methodSignatureForSelector:(SEL)aSelector {$/;"	m	implementation:NSObject
invocationCapturerWithDelegate:	Example/Pods/BuildHeaders/Kiwi/KWInvocationCapturer.h	/^+ (id)invocationCapturerWithDelegate:(id)aDelegate;$/;"	c	protocol:KWInvocationCapturerDelegate
invocationCapturerWithDelegate:	Example/Pods/Headers/Kiwi/KWInvocationCapturer.h	/^+ (id)invocationCapturerWithDelegate:(id)aDelegate;$/;"	c	protocol:KWInvocationCapturerDelegate
invocationCapturerWithDelegate:	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.h	/^+ (id)invocationCapturerWithDelegate:(id)aDelegate;$/;"	c	protocol:KWInvocationCapturerDelegate
invocationCapturerWithDelegate:	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.m	/^+ (id)invocationCapturerWithDelegate:(id)aDelegate {$/;"	c	implementation:KWInvocationCapturer
invocationCapturerWithDelegate:userInfo:	Example/Pods/BuildHeaders/Kiwi/KWInvocationCapturer.h	/^+ (id)invocationCapturerWithDelegate:(id)aDelegate userInfo:(NSDictionary *)aUserInfo;$/;"	c	protocol:KWInvocationCapturerDelegate
invocationCapturerWithDelegate:userInfo:	Example/Pods/Headers/Kiwi/KWInvocationCapturer.h	/^+ (id)invocationCapturerWithDelegate:(id)aDelegate userInfo:(NSDictionary *)aUserInfo;$/;"	c	protocol:KWInvocationCapturerDelegate
invocationCapturerWithDelegate:userInfo:	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.h	/^+ (id)invocationCapturerWithDelegate:(id)aDelegate userInfo:(NSDictionary *)aUserInfo;$/;"	c	protocol:KWInvocationCapturerDelegate
invocationCapturerWithDelegate:userInfo:	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.m	/^+ (id)invocationCapturerWithDelegate:(id)aDelegate userInfo:(NSDictionary *)aUserInfo {$/;"	c	implementation:KWInvocationCapturer
invocationDescription	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)invocationDescription;$/;"	m	interface:NSInvocation
invocationDescription	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)invocationDescription;$/;"	m	interface:NSInvocation
invocationDescription	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (NSString *)invocationDescription;$/;"	m	interface:NSInvocation
invocationWithTarget:selector:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+KiwiAdditions.h	/^+ (NSInvocation *)invocationWithTarget:(id)anObject selector:(SEL)aSelector;$/;"	m	interface:NSInvocation
invocationWithTarget:selector:	Example/Pods/Headers/Kiwi/NSInvocation+KiwiAdditions.h	/^+ (NSInvocation *)invocationWithTarget:(id)anObject selector:(SEL)aSelector;$/;"	m	interface:NSInvocation
invocationWithTarget:selector:	Example/Pods/Kiwi/Classes/Core/NSInvocation+KiwiAdditions.h	/^+ (NSInvocation *)invocationWithTarget:(id)anObject selector:(SEL)aSelector;$/;"	m	interface:NSInvocation
invocationWithTarget:selector:	Example/Pods/Kiwi/Classes/Core/NSInvocation+KiwiAdditions.m	/^+ (NSInvocation *)invocationWithTarget:(id)anObject selector:(SEL)aSelector {$/;"	m	implementation:NSInvocation
invocationWithTarget:selector:messageArguments:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+KiwiAdditions.h	/^+ (NSInvocation *)invocationWithTarget:(id)anObject selector:(SEL)aSelector messageArguments:(const void *)firstBytes, ...;$/;"	c	interface:NSInvocation
invocationWithTarget:selector:messageArguments:	Example/Pods/Headers/Kiwi/NSInvocation+KiwiAdditions.h	/^+ (NSInvocation *)invocationWithTarget:(id)anObject selector:(SEL)aSelector messageArguments:(const void *)firstBytes, ...;$/;"	c	interface:NSInvocation
invocationWithTarget:selector:messageArguments:	Example/Pods/Kiwi/Classes/Core/NSInvocation+KiwiAdditions.h	/^+ (NSInvocation *)invocationWithTarget:(id)anObject selector:(SEL)aSelector messageArguments:(const void *)firstBytes, ...;$/;"	c	interface:NSInvocation
invocationWithTarget:selector:messageArguments:	Example/Pods/Kiwi/Classes/Core/NSInvocation+KiwiAdditions.m	/^+ (NSInvocation *)invocationWithTarget:(id)anObject selector:(SEL)aSelector messageArguments:(const void *)firstBytes, ... {$/;"	c	implementation:NSInvocation
invocations	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^    return invocations;$/;"	p	interface:KWExampleSuite
invocationsForTestCase	Example/Pods/BuildHeaders/Kiwi/KWExampleSuite.h	/^- (NSArray *)invocationsForTestCase;$/;"	m	interface:KWExampleSuite
invocationsForTestCase	Example/Pods/Headers/Kiwi/KWExampleSuite.h	/^- (NSArray *)invocationsForTestCase;$/;"	m	interface:KWExampleSuite
invocationsForTestCase	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.h	/^- (NSArray *)invocationsForTestCase;$/;"	m	interface:KWExampleSuite
invocationsForTestCase	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^    return [exampleSuite invocationsForTestCase];$/;"	p	interface:KWSpec
isBuildingExampleSuite	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^@property (nonatomic, readonly) BOOL isBuildingExampleSuite;$/;"	m	interface:KWExampleSuiteBuilder
isBuildingExampleSuite	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^@property (nonatomic, readonly) BOOL isBuildingExampleSuite;$/;"	m	interface:KWExampleSuiteBuilder
isBuildingExampleSuite	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^@property (nonatomic, readonly) BOOL isBuildingExampleSuite;$/;"	m	interface:KWExampleSuiteBuilder
isEqual:	Example/Pods/Kiwi/Classes/Core/KWCallSite.m	/^- (BOOL)isEqual:(id)anObject {$/;"	m	implementation:KWCallSite
isEqual:	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.m	/^- (BOOL)isEqual:(id)anObject {$/;"	m	implementation:KWInvocationCapturer
isEqual:	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.m	/^- (BOOL)isEqual:(id)object {$/;"	m	implementation:KWMessagePattern
isEqual:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (BOOL)isEqual:(id)object {$/;"	m	implementation:KWValue
isEqualOrMatches:	Example/Pods/BuildHeaders/Kiwi/KWGenericMatchingAdditions.h	/^- (BOOL)isEqualOrMatches:(id)object DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSObject
isEqualOrMatches:	Example/Pods/Headers/Kiwi/KWGenericMatchingAdditions.h	/^- (BOOL)isEqualOrMatches:(id)object DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSObject
isEqualOrMatches:	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchingAdditions.h	/^- (BOOL)isEqualOrMatches:(id)object DEPRECATED_ATTRIBUTE;$/;"	m	interface:NSObject
isEqualOrMatches:	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchingAdditions.m	/^- (BOOL)isEqualOrMatches:(id)object {$/;"	m	implementation:NSObject
isEqualToCallSite:	Example/Pods/Kiwi/Classes/Core/KWCallSite.m	/^- (BOOL)isEqualToCallSite:(KWCallSite *)aCallSite {$/;"	m	implementation:KWCallSite
isEqualToKWValue:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (BOOL)isEqualToKWValue:(KWValue *)aValue {$/;"	m	implementation:KWValue
isEqualToMessagePattern:	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.m	/^- (BOOL)isEqualToMessagePattern:(KWMessagePattern *)aMessagePattern {$/;"	m	implementation:KWMessagePattern
isEqualToNumber:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (BOOL)isEqualToNumber:(NSNumber *)aValue {$/;"	m	implementation:KWValue
isFocused	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^@property (nonatomic, assign) BOOL isFocused;$/;"	p	interface:KWContextNode
isFocused	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^- (BOOL)isFocused;$/;"	p	interface:KWExampleSuiteBuilder
isFocused	Example/Pods/Headers/Kiwi/KWContextNode.h	/^@property (nonatomic, assign) BOOL isFocused;$/;"	p	interface:KWContextNode
isFocused	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^- (BOOL)isFocused;$/;"	p	interface:KWExampleSuiteBuilder
isFocused	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^- (BOOL)isFocused;$/;"	p	interface:KWExampleSuiteBuilder
isFocused	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^@property (nonatomic, assign) BOOL isFocused;$/;"	p	interface:KWContextNode
isGenericMatcher:	Example/Pods/BuildHeaders/Kiwi/KWGenericMatchEvaluator.h	/^+ (BOOL)isGenericMatcher:(id)object;$/;"	c	interface:KWGenericMatchEvaluator
isGenericMatcher:	Example/Pods/Headers/Kiwi/KWGenericMatchEvaluator.h	/^+ (BOOL)isGenericMatcher:(id)object;$/;"	c	interface:KWGenericMatchEvaluator
isGenericMatcher:	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchEvaluator.h	/^+ (BOOL)isGenericMatcher:(id)object;$/;"	c	interface:KWGenericMatchEvaluator
isGenericMatcher:	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatchEvaluator.m	/^+ (BOOL)isGenericMatcher:(id)object {$/;"	c	implementation:KWGenericMatchEvaluator
isNilMatcher	Example/Pods/BuildHeaders/Kiwi/KWMatching.h	/^- (BOOL)isNilMatcher;$/;"	m	protocol:KWMatching
isNilMatcher	Example/Pods/Headers/Kiwi/KWMatching.h	/^- (BOOL)isNilMatcher;$/;"	m	protocol:KWMatching
isNilMatcher	Example/Pods/Kiwi/Classes/Core/KWMatching.h	/^- (BOOL)isNilMatcher;$/;"	m	protocol:KWMatching
isNullMock	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^@property (nonatomic, assign, readonly) BOOL isNullMock;$/;"	m	protocol:KWMessageSpying
isNullMock	Example/Pods/Headers/Kiwi/KWMock.h	/^@property (nonatomic, assign, readonly) BOOL isNullMock;$/;"	m	protocol:KWMessageSpying
isNullMock	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^@property (nonatomic, assign, readonly) BOOL isNullMock;$/;"	m	protocol:KWMessageSpying
isNumeric	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^@property (nonatomic, readonly) BOOL isNumeric;$/;"	p	interface:KWValue
isNumeric	Example/Pods/Headers/Kiwi/KWValue.h	/^@property (nonatomic, readonly) BOOL isNumeric;$/;"	p	interface:KWValue
isNumeric	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^@property (nonatomic, readonly) BOOL isNumeric;$/;"	p	interface:KWValue
isNumeric	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (BOOL)isNumeric {$/;"	m	implementation:KWValue
isPartialMock	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^@property (nonatomic, assign, readonly) BOOL isPartialMock;$/;"	p	protocol:KWMessageSpying
isPartialMock	Example/Pods/Headers/Kiwi/KWMock.h	/^@property (nonatomic, assign, readonly) BOOL isPartialMock;$/;"	p	protocol:KWMessageSpying
isPartialMock	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^@property (nonatomic, assign, readonly) BOOL isPartialMock;$/;"	p	protocol:KWMessageSpying
isPhysical	Example/Pods/BuildHeaders/Kiwi/KWDeviceInfo.h	/^+ (BOOL)isPhysical;$/;"	c	interface:KWDeviceInfo
isPhysical	Example/Pods/Headers/Kiwi/KWDeviceInfo.h	/^+ (BOOL)isPhysical;$/;"	c	interface:KWDeviceInfo
isPhysical	Example/Pods/Kiwi/Classes/Core/KWDeviceInfo.h	/^+ (BOOL)isPhysical;$/;"	c	interface:KWDeviceInfo
isPhysical	Example/Pods/Kiwi/Classes/Core/KWDeviceInfo.m	/^+ (BOOL)isPhysical {$/;"	c	implementation:KWDeviceInfo
isSatisfied	Example/Pods/BuildHeaders/Kiwi/KWProbe.h	/^- (BOOL)isSatisfied;$/;"	m	protocol:KWProbe
isSatisfied	Example/Pods/Headers/Kiwi/KWProbe.h	/^- (BOOL)isSatisfied;$/;"	m	protocol:KWProbe
isSatisfied	Example/Pods/Kiwi/Classes/Core/KWProbe.h	/^- (BOOL)isSatisfied;$/;"	m	protocol:KWProbe
isSatisfied	Example/Pods/Kiwi/Classes/Core/KWProbePoller.m	/^            return [probe isSatisfied];$/;"	p	interface:KWTimeout
isSatisfied	Example/Pods/Kiwi/Classes/Verifiers/KWAsyncVerifier.m	/^- (BOOL)isSatisfied {$/;"	m	implementation:KWAsyncMatcherProbe
isSimulator	Example/Pods/BuildHeaders/Kiwi/KWDeviceInfo.h	/^+ (BOOL)isSimulator;$/;"	m	interface:KWDeviceInfo
isSimulator	Example/Pods/Headers/Kiwi/KWDeviceInfo.h	/^+ (BOOL)isSimulator;$/;"	m	interface:KWDeviceInfo
isSimulator	Example/Pods/Kiwi/Classes/Core/KWDeviceInfo.h	/^+ (BOOL)isSimulator;$/;"	m	interface:KWDeviceInfo
isSimulator	Example/Pods/Kiwi/Classes/Core/KWDeviceInfo.m	/^+ (BOOL)isSimulator {$/;"	m	implementation:KWDeviceInfo
it	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void it(NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
it	Example/Pods/Headers/Kiwi/KWExample.h	/^void it(NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
it	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void it(NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
itNode	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    KWExample *example = [[KWExample alloc] initWithExampleNode:itNode];$/;"	p	interface:KWExampleSuiteBuilder
itNode	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    [contextNode addItNode:itNode];$/;"	p	interface:KWExampleSuiteBuilder
itNode	Example/Pods/Kiwi/Classes/Nodes/KWItNode.m	/^    return itNode;$/;"	p	interface:KWItNode
itWithCallSite	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void itWithCallSite(KWCallSite *aCallSite, NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
itWithCallSite	Example/Pods/Headers/Kiwi/KWExample.h	/^void itWithCallSite(KWCallSite *aCallSite, NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
itWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void itWithCallSite(KWCallSite *aCallSite, NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
itWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    itWithCallSite(callSite, aDescription, block);$/;"	p	interface:KWExample
itWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    itWithCallSite(nil, nil, block);$/;"	p	interface:KWExample
itemPhrase	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^                                      [self itemPhrase]];$/;"	p	interface:KWHaveMatcher
itemPhrase	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    return [NSString stringWithFormat:@"%@ %u %@", [self verbPhrase], (unsigned)self.count, [self itemPhrase]];$/;"	p	interface:KWHaveMatcher
items	Example/Pods/BuildHeaders/Kiwi/KWHaveMatcher.h	/^- (id)items;$/;"	m	protocol:KWContainmentCountMatcherTerminals
items	Example/Pods/Headers/Kiwi/KWHaveMatcher.h	/^- (id)items;$/;"	m	protocol:KWContainmentCountMatcherTerminals
items	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.h	/^- (id)items;$/;"	m	protocol:KWContainmentCountMatcherTerminals
kKWINVOCATION_EXAMPLE_GROUP_KEY	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^#define kKWINVOCATION_EXAMPLE_GROUP_KEY @"__KWExampleGroupKey"$/;"	M	interface:
kKW_DEFAULT_PROBE_DELAY	Example/Pods/BuildHeaders/Kiwi/KWProbePoller.h	/^#define kKW_DEFAULT_PROBE_DELAY 0.1$/;"	M	interface:
kKW_DEFAULT_PROBE_DELAY	Example/Pods/Headers/Kiwi/KWProbePoller.h	/^#define kKW_DEFAULT_PROBE_DELAY 0.1$/;"	M	interface:
kKW_DEFAULT_PROBE_DELAY	Example/Pods/Kiwi/Classes/Core/KWProbePoller.h	/^#define kKW_DEFAULT_PROBE_DELAY 0.1$/;"	M	interface:
kKW_DEFAULT_PROBE_TIMEOUT	Example/Pods/BuildHeaders/Kiwi/KWAsyncVerifier.h	/^#define kKW_DEFAULT_PROBE_TIMEOUT 1.0$/;"	M	interface:
kKW_DEFAULT_PROBE_TIMEOUT	Example/Pods/Headers/Kiwi/KWAsyncVerifier.h	/^#define kKW_DEFAULT_PROBE_TIMEOUT 1.0$/;"	M	interface:
kKW_DEFAULT_PROBE_TIMEOUT	Example/Pods/Kiwi/Classes/Verifiers/KWAsyncVerifier.h	/^#define kKW_DEFAULT_PROBE_TIMEOUT 1.0$/;"	M	interface:
key	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^@property (nonatomic, copy, readonly) NSString *key;$/;"	p	interface:KWUserDefinedMatcher
key	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^@property (nonatomic, copy, readonly) NSString *key;$/;"	p	interface:KWUserDefinedMatcher
key	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^    self.expectedKey = key;$/;"	p	interface:KWHaveValueMatcher
key	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^    self.expectedKeyPath = key;$/;"	p	interface:KWHaveValueMatcher
key	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^@property (nonatomic, copy, readonly) NSString *key;$/;"	p	interface:KWUserDefinedMatcher
key	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    NSInvocation *invocation = [NSInvocation invocationWithTarget:self selector:_cmd messageArguments:&key];$/;"	p	interface:KWMock
keyDescription	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^    return [NSString stringWithFormat:@"have %@ for %@", valueDescription, keyDescription];$/;"	p	interface:KWHaveValueMatcher
keyPath	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^    self.expectedKeyPath = keyPath;$/;"	p	interface:KWHaveValueMatcher
kiwi_testSuiteWithName:	Example/Pods/Kiwi/Classes/Config/KWAllTestsSuite.m	/^+ (id)kiwi_testSuiteWithName:(NSString *)aName {$/;"	c	implementation:XCTestSuite
kwCallerAddress	Example/Pods/BuildHeaders/Kiwi/KWSymbolicator.h	/^long kwCallerAddress(void);$/;"	f	interface:
kwCallerAddress	Example/Pods/Headers/Kiwi/KWSymbolicator.h	/^long kwCallerAddress(void);$/;"	f	interface:
kwCallerAddress	Example/Pods/Kiwi/Classes/Core/KWSymbolicator.h	/^long kwCallerAddress(void);$/;"	f	interface:
kwCallerAddress	Example/Pods/Kiwi/Classes/Core/KWSymbolicator.m	/^long kwCallerAddress (void){$/;"	f	interface:
kw_example	Example/Pods/BuildHeaders/Kiwi/KWExampleSuite.h	/^@property (nonatomic, setter = kw_setExample:) KWExample *kw_example;$/;"	p	interface:NSInvocation
kw_example	Example/Pods/Headers/Kiwi/KWExampleSuite.h	/^@property (nonatomic, setter = kw_setExample:) KWExample *kw_example;$/;"	p	interface:NSInvocation
kw_example	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.h	/^@property (nonatomic, setter = kw_setExample:) KWExample *kw_example;$/;"	p	interface:NSInvocation
kw_example	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^    KWExample *currentExample = self.currentExample ?: self.invocation.kw_example;$/;"	p	interface:KWSpec
kw_example	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^    self.currentExample = self.invocation.kw_example;$/;"	p	interface:KWSpec
label	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^- (void)reportResultForExampleNodeWithLabel:(NSString *)label;$/;"	p	interface:KWExample
lambda	Example/Pods/BuildHeaders/Kiwi/KWBlock.h	/^KWBlock *lambda(void (^block)(void));$/;"	f	interface:
lambda	Example/Pods/Headers/Kiwi/KWBlock.h	/^KWBlock *lambda(void (^block)(void));$/;"	f	interface:
lambda	Example/Pods/Kiwi/Classes/Core/KWBlock.h	/^KWBlock *lambda(void (^block)(void));$/;"	f	interface:
lambda	Example/Pods/Kiwi/Classes/Core/KWBlock.m	/^KWBlock *lambda(void (^block)(void)) {$/;"	f	implementation:
lastInContexts	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^@property (nonatomic, strong, readonly) NSMutableArray *lastInContexts;$/;"	p	interface:KWExample
lastInContexts	Example/Pods/Headers/Kiwi/KWExample.h	/^@property (nonatomic, strong, readonly) NSMutableArray *lastInContexts;$/;"	p	interface:KWExample
lastInContexts	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^@property (nonatomic, strong, readonly) NSMutableArray *lastInContexts;$/;"	p	interface:KWExample
lastObject	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^        KWExample *lastExample = (KWExample *)[self.examples lastObject];$/;"	p	interface:KWExampleSuite
lastObject	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    KWContextNode *contextNode = [self.contextNodeStack lastObject];$/;"	p	interface:KWExampleSuiteBuilder
lastObject	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        Protocol *protocol = [protocolQueue lastObject];$/;"	p	interface:KWMock
launch	Example/Pods/Kiwi/Classes/Core/KWSymbolicator.m	/^- (void)launch;$/;"	m	protocol:NSTask_KWWarningSuppressor
length	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^        self.actualCount = [targetObject length];$/;"	p	interface:KWHaveMatcher
let	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void let(id name, id (^block)(void)); \/\/ coax Xcode into autocompleting$/;"	p	interface:KWExample
let	Example/Pods/Headers/Kiwi/KWExample.h	/^void let(id name, id (^block)(void)); \/\/ coax Xcode into autocompleting$/;"	p	interface:KWExample
let	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void let(id name, id (^block)(void)); \/\/ coax Xcode into autocompleting$/;"	p	interface:KWExample
letNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^            [tree addLetNode:letNode];$/;"	p	interface:KWContextNode
letNode	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^            tree = letNode;$/;"	p	interface:KWContextNode
letNodeTree	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^- (KWLetNode *)letNodeTree;$/;"	p	interface:KWContextNode
letNodeTree	Example/Pods/Headers/Kiwi/KWContextNode.h	/^- (KWLetNode *)letNodeTree;$/;"	p	interface:KWContextNode
letNodeTree	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^- (KWLetNode *)letNodeTree;$/;"	p	interface:KWContextNode
letNodeTree	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^            KWLetNode *letNodeTree = [self letNodeTree];$/;"	p	interface:KWContextNode
letNodeTree	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^    KWLetNode *tree = [self.parentContext letNodeTree];$/;"	p	interface:KWContextNode
letNodeWithSymbolName:objectRef:block:	Example/Pods/BuildHeaders/Kiwi/KWLetNode.h	/^+ (instancetype)letNodeWithSymbolName:(NSString *)aSymbolName objectRef:(id *)anObjectRef block:(id (^)(void))block;$/;"	c	interface:KWLetNode
letNodeWithSymbolName:objectRef:block:	Example/Pods/Headers/Kiwi/KWLetNode.h	/^+ (instancetype)letNodeWithSymbolName:(NSString *)aSymbolName objectRef:(id *)anObjectRef block:(id (^)(void))block;$/;"	c	interface:KWLetNode
letNodeWithSymbolName:objectRef:block:	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.h	/^+ (instancetype)letNodeWithSymbolName:(NSString *)aSymbolName objectRef:(id *)anObjectRef block:(id (^)(void))block;$/;"	c	interface:KWLetNode
letNodes	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^@property (nonatomic, readonly) NSArray *letNodes;$/;"	p	interface:KWContextNode
letNodes	Example/Pods/Headers/Kiwi/KWContextNode.h	/^@property (nonatomic, readonly) NSArray *letNodes;$/;"	p	interface:KWContextNode
letNodes	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^@property (nonatomic, readonly) NSArray *letNodes;$/;"	p	interface:KWContextNode
letWithCallSite	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void letWithCallSite(KWCallSite *aCallSite, id *anObjectRef, NSString *aSymbolName, id (^block)(void));$/;"	p	interface:KWExample
letWithCallSite	Example/Pods/Headers/Kiwi/KWExample.h	/^void letWithCallSite(KWCallSite *aCallSite, id *anObjectRef, NSString *aSymbolName, id (^block)(void));$/;"	p	interface:KWExample
letWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void letWithCallSite(KWCallSite *aCallSite, id *anObjectRef, NSString *aSymbolName, id (^block)(void));$/;"	p	interface:KWExample
letWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    letWithCallSite(nil, anObjectRef, aDescription, block);$/;"	p	interface:KWExample
let_	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void let_(id *anObjectRef, const char *aSymbolName, id (^block)(void));$/;"	p	interface:KWExample
let_	Example/Pods/Headers/Kiwi/KWExample.h	/^void let_(id *anObjectRef, const char *aSymbolName, id (^block)(void));$/;"	p	interface:KWExample
let_	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void let_(id *anObjectRef, const char *aSymbolName, id (^block)(void));$/;"	p	interface:KWExample
lineNumber	Example/Pods/BuildHeaders/Kiwi/KWCallSite.h	/^@property (nonatomic, readonly) NSUInteger lineNumber;$/;"	p	interface:KWCallSite
lineNumber	Example/Pods/Headers/Kiwi/KWCallSite.h	/^@property (nonatomic, readonly) NSUInteger lineNumber;$/;"	p	interface:KWCallSite
lineNumber	Example/Pods/Kiwi/Classes/Core/KWCallSite.h	/^@property (nonatomic, readonly) NSUInteger lineNumber;$/;"	p	interface:KWCallSite
lineNumber	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    NSInteger lineNumber = 0;$/;"	p	interface:KWExample
lineNumber	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    return [KWCallSite callSiteWithFilename:fileName lineNumber:lineNumber];$/;"	p	interface:KWExample
load	Example/Pods/Kiwi/Classes/Config/KWAllTestsSuite.m	/^+ (void)load {$/;"	c	implementation:XCTestSuite
longData	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSData *)longData;$/;"	p	interface:KWValue
longData	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSData *)longData;$/;"	p	interface:KWValue
longData	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSData *)longData;$/;"	p	interface:KWValue
longData	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSData *)longData {$/;"	m	implementation:KWValue
longDescriptionAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)longDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
longDescriptionAtIndex:	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)longDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
longDescriptionAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (NSString *)longDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
longLongData	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSData *)longLongData;$/;"	p	interface:KWValue
longLongData	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSData *)longLongData;$/;"	p	interface:KWValue
longLongData	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSData *)longLongData;$/;"	p	interface:KWValue
longLongData	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSData *)longLongData {$/;"	m	implementation:KWValue
longLongDescriptionAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)longLongDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
longLongDescriptionAtIndex:	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)longLongDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
longLongDescriptionAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (NSString *)longLongDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
longLongValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (long long)longLongValue;$/;"	p	interface:KWValue
longLongValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (long long)longLongValue;$/;"	p	interface:KWValue
longLongValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (long long)longLongValue;$/;"	p	interface:KWValue
longLongValue	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (long long)longLongValue {$/;"	m	implementation:KWValue
longLongValue	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^    long long firstValue = [self.subject longLongValue];$/;"	p	interface:KWBeWithinMatcher
longLongValue	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^    long long secondValue = [self.otherValue longLongValue];$/;"	p	interface:KWBeWithinMatcher
longLongValue	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^    long long theDistance = [self.distance longLongValue];$/;"	p	interface:KWBeWithinMatcher
longValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (long)longValue;$/;"	p	interface:KWValue
longValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (long)longValue;$/;"	p	interface:KWValue
longValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (long)longValue;$/;"	p	interface:KWValue
longValue	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (long)longValue {$/;"	m	implementation:KWValue
lowerEndpoint	Example/Pods/Kiwi/Classes/Matchers/KWBeBetweenMatcher.m	/^    NSComparisonResult lowerResult = [self.subject compare:self.lowerEndpoint];$/;"	p	interface:KWBeBetweenMatcher
lowerEndpoint	Example/Pods/Kiwi/Classes/Matchers/KWBeBetweenMatcher.m	/^@property (nonatomic, strong) id lowerEndpoint;$/;"	m	interface:KWBeBetweenMatcher
main	Example/Clappr/main.m	/^int main(int argc, char * argv[])$/;"	f	interface:
malloc	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    void *bytes = malloc(returnLength);$/;"	p	interface:KWStub
markLastExampleAsLastInContext:	Example/Pods/BuildHeaders/Kiwi/KWExampleSuite.h	/^- (void)markLastExampleAsLastInContext:(KWContextNode *)context;$/;"	m	interface:KWExampleSuite
markLastExampleAsLastInContext:	Example/Pods/Headers/Kiwi/KWExampleSuite.h	/^- (void)markLastExampleAsLastInContext:(KWContextNode *)context;$/;"	m	interface:KWExampleSuite
markLastExampleAsLastInContext:	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.h	/^- (void)markLastExampleAsLastInContext:(KWContextNode *)context;$/;"	m	interface:KWExampleSuite
match:	Example/Pods/BuildHeaders/Kiwi/KWGenericMatcher.h	/^- (void)match:(id<KWGenericMatching>)aMatcher;$/;"	m	interface:KWGenericMatcher
match:	Example/Pods/Headers/Kiwi/KWGenericMatcher.h	/^- (void)match:(id<KWGenericMatching>)aMatcher;$/;"	m	interface:KWGenericMatcher
match:	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatcher.h	/^- (void)match:(id<KWGenericMatching>)aMatcher;$/;"	m	interface:KWGenericMatcher
matchPattern:	Example/Pods/BuildHeaders/Kiwi/KWRegularExpressionPatternMatcher.h	/^- (void)matchPattern:(NSString *)pattern;$/;"	m	interface:KWRegularExpressionPatternMatcher
matchPattern:	Example/Pods/Headers/Kiwi/KWRegularExpressionPatternMatcher.h	/^- (void)matchPattern:(NSString *)pattern;$/;"	m	interface:KWRegularExpressionPatternMatcher
matchPattern:	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.h	/^- (void)matchPattern:(NSString *)pattern;$/;"	m	interface:KWRegularExpressionPatternMatcher
matchPattern:options:	Example/Pods/BuildHeaders/Kiwi/KWRegularExpressionPatternMatcher.h	/^- (void)matchPattern:(NSString *)pattern options:(NSRegularExpressionOptions)options;$/;"	m	interface:KWRegularExpressionPatternMatcher
matchPattern:options:	Example/Pods/Headers/Kiwi/KWRegularExpressionPatternMatcher.h	/^- (void)matchPattern:(NSString *)pattern options:(NSRegularExpressionOptions)options;$/;"	m	interface:KWRegularExpressionPatternMatcher
matchPattern:options:	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.h	/^- (void)matchPattern:(NSString *)pattern options:(NSRegularExpressionOptions)options;$/;"	m	interface:KWRegularExpressionPatternMatcher
matchResult	Example/Pods/BuildHeaders/Kiwi/KWAsyncVerifier.h	/^@property (nonatomic, assign) BOOL matchResult;$/;"	p	interface:KWAsyncVerifier
matchResult	Example/Pods/Headers/Kiwi/KWAsyncVerifier.h	/^@property (nonatomic, assign) BOOL matchResult;$/;"	p	interface:KWAsyncVerifier
matchResult	Example/Pods/Kiwi/Classes/Verifiers/KWAsyncVerifier.h	/^@property (nonatomic, assign) BOOL matchResult;$/;"	p	interface:KWAsyncVerifier
matched	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^    return matched;$/;"	p	interface:KWHaveValueMatcher
matcher	Example/Pods/BuildHeaders/Kiwi/KWAsyncVerifier.h	/^@property (nonatomic, readonly) id<KWMatching> matcher;$/;"	p	interface:KWAsyncVerifier
matcher	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^    KWUserDefinedMatcher *matcher;$/;"	p	interface:KWUserDefinedMatcher
matcher	Example/Pods/Headers/Kiwi/KWAsyncVerifier.h	/^@property (nonatomic, readonly) id<KWMatching> matcher;$/;"	p	interface:KWAsyncVerifier
matcher	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^    KWUserDefinedMatcher *matcher;$/;"	p	interface:KWUserDefinedMatcher
matcher	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatcher.m	/^  return [NSString stringWithFormat:@"expected subject to match %@", self.matcher];$/;"	p	interface:KWGenericMatcher
matcher	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatcher.m	/^@property (nonatomic, strong) id<KWGenericMatching> matcher;$/;"	p	interface:KWGenericMatcher
matcher	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^    KWUserDefinedMatcher *matcher;$/;"	p	interface:KWUserDefinedMatcher
matcher	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^    return matcher;$/;"	p	interface:KWUserDefinedMatcher
matcher	Example/Pods/Kiwi/Classes/Verifiers/KWAsyncVerifier.h	/^@property (nonatomic, readonly) id<KWMatching> matcher;$/;"	p	interface:KWAsyncVerifier
matcher	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^        [self verifyWithMatcher:self.matcher];$/;"	p	interface:KWMatchVerifier
matcher	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^        self.endOfExampleMatcher = self.matcher;$/;"	p	interface:KWMatchVerifier
matcher	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^    [anInvocation invokeWithTarget:self.matcher];$/;"	p	interface:KWMatchVerifier
matcher	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^@property (nonatomic, readwrite, strong) id<KWMatching> matcher;$/;"	p	interface:KWMatchVerifier
matcherBlock	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^@property (nonatomic, copy) KWUserDefinedMatcherBlock matcherBlock;$/;"	p	interface:KWUserDefinedMatcher
matcherBlock	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^@property (nonatomic, copy) KWUserDefinedMatcherBlock matcherBlock;$/;"	p	interface:KWUserDefinedMatcher
matcherBlock	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^@property (nonatomic, copy) KWUserDefinedMatcherBlock matcherBlock;$/;"	p	interface:KWUserDefinedMatcher
matcherBlock	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^        result = matcherBlock(self.subject);$/;"	p	interface:KWUserDefinedMatcher
matcherBlock	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^        result = matcherBlock(self.subject, argument);$/;"	p	interface:KWUserDefinedMatcher
matcherBlock	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^@synthesize matcherBlock;$/;"	p	interface:KWUserDefinedMatcher
matcherBuilder	Example/Pods/BuildHeaders/Kiwi/KWMatchers.h	/^typedef void (^KWMatchersBuildingBlock)(KWUserDefinedMatcherBuilder *matcherBuilder);$/;"	t	interface:
matcherBuilder	Example/Pods/Headers/Kiwi/KWMatchers.h	/^typedef void (^KWMatchersBuildingBlock)(KWUserDefinedMatcherBuilder *matcherBuilder);$/;"	t	interface:
matcherBuilder	Example/Pods/Kiwi/Classes/Core/KWMatchers.h	/^typedef void (^KWMatchersBuildingBlock)(KWUserDefinedMatcherBuilder *matcherBuilder);$/;"	t	interface:
matcherClass	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^            [self registerMatcherClass:matcherClass];$/;"	p	interface:KWMatcherFactory
matcherClass	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^            return matcherClass;$/;"	p	interface:KWMatcherFactory
matcherClassChain	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^            self.matcherClassChains[verificationSelectorString] = matcherClassChain;$/;"	p	interface:KWMatcherFactory
matcherClassChain	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^    Class matcherClass = matcherClassChain[0];$/;"	p	interface:KWMatcherFactory
matcherClassChains	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^@property (nonatomic, strong) NSMutableDictionary *matcherClassChains;$/;"	p	interface:KWMatcherFactory
matcherFactory	Example/Pods/BuildHeaders/Kiwi/KWMatchVerifier.h	/^@property (nonatomic, readonly) KWMatcherFactory *matcherFactory;$/;"	p	protocol:KWMatching
matcherFactory	Example/Pods/Headers/Kiwi/KWMatchVerifier.h	/^@property (nonatomic, readonly) KWMatcherFactory *matcherFactory;$/;"	p	protocol:KWMatching
matcherFactory	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^@property (nonatomic, readonly) KWMatcherFactory *matcherFactory;$/;"	p	interface:KWExample
matcherFactory	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.h	/^@property (nonatomic, readonly) KWMatcherFactory *matcherFactory;$/;"	p	protocol:KWMatching
matcherForSelector:subject:	Example/Pods/BuildHeaders/Kiwi/KWMatchers.h	/^- (KWUserDefinedMatcher *)matcherForSelector:(SEL)selector subject:(id)subject;$/;"	m	interface:KWMatchers
matcherForSelector:subject:	Example/Pods/Headers/Kiwi/KWMatchers.h	/^- (KWUserDefinedMatcher *)matcherForSelector:(SEL)selector subject:(id)subject;$/;"	m	interface:KWMatchers
matcherForSelector:subject:	Example/Pods/Kiwi/Classes/Core/KWMatchers.h	/^- (KWUserDefinedMatcher *)matcherForSelector:(SEL)selector subject:(id)subject;$/;"	m	interface:KWMatchers
matcherForSelector:subject:	Example/Pods/Kiwi/Classes/Core/KWMatchers.m	/^- (KWUserDefinedMatcher *)matcherForSelector:(SEL)selector subject:(id)subject {$/;"	m	implementation:KWMatchers
matcherFromInvocation:subject:	Example/Pods/BuildHeaders/Kiwi/KWMatcherFactory.h	/^- (KWMatcher *)matcherFromInvocation:(NSInvocation *)anInvocation subject:(id)subject;$/;"	m	interface:KWMatcherFactory
matcherFromInvocation:subject:	Example/Pods/Headers/Kiwi/KWMatcherFactory.h	/^- (KWMatcher *)matcherFromInvocation:(NSInvocation *)anInvocation subject:(id)subject;$/;"	m	interface:KWMatcherFactory
matcherFromInvocation:subject:	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.h	/^- (KWMatcher *)matcherFromInvocation:(NSInvocation *)anInvocation subject:(id)subject;$/;"	m	interface:KWMatcherFactory
matcherStrings	Example/Pods/BuildHeaders/Kiwi/KWMatcher.h	/^+ (NSArray *)matcherStrings;$/;"	m	interface:KWMatcher
matcherStrings	Example/Pods/BuildHeaders/Kiwi/KWMatching.h	/^+ (NSArray *)matcherStrings;$/;"	m	protocol:KWMatching
matcherStrings	Example/Pods/Headers/Kiwi/KWMatcher.h	/^+ (NSArray *)matcherStrings;$/;"	m	interface:KWMatcher
matcherStrings	Example/Pods/Headers/Kiwi/KWMatching.h	/^+ (NSArray *)matcherStrings;$/;"	m	protocol:KWMatching
matcherStrings	Example/Pods/Kiwi/Classes/Core/KWMatcher.h	/^+ (NSArray *)matcherStrings;$/;"	m	interface:KWMatcher
matcherStrings	Example/Pods/Kiwi/Classes/Core/KWMatcher.m	/^+ (NSArray *)matcherStrings {$/;"	m	implementation:KWMatcher
matcherStrings	Example/Pods/Kiwi/Classes/Core/KWMatching.h	/^+ (NSArray *)matcherStrings;$/;"	m	protocol:KWMatching
matcherStrings	Example/Pods/Kiwi/Classes/Matchers/KWBeEmptyMatcher.m	/^+ (NSArray *)matcherStrings {$/;"	m	implementation:KWBeEmptyMatcher
matcherStrings	Example/Pods/Kiwi/Classes/Matchers/KWBeIdenticalToMatcher.m	/^+ (NSArray *)matcherStrings {$/;"	m	implementation:KWBeIdenticalToMatcher
matcherStrings	Example/Pods/Kiwi/Classes/Matchers/KWBeSubclassOfClassMatcher.m	/^+ (NSArray *)matcherStrings {$/;"	m	implementation:KWBeSubclassOfClassMatcher
matcherStrings	Example/Pods/Kiwi/Classes/Matchers/KWBeZeroMatcher.m	/^+ (NSArray *)matcherStrings {$/;"	m	implementation:KWBeZeroMatcher
matcherStrings	Example/Pods/Kiwi/Classes/Matchers/KWEqualMatcher.m	/^+ (NSArray *)matcherStrings {$/;"	m	implementation:KWEqualMatcher
matcherStrings	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^+ (NSArray *)matcherStrings {$/;"	m	implementation:KWReceiveMatcher
matcherStrings	Example/Pods/Kiwi/Classes/Matchers/KWRespondToSelectorMatcher.m	/^+ (NSArray *)matcherStrings {$/;"	m	implementation:KWRespondToSelectorMatcher
matcherWithPrefix:	Example/Pods/BuildHeaders/Kiwi/KWStringPrefixMatcher.h	/^+ (id)matcherWithPrefix:(NSString *)aPrefix;$/;"	c	interface:KWStringPrefixMatcher
matcherWithPrefix:	Example/Pods/Headers/Kiwi/KWStringPrefixMatcher.h	/^+ (id)matcherWithPrefix:(NSString *)aPrefix;$/;"	c	interface:KWStringPrefixMatcher
matcherWithPrefix:	Example/Pods/Kiwi/Classes/Matchers/KWStringPrefixMatcher.h	/^+ (id)matcherWithPrefix:(NSString *)aPrefix;$/;"	c	interface:KWStringPrefixMatcher
matcherWithSubject:	Example/Pods/BuildHeaders/Kiwi/KWMatcher.h	/^+ (id)matcherWithSubject:(id)anObject;$/;"	c	interface:KWMatcher
matcherWithSubject:	Example/Pods/Headers/Kiwi/KWMatcher.h	/^+ (id)matcherWithSubject:(id)anObject;$/;"	c	interface:KWMatcher
matcherWithSubject:	Example/Pods/Kiwi/Classes/Core/KWMatcher.h	/^+ (id)matcherWithSubject:(id)anObject;$/;"	c	interface:KWMatcher
matcherWithSubject:	Example/Pods/Kiwi/Classes/Core/KWMatcher.m	/^+ (id)matcherWithSubject:(id)anObject {$/;"	c	implementation:KWMatcher
matcherWithSubstring:	Example/Pods/BuildHeaders/Kiwi/KWStringContainsMatcher.h	/^+ (id)matcherWithSubstring:(NSString *)aSubstring DEPRECATED_ATTRIBUTE;$/;"	c	interface:KWStringContainsMatcher
matcherWithSubstring:	Example/Pods/Headers/Kiwi/KWStringContainsMatcher.h	/^+ (id)matcherWithSubstring:(NSString *)aSubstring DEPRECATED_ATTRIBUTE;$/;"	c	interface:KWStringContainsMatcher
matcherWithSubstring:	Example/Pods/Kiwi/Classes/Matchers/KWStringContainsMatcher.h	/^+ (id)matcherWithSubstring:(NSString *)aSubstring DEPRECATED_ATTRIBUTE;$/;"	c	interface:KWStringContainsMatcher
matchers	Example/Pods/BuildHeaders/Kiwi/KWMatchers.h	/^+ (id)matchers;$/;"	c	interface:KWMatchers
matchers	Example/Pods/Headers/Kiwi/KWMatchers.h	/^+ (id)matchers;$/;"	c	interface:KWMatchers
matchers	Example/Pods/Kiwi/Classes/Core/KWMatchers.h	/^+ (id)matchers;$/;"	c	interface:KWMatchers
matchers	Example/Pods/Kiwi/Classes/Core/KWMatchers.m	/^+ (id)matchers {$/;"	c	implementation:KWMatchers
matches:	Example/Pods/BuildHeaders/Kiwi/KWGenericMatcher.h	/^- (BOOL)matches:(id)object;$/;"	m	protocol:KWGenericMatching
matches:	Example/Pods/Headers/Kiwi/KWGenericMatcher.h	/^- (BOOL)matches:(id)object;$/;"	m	protocol:KWGenericMatching
matches:	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatcher.h	/^- (BOOL)matches:(id)object;$/;"	m	protocol:KWGenericMatching
matchesInvocation:	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.m	/^- (BOOL)matchesInvocation:(NSInvocation *)anInvocation {$/;"	m	implementation:KWMessagePattern
memset	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    memset(bytes, 0, returnLength);$/;"	p	interface:KWStub
message	Example/Pods/BuildHeaders/Kiwi/KWFailure.h	/^@property (nonatomic, readonly) NSString *message;$/;"	m	interface:KWFailure
message	Example/Pods/Headers/Kiwi/KWFailure.h	/^@property (nonatomic, readonly) NSString *message;$/;"	m	interface:KWFailure
message	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^                                         aFailure.message];$/;"	p	interface:KWExample
message	Example/Pods/Kiwi/Classes/Core/KWFailure.h	/^@property (nonatomic, readonly) NSString *message;$/;"	m	interface:KWFailure
message	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^    return message;$/;"	p	interface:KWNotificationMatcher
message	Example/Pods/Kiwi/Classes/Verifiers/KWExistVerifier.m	/^        KWFailure *failure = [KWFailure failureWithCallSite:self.callSite message:@"expected subject not to be nil"];$/;"	p	interface:KWExistVerifier
messageArgumentDataAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+KiwiAdditions.h	/^- (NSData *)messageArgumentDataAtIndex:(NSUInteger)anIndex;$/;"	m	interface:NSInvocation
messageArgumentDataAtIndex:	Example/Pods/Headers/Kiwi/NSInvocation+KiwiAdditions.h	/^- (NSData *)messageArgumentDataAtIndex:(NSUInteger)anIndex;$/;"	m	interface:NSInvocation
messageArgumentDataAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+KiwiAdditions.h	/^- (NSData *)messageArgumentDataAtIndex:(NSUInteger)anIndex;$/;"	m	interface:NSInvocation
messageArgumentDataAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+KiwiAdditions.m	/^- (NSData *)messageArgumentDataAtIndex:(NSUInteger)anIndex {$/;"	m	implementation:NSInvocation
messageArgumentTypeAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSMethodSignature+KiwiAdditions.h	/^- (const char *)messageArgumentTypeAtIndex:(NSUInteger)anIndex;$/;"	m	interface:NSMethodSignature
messageArgumentTypeAtIndex:	Example/Pods/Headers/Kiwi/NSMethodSignature+KiwiAdditions.h	/^- (const char *)messageArgumentTypeAtIndex:(NSUInteger)anIndex;$/;"	m	interface:NSMethodSignature
messageArgumentTypeAtIndex:	Example/Pods/Kiwi/Classes/Core/NSMethodSignature+KiwiAdditions.h	/^- (const char *)messageArgumentTypeAtIndex:(NSUInteger)anIndex;$/;"	m	interface:NSMethodSignature
messageArgumentTypeAtIndex:	Example/Pods/Kiwi/Classes/Core/NSMethodSignature+KiwiAdditions.m	/^- (const char *)messageArgumentTypeAtIndex:(NSUInteger)anIndex {$/;"	m	implementation:NSMethodSignature
messagePattern	Example/Pods/BuildHeaders/Kiwi/KWMessageTracker.h	/^@property (nonatomic, readonly) KWMessagePattern *messagePattern;$/;"	p	interface:KWMessageTracker
messagePattern	Example/Pods/BuildHeaders/Kiwi/KWStub.h	/^@property (nonatomic, readonly) KWMessagePattern *messagePattern;$/;"	m	interface:KWStub
messagePattern	Example/Pods/Headers/Kiwi/KWMessageTracker.h	/^@property (nonatomic, readonly) KWMessagePattern *messagePattern;$/;"	p	interface:KWMessageTracker
messagePattern	Example/Pods/Headers/Kiwi/KWStub.h	/^@property (nonatomic, readonly) KWMessagePattern *messagePattern;$/;"	m	interface:KWStub
messagePattern	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.h	/^@property (nonatomic, readonly) KWMessagePattern *messagePattern;$/;"	p	interface:KWMessageTracker
messagePattern	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^            NSArray *spies = [self.messageSpies objectForKey:messagePattern];$/;"	p	interface:KWMock
messagePattern	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        [self expectMessagePattern:messagePattern];$/;"	p	interface:KWMock
messagePattern	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    KWStub *stub = [self currentStubWithMessagePattern:messagePattern];$/;"	p	interface:KWMock
messagePattern	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    [self expectMessagePattern:messagePattern];$/;"	p	interface:KWMock
messagePattern	Example/Pods/Kiwi/Classes/Stubbing/KWStub.h	/^@property (nonatomic, readonly) KWMessagePattern *messagePattern;$/;"	m	interface:KWStub
messagePattern	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^@synthesize messagePattern;$/;"	p	interface:KWStub
messagePatternFromInvocation:	Example/Pods/BuildHeaders/Kiwi/KWMessagePattern.h	/^+ (id)messagePatternFromInvocation:(NSInvocation *)anInvocation;$/;"	c	interface:KWMessagePattern
messagePatternFromInvocation:	Example/Pods/Headers/Kiwi/KWMessagePattern.h	/^+ (id)messagePatternFromInvocation:(NSInvocation *)anInvocation;$/;"	c	interface:KWMessagePattern
messagePatternFromInvocation:	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.h	/^+ (id)messagePatternFromInvocation:(NSInvocation *)anInvocation;$/;"	c	interface:KWMessagePattern
messagePatternFromInvocation:	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.m	/^+ (id)messagePatternFromInvocation:(NSInvocation *)anInvocation {$/;"	c	implementation:KWMessagePattern
messagePatternWithSelector:	Example/Pods/BuildHeaders/Kiwi/KWMessagePattern.h	/^+ (id)messagePatternWithSelector:(SEL)aSelector;$/;"	c	interface:KWMessagePattern
messagePatternWithSelector:	Example/Pods/Headers/Kiwi/KWMessagePattern.h	/^+ (id)messagePatternWithSelector:(SEL)aSelector;$/;"	c	interface:KWMessagePattern
messagePatternWithSelector:	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.h	/^+ (id)messagePatternWithSelector:(SEL)aSelector;$/;"	c	interface:KWMessagePattern
messagePatternWithSelector:	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.m	/^+ (id)messagePatternWithSelector:(SEL)aSelector {$/;"	c	implementation:KWMessagePattern
messagePatternWithSelector:argumentFilters:	Example/Pods/BuildHeaders/Kiwi/KWMessagePattern.h	/^+ (id)messagePatternWithSelector:(SEL)aSelector argumentFilters:(NSArray *)anArray;$/;"	c	interface:KWMessagePattern
messagePatternWithSelector:argumentFilters:	Example/Pods/Headers/Kiwi/KWMessagePattern.h	/^+ (id)messagePatternWithSelector:(SEL)aSelector argumentFilters:(NSArray *)anArray;$/;"	c	interface:KWMessagePattern
messagePatternWithSelector:argumentFilters:	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.h	/^+ (id)messagePatternWithSelector:(SEL)aSelector argumentFilters:(NSArray *)anArray;$/;"	c	interface:KWMessagePattern
messagePatternWithSelector:argumentFilters:	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.m	/^+ (id)messagePatternWithSelector:(SEL)aSelector argumentFilters:(NSArray *)anArray {$/;"	c	implementation:KWMessagePattern
messagePatternWithSelector:firstArgumentFilter:argumentList:	Example/Pods/BuildHeaders/Kiwi/KWMessagePattern.h	/^+ (id)messagePatternWithSelector:(SEL)aSelector firstArgumentFilter:(id)firstArgumentFilter argumentList:(va_list)argumentList;$/;"	c	interface:KWMessagePattern
messagePatternWithSelector:firstArgumentFilter:argumentList:	Example/Pods/Headers/Kiwi/KWMessagePattern.h	/^+ (id)messagePatternWithSelector:(SEL)aSelector firstArgumentFilter:(id)firstArgumentFilter argumentList:(va_list)argumentList;$/;"	c	interface:KWMessagePattern
messagePatternWithSelector:firstArgumentFilter:argumentList:	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.h	/^+ (id)messagePatternWithSelector:(SEL)aSelector firstArgumentFilter:(id)firstArgumentFilter argumentList:(va_list)argumentList;$/;"	c	interface:KWMessagePattern
messagePatternWithSelector:firstArgumentFilter:argumentList:	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.m	/^+ (id)messagePatternWithSelector:(SEL)aSelector firstArgumentFilter:(id)firstArgumentFilter argumentList:(va_list)argumentList {$/;"	c	implementation:KWMessagePattern
messageSpies	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^@property (nonatomic, readonly) NSMapTable *messageSpies;$/;"	p	interface:KWMock
messageTracker	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^@property (nonatomic, readwrite, strong) KWMessageTracker *messageTracker;$/;"	m	interface:KWReceiveMatcher
messageTrackerWithSubject:messagePattern:countType:count:	Example/Pods/BuildHeaders/Kiwi/KWMessageTracker.h	/^+ (id)messageTrackerWithSubject:(id)anObject messagePattern:(KWMessagePattern *)aMessagePattern countType:(KWCountType)aCountType count:(NSUInteger)aCount;$/;"	c	interface:KWMessageTracker
messageTrackerWithSubject:messagePattern:countType:count:	Example/Pods/Headers/Kiwi/KWMessageTracker.h	/^+ (id)messageTrackerWithSubject:(id)anObject messagePattern:(KWMessagePattern *)aMessagePattern countType:(KWCountType)aCountType count:(NSUInteger)aCount;$/;"	c	interface:KWMessageTracker
messageTrackerWithSubject:messagePattern:countType:count:	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.h	/^+ (id)messageTrackerWithSubject:(id)anObject messagePattern:(KWMessagePattern *)aMessagePattern countType:(KWCountType)aCountType count:(NSUInteger)aCount;$/;"	c	interface:KWMessageTracker
messageTrackerWithSubject:messagePattern:countType:count:	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.m	/^+ (id)messageTrackerWithSubject:(id)anObject messagePattern:(KWMessagePattern *)aMessagePattern countType:(KWCountType)aCountType count:(NSUInteger)aCount {$/;"	c	implementation:KWMessageTracker
methodReturnLength	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    NSUInteger returnLength = [[anInvocation methodSignature] methodReturnLength];$/;"	p	interface:KWStub
methodReturnType	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    const char *returnType = [[anInvocation methodSignature] methodReturnType];$/;"	p	interface:KWStub
methodSignature	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.m	/^        NSMethodSignature *signature = [anInvocation methodSignature];$/;"	p	interface:KWCaptureSpy
methodSignature	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^        NSInvocation *invocation = [NSInvocation invocationWithMethodSignature:methodSignature];$/;"	p	interface:KWExampleSuite
methodSignature	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        return methodSignature;$/;"	p	interface:KWMock
methodSignatureForMatcherSelector:	Example/Pods/BuildHeaders/Kiwi/KWMatcherFactory.h	/^- (NSMethodSignature *)methodSignatureForMatcherSelector:(SEL)aSelector;$/;"	m	interface:KWMatcherFactory
methodSignatureForMatcherSelector:	Example/Pods/Headers/Kiwi/KWMatcherFactory.h	/^- (NSMethodSignature *)methodSignatureForMatcherSelector:(SEL)aSelector;$/;"	m	interface:KWMatcherFactory
methodSignatureForMatcherSelector:	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.h	/^- (NSMethodSignature *)methodSignatureForMatcherSelector:(SEL)aSelector;$/;"	m	interface:KWMatcherFactory
methodSignatureForSelector	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^            return [self methodSignatureForSelector:@selector(matcherMethodWithArgument:)];$/;"	p	interface:KWUserDefinedMatcher
methodSignatureForSelector	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^            return [self methodSignatureForSelector:@selector(matcherMethodWithoutArguments)];$/;"	p	interface:KWUserDefinedMatcher
methodSignatureForSelector:	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.m	/^- (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector {$/;"	m	implementation:KWInvocationCapturer
mock	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiMockAdditions.h	/^+ (id)mock;$/;"	m	protocol:KiwiMockAdditions
mock	Example/Pods/Headers/Kiwi/NSObject+KiwiMockAdditions.h	/^+ (id)mock;$/;"	m	protocol:KiwiMockAdditions
mock	Example/Pods/Kiwi/Classes/Mocking/NSObject+KiwiMockAdditions.h	/^+ (id)mock;$/;"	m	protocol:KiwiMockAdditions
mock	Example/Pods/Kiwi/Classes/Mocking/NSObject+KiwiMockAdditions.m	/^+ (id)mock {$/;"	m	implementation:NSObject
mockForClass:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^+ (id)mockForClass:(Class)aClass;$/;"	c	protocol:KWMessageSpying
mockForClass:	Example/Pods/Headers/Kiwi/KWMock.h	/^+ (id)mockForClass:(Class)aClass;$/;"	c	protocol:KWMessageSpying
mockForClass:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^+ (id)mockForClass:(Class)aClass;$/;"	c	protocol:KWMessageSpying
mockForProtocol:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^+ (id)mockForProtocol:(Protocol *)aProtocol;$/;"	c	protocol:KWMessageSpying
mockForProtocol:	Example/Pods/Headers/Kiwi/KWMock.h	/^+ (id)mockForProtocol:(Protocol *)aProtocol;$/;"	c	protocol:KWMessageSpying
mockForProtocol:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^+ (id)mockForProtocol:(Protocol *)aProtocol;$/;"	c	protocol:KWMessageSpying
mockName	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^@property (nonatomic, copy, readonly) NSString *mockName;$/;"	p	protocol:KWMessageSpying
mockName	Example/Pods/Headers/Kiwi/KWMock.h	/^@property (nonatomic, copy, readonly) NSString *mockName;$/;"	p	protocol:KWMessageSpying
mockName	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^@property (nonatomic, copy, readonly) NSString *mockName;$/;"	p	protocol:KWMessageSpying
mockName	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        return [NSString stringWithFormat:@"mock \\"%@\\"", self.mockName];$/;"	p	interface:KWMock
mockWithName:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiMockAdditions.h	/^+ (id)mockWithName:(NSString *)aName;$/;"	c	protocol:KiwiMockAdditions
mockWithName:	Example/Pods/Headers/Kiwi/NSObject+KiwiMockAdditions.h	/^+ (id)mockWithName:(NSString *)aName;$/;"	c	protocol:KiwiMockAdditions
mockWithName:	Example/Pods/Kiwi/Classes/Mocking/NSObject+KiwiMockAdditions.h	/^+ (id)mockWithName:(NSString *)aName;$/;"	c	protocol:KiwiMockAdditions
mockWithName:	Example/Pods/Kiwi/Classes/Mocking/NSObject+KiwiMockAdditions.m	/^+ (id)mockWithName:(NSString *)aName {$/;"	c	implementation:NSObject
mockWithName:forClass:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^+ (id)mockWithName:(NSString *)aName forClass:(Class)aClass;$/;"	c	protocol:KWMessageSpying
mockWithName:forClass:	Example/Pods/Headers/Kiwi/KWMock.h	/^+ (id)mockWithName:(NSString *)aName forClass:(Class)aClass;$/;"	c	protocol:KWMessageSpying
mockWithName:forClass:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^+ (id)mockWithName:(NSString *)aName forClass:(Class)aClass;$/;"	c	protocol:KWMessageSpying
mockWithName:forProtocol:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^+ (id)mockWithName:(NSString *)aName forProtocol:(Protocol *)aProtocol;$/;"	c	protocol:KWMessageSpying
mockWithName:forProtocol:	Example/Pods/Headers/Kiwi/KWMock.h	/^+ (id)mockWithName:(NSString *)aName forProtocol:(Protocol *)aProtocol;$/;"	c	protocol:KWMessageSpying
mockWithName:forProtocol:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^+ (id)mockWithName:(NSString *)aName forProtocol:(Protocol *)aProtocol;$/;"	c	protocol:KWMessageSpying
mockedClass	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^@property (nonatomic, assign, readonly) Class mockedClass;$/;"	p	protocol:KWMessageSpying
mockedClass	Example/Pods/Headers/Kiwi/KWMock.h	/^@property (nonatomic, assign, readonly) Class mockedClass;$/;"	p	protocol:KWMessageSpying
mockedClass	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^@property (nonatomic, assign, readonly) Class mockedClass;$/;"	p	protocol:KWMessageSpying
mockedClass	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    Class currentClass = self.mockedClass;$/;"	p	interface:KWMock
mockedObject	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^@property (nonatomic, strong, readonly) id mockedObject;$/;"	p	protocol:KWMessageSpying
mockedObject	Example/Pods/Headers/Kiwi/KWMock.h	/^@property (nonatomic, strong, readonly) id mockedObject;$/;"	p	protocol:KWMessageSpying
mockedObject	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^@property (nonatomic, strong, readonly) id mockedObject;$/;"	p	protocol:KWMessageSpying
mockedObject	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        [anInvocation invokeWithTarget:self.mockedObject];$/;"	p	interface:KWMock
mockedProtocol	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^@property (nonatomic, assign, readonly) Protocol *mockedProtocol;$/;"	p	protocol:KWMessageSpying
mockedProtocol	Example/Pods/Headers/Kiwi/KWMock.h	/^@property (nonatomic, assign, readonly) Protocol *mockedProtocol;$/;"	p	protocol:KWMessageSpying
mockedProtocol	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^@property (nonatomic, assign, readonly) Protocol *mockedProtocol;$/;"	p	protocol:KWMessageSpying
mockedProtocol	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    [protocolQueue addObject:self.mockedProtocol];$/;"	p	interface:KWMock
mockedProtocolTransitiveClosureSet	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    NSSet *protocols = [self mockedProtocolTransitiveClosureSet];$/;"	p	interface:KWMock
modeString	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.m	/^- (NSString *)modeString {$/;"	m	implementation:KWMessageTracker
mutableCopy	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        return [super mutableCopy];$/;"	p	interface:KWMock
name	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^    name = @"";$/;"	p	interface:KWSpec
name	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^    return [NSString stringWithFormat:@"-[%@ %@]", NSStringFromClass([self class]), name];$/;"	p	interface:KWSpec
name	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^        namePhrase = [anException name];$/;"	p	interface:KWBlockRaiseMatcher
namePhrase	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^        namePhrase = @"exception";$/;"	p	interface:KWBlockRaiseMatcher
namePhrase	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^        return namePhrase;$/;"	p	interface:KWBlockRaiseMatcher
namespacePrefix	Example/Pods/BuildHeaders/Kiwi/KWRegisterMatchersNode.h	/^@property (nonatomic, readonly) NSString *namespacePrefix;$/;"	m	interface:KWRegisterMatchersNode
namespacePrefix	Example/Pods/Headers/Kiwi/KWRegisterMatchersNode.h	/^@property (nonatomic, readonly) NSString *namespacePrefix;$/;"	m	interface:KWRegisterMatchersNode
namespacePrefix	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    [self.matcherFactory registerMatcherClassesWithNamespacePrefix:aNode.namespacePrefix];$/;"	p	interface:KWExample
namespacePrefix	Example/Pods/Kiwi/Classes/Nodes/KWRegisterMatchersNode.h	/^@property (nonatomic, readonly) NSString *namespacePrefix;$/;"	m	interface:KWRegisterMatchersNode
new	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^            defaultConfiguration = [configClass new];$/;"	p	interface:KWSuiteConfigurationBase
newValue	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^			value = newValue;$/;"	p	interface:KWStub
next	Example/Pods/BuildHeaders/Kiwi/KWLetNode.h	/^@property (nonatomic, readonly, strong) KWLetNode *next;$/;"	p	interface:KWLetNode
next	Example/Pods/Headers/Kiwi/KWLetNode.h	/^@property (nonatomic, readonly, strong) KWLetNode *next;$/;"	p	interface:KWLetNode
next	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.h	/^@property (nonatomic, readonly, strong) KWLetNode *next;$/;"	p	interface:KWLetNode
next	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^@property (nonatomic, strong) KWLetNode *next;$/;"	p	interface:KWLetNode
nil	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^    __block __typeof__((__VA_ARGS__)()) var = nil; \\$/;"	p	interface:KWExample
nil	Example/Pods/Headers/Kiwi/KWExample.h	/^    __block __typeof__((__VA_ARGS__)()) var = nil; \\$/;"	p	interface:KWExample
nil	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.m	/^		return nil;$/;"	p	interface:KWCaptureSpy
nil	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.m	/^        @throw [NSException exceptionWithName:NSInternalInconsistencyException reason:@"Argument requested has yet to be captured." userInfo:nil];$/;"	p	interface:KWCaptureSpy
nil	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^    __block __typeof__((__VA_ARGS__)()) var = nil; \\$/;"	p	interface:KWExample
nil	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    NSString *fileName = nil;$/;"	p	interface:KWExample
nil	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    return  shouldLookup ? callSiteWithAddress(address) : nil;$/;"	p	interface:KWExample
nil	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    KWContextNode *rootNode = [KWContextNode contextNodeWithCallSite:nil parentContext:nil description:nil];$/;"	p	interface:KWExampleSuiteBuilder
nil	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    return self.focusedCallSite != nil;$/;"	p	interface:KWExampleSuiteBuilder
nil	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    static KWExampleSuiteBuilder *sharedExampleSuiteBuilder = nil;$/;"	p	interface:KWExampleSuiteBuilder
nil	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^        return nil;$/;"	p	interface:KWMatcherFactory
nil	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^    return nil;$/;"	p	interface:KWMatcherFactory
nil	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^    static NSMutableArray *matcherClasses = nil;$/;"	p	interface:KWMatcherFactory
nil	Example/Pods/Kiwi/Classes/Core/KWMatchers.m	/^static id sharedMatchers = nil;$/;"	m	implementation:KWMatchers
nil	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^        return nil;$/;"	p	interface:KWSpec
nil	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^        self.invocation.kw_example = nil;$/;"	p	interface:KWSpec
nil	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^    NSError *error = nil;$/;"	p	interface:KWSpec
nil	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^+ (NSString *)file { return nil; }$/;"	p	interface:KWSpec
nil	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^    NSString *namePhrase = nil;$/;"	p	interface:KWBlockRaiseMatcher
nil	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^    [self raiseWithName:aName reason:nil];$/;"	p	interface:KWBlockRaiseMatcher
nil	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^    [self raiseWithName:nil reason:nil];$/;"	p	interface:KWBlockRaiseMatcher
nil	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^    self.exception = [NSException exceptionWithName:aName reason:aReason userInfo:nil];$/;"	p	interface:KWBlockRaiseMatcher
nil	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^        __unsafe_unretained id object = nil;$/;"	p	interface:KWHaveMatcher
nil	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^        return nil;$/;"	p	interface:KWHaveMatcher
nil	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    return nil;$/;"	p	interface:KWHaveMatcher
nil	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^    NSString *keyDescription = nil;$/;"	p	interface:KWHaveValueMatcher
nil	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^    NSString *valueDescription = nil;$/;"	p	interface:KWHaveValueMatcher
nil	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^    id value = nil;$/;"	p	interface:KWHaveValueMatcher
nil	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^    self.expectedValue = nil;$/;"	p	interface:KWHaveValueMatcher
nil	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^    return nil;$/;"	p	interface:KWInequalityMatcher
nil	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^        currentExample.unresolvedVerifier = nil;$/;"	p	interface:KWNilMatcher
nil	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.m	/^    NSError *error = nil;$/;"	p	interface:KWRegularExpressionPatternMatcher
nil	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^    return [self builderForSelector:nil];$/;"	p	interface:KWUserDefinedMatcher
nil	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^            __unsafe_unretained id result = nil;$/;"	p	interface:KWMock
nil	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        __unsafe_unretained NSString *result = nil;$/;"	p	interface:KWMock
nil	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        __unsafe_unretained id result = nil;$/;"	p	interface:KWMock
nil	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        return nil;$/;"	p	interface:KWMock
nil	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    [self stubMessagePattern:messagePattern andReturn:nil];$/;"	p	interface:KWMock
nil	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [self initAsNullMock:NO withName:aName forClass:aClass protocol:nil];$/;"	p	interface:KWMock
nil	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [self initAsNullMock:NO withName:nil forClass:aClass protocol:nil];$/;"	p	interface:KWMock
nil	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [self initAsNullMock:NO withName:nil forClass:nil protocol:nil];$/;"	p	interface:KWMock
nil	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [self initAsNullMock:YES withName:aName forClass:aClass protocol:nil];$/;"	p	interface:KWMock
nil	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [self initAsNullMock:YES withName:nil forClass:aClass protocol:nil];$/;"	p	interface:KWMock
nil	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return nil;$/;"	p	interface:KWMock
nil	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    self = [self initAsNullMock:YES withName:aName forClass:[object class] protocol:nil];$/;"	p	interface:KWMock
nil	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    id result = nil;$/;"	p	interface:KWLetNode
nil	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    return [NSString stringWithFormat:@"<%@ \\"%@\\">", [[self class] description], self.block ? self.block() : nil];$/;"	p	interface:KWLetNode
nil	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    self.parent = nil;$/;"	p	interface:KWLetNode
nil	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    self.parent.child = nil;$/;"	p	interface:KWLetNode
nil	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    self.previous = nil;$/;"	p	interface:KWLetNode
nil	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    self.previous.next = nil;$/;"	p	interface:KWLetNode
nil	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    NSData *data = nil;$/;"	p	interface:KWStub
nil	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    return [self initWithMessagePattern:aMessagePattern value:nil];$/;"	p	interface:KWStub
nil	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    return [self stubWithMessagePattern:aMessagePattern value:nil];$/;"	p	interface:KWStub
nil	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^        self.example.unresolvedVerifier = nil;$/;"	p	interface:KWMatchVerifier
nil	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^        self.matcher = nil;$/;"	p	interface:KWMatchVerifier
nil	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^    NSString *failureMessage = nil;$/;"	p	interface:KWMatchVerifier
node	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^- (id)initWithExampleNode:(id<KWExampleNode>)node;$/;"	p	interface:KWExample
node	Example/Pods/Headers/Kiwi/KWExample.h	/^- (id)initWithExampleNode:(id<KWExampleNode>)node;$/;"	p	interface:KWExample
node	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^- (id)initWithExampleNode:(id<KWExampleNode>)node;$/;"	p	interface:KWExample
node	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^        _exampleNode = node;$/;"	p	interface:KWExample
node	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    [contextNode addContextNode:node];$/;"	p	interface:KWExampleSuiteBuilder
node	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    [self.contextNodeStack addObject:node];$/;"	p	interface:KWExampleSuiteBuilder
node	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^        _parentContext = node;$/;"	p	interface:KWContextNode
nodeDescription	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^        NSMutableString *description = [NSMutableString stringWithFormat:@",\\n\\t\\t%@", [self nodeDescription]];$/;"	p	interface:KWLetNode
nodeDescription	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^        NSMutableString *description = [NSMutableString stringWithFormat:@"\\n\\t%@:\\n\\t\\t%@", self.symbolName, [self nodeDescription]];$/;"	p	interface:KWLetNode
nodeUrl	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^- (void)focusWithURI:(NSString *)nodeUrl;$/;"	p	interface:KWExampleSuiteBuilder
nodeUrl	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^- (void)focusWithURI:(NSString *)nodeUrl;$/;"	p	interface:KWExampleSuiteBuilder
nodeUrl	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^- (void)focusWithURI:(NSString *)nodeUrl;$/;"	p	interface:KWExampleSuiteBuilder
nodes	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^@property (nonatomic, readonly) NSArray *nodes;$/;"	p	interface:KWContextNode
nodes	Example/Pods/Headers/Kiwi/KWContextNode.h	/^@property (nonatomic, readonly) NSArray *nodes;$/;"	p	interface:KWContextNode
nodes	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^@property (nonatomic, readonly) NSArray *nodes;$/;"	p	interface:KWContextNode
note	Example/Pods/BuildHeaders/Kiwi/KWNotificationMatcher.h	/^typedef void (^PostedNotificationBlock)(NSNotification* note);$/;"	t	interface:
note	Example/Pods/Headers/Kiwi/KWNotificationMatcher.h	/^typedef void (^PostedNotificationBlock)(NSNotification* note);$/;"	t	interface:
note	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.h	/^typedef void (^PostedNotificationBlock)(NSNotification* note);$/;"	t	interface:
note	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^                                        self.notification = note;$/;"	p	interface:KWNotificationMatcher
notification	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^            self.notification];$/;"	p	interface:KWNotificationMatcher
notification	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^@property (nonatomic, strong) NSNotification *notification;$/;"	p	interface:KWNotificationMatcher
null	Example/Pods/BuildHeaders/Kiwi/KWNull.h	/^+ (id)null;$/;"	m	interface:KWNull
null	Example/Pods/Headers/Kiwi/KWNull.h	/^+ (id)null;$/;"	m	interface:KWNull
null	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.m	/^					_argument = [KWNull null];$/;"	p	interface:KWCaptureSpy
null	Example/Pods/Kiwi/Classes/Core/KWNull.h	/^+ (id)null;$/;"	m	interface:KWNull
null	Example/Pods/Kiwi/Classes/Core/KWNull.m	/^+ (id)null {$/;"	m	implementation:KWNull
null	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^                arg = [NSNull null];$/;"	p	interface:KWStub
nullMock	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiMockAdditions.h	/^+ (id)nullMock;$/;"	c	protocol:KiwiMockAdditions
nullMock	Example/Pods/Headers/Kiwi/NSObject+KiwiMockAdditions.h	/^+ (id)nullMock;$/;"	c	protocol:KiwiMockAdditions
nullMock	Example/Pods/Kiwi/Classes/Mocking/NSObject+KiwiMockAdditions.h	/^+ (id)nullMock;$/;"	c	protocol:KiwiMockAdditions
nullMock	Example/Pods/Kiwi/Classes/Mocking/NSObject+KiwiMockAdditions.m	/^+ (id)nullMock {$/;"	c	implementation:NSObject
nullMockFlag	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        _isNullMock = nullMockFlag;$/;"	p	interface:KWMock
nullMockForClass:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^+ (id)nullMockForClass:(Class)aClass;$/;"	c	protocol:KWMessageSpying
nullMockForClass:	Example/Pods/Headers/Kiwi/KWMock.h	/^+ (id)nullMockForClass:(Class)aClass;$/;"	c	protocol:KWMessageSpying
nullMockForClass:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^+ (id)nullMockForClass:(Class)aClass;$/;"	c	protocol:KWMessageSpying
nullMockForProtocol:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^+ (id)nullMockForProtocol:(Protocol *)aProtocol;$/;"	c	protocol:KWMessageSpying
nullMockForProtocol:	Example/Pods/Headers/Kiwi/KWMock.h	/^+ (id)nullMockForProtocol:(Protocol *)aProtocol;$/;"	c	protocol:KWMessageSpying
nullMockForProtocol:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^+ (id)nullMockForProtocol:(Protocol *)aProtocol;$/;"	c	protocol:KWMessageSpying
nullMockWithName:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiMockAdditions.h	/^+ (id)nullMockWithName:(NSString *)aName;$/;"	c	protocol:KiwiMockAdditions
nullMockWithName:	Example/Pods/Headers/Kiwi/NSObject+KiwiMockAdditions.h	/^+ (id)nullMockWithName:(NSString *)aName;$/;"	c	protocol:KiwiMockAdditions
nullMockWithName:	Example/Pods/Kiwi/Classes/Mocking/NSObject+KiwiMockAdditions.h	/^+ (id)nullMockWithName:(NSString *)aName;$/;"	c	protocol:KiwiMockAdditions
nullMockWithName:	Example/Pods/Kiwi/Classes/Mocking/NSObject+KiwiMockAdditions.m	/^+ (id)nullMockWithName:(NSString *)aName {$/;"	c	implementation:NSObject
nullMockWithName:forClass:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^+ (id)nullMockWithName:(NSString *)aName forClass:(Class)aClass ;$/;"	c	protocol:KWMessageSpying
nullMockWithName:forClass:	Example/Pods/Headers/Kiwi/KWMock.h	/^+ (id)nullMockWithName:(NSString *)aName forClass:(Class)aClass ;$/;"	c	protocol:KWMessageSpying
nullMockWithName:forClass:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^+ (id)nullMockWithName:(NSString *)aName forClass:(Class)aClass ;$/;"	c	protocol:KWMessageSpying
nullMockWithName:forProtocol:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^+ (id)nullMockWithName:(NSString *)aName forProtocol:(Protocol *)aProtocol;$/;"	c	protocol:KWMessageSpying
nullMockWithName:forProtocol:	Example/Pods/Headers/Kiwi/KWMock.h	/^+ (id)nullMockWithName:(NSString *)aName forProtocol:(Protocol *)aProtocol;$/;"	c	protocol:KWMessageSpying
nullMockWithName:forProtocol:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^+ (id)nullMockWithName:(NSString *)aName forProtocol:(Protocol *)aProtocol;$/;"	c	protocol:KWMessageSpying
numberOfArguments	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^		NSUInteger numberOfArguments = [[anInvocation methodSignature] numberOfArguments];$/;"	p	interface:KWStub
numberOfClasses	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^        Class *classes = (Class *)malloc(sizeof(Class) * numberOfClasses);$/;"	p	interface:KWMatcherFactory
numberOfMessageArguments	Example/Pods/BuildHeaders/Kiwi/NSMethodSignature+KiwiAdditions.h	/^- (NSUInteger)numberOfMessageArguments;$/;"	m	interface:NSMethodSignature
numberOfMessageArguments	Example/Pods/Headers/Kiwi/NSMethodSignature+KiwiAdditions.h	/^- (NSUInteger)numberOfMessageArguments;$/;"	m	interface:NSMethodSignature
numberOfMessageArguments	Example/Pods/Kiwi/Classes/Core/NSMethodSignature+KiwiAdditions.h	/^- (NSUInteger)numberOfMessageArguments;$/;"	m	interface:NSMethodSignature
numberOfMessageArguments	Example/Pods/Kiwi/Classes/Core/NSMethodSignature+KiwiAdditions.m	/^- (NSUInteger)numberOfMessageArguments {$/;"	m	implementation:NSMethodSignature
numberValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSNumber *)numberValue;$/;"	p	interface:KWValue
numberValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSNumber *)numberValue;$/;"	p	interface:KWValue
numberValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSNumber *)numberValue;$/;"	p	interface:KWValue
numberValue	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSNumber *)numberValue {$/;"	m	implementation:KWValue
numberWithBoolBytes:	Example/Pods/BuildHeaders/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithBoolBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithBoolBytes:	Example/Pods/Headers/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithBoolBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithBoolBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.h	/^+ (id)numberWithBoolBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithBoolBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.m	/^+ (id)numberWithBoolBytes:(const void *)bytes {$/;"	c	implementation:NSNumber
numberWithBytes:objCType:	Example/Pods/BuildHeaders/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithBytes:(const void *)bytes objCType:(const char *)anObjCType;$/;"	m	interface:NSNumber
numberWithBytes:objCType:	Example/Pods/Headers/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithBytes:(const void *)bytes objCType:(const char *)anObjCType;$/;"	m	interface:NSNumber
numberWithBytes:objCType:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.h	/^+ (id)numberWithBytes:(const void *)bytes objCType:(const char *)anObjCType;$/;"	m	interface:NSNumber
numberWithBytes:objCType:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.m	/^+ (id)numberWithBytes:(const void *)bytes objCType:(const char *)anObjCType {$/;"	m	implementation:NSNumber
numberWithCharBytes:	Example/Pods/BuildHeaders/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithCharBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithCharBytes:	Example/Pods/Headers/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithCharBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithCharBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.h	/^+ (id)numberWithCharBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithCharBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.m	/^+ (id)numberWithCharBytes:(const void *)bytes {$/;"	c	implementation:NSNumber
numberWithDoubleBytes:	Example/Pods/BuildHeaders/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithDoubleBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithDoubleBytes:	Example/Pods/Headers/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithDoubleBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithDoubleBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.h	/^+ (id)numberWithDoubleBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithDoubleBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.m	/^+ (id)numberWithDoubleBytes:(const void *)bytes {$/;"	c	implementation:NSNumber
numberWithFloatBytes:	Example/Pods/BuildHeaders/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithFloatBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithFloatBytes:	Example/Pods/Headers/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithFloatBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithFloatBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.h	/^+ (id)numberWithFloatBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithFloatBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.m	/^+ (id)numberWithFloatBytes:(const void *)bytes {$/;"	c	implementation:NSNumber
numberWithIntBytes:	Example/Pods/BuildHeaders/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithIntBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithIntBytes:	Example/Pods/Headers/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithIntBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithIntBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.h	/^+ (id)numberWithIntBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithIntBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.m	/^+ (id)numberWithIntBytes:(const void *)bytes {$/;"	c	implementation:NSNumber
numberWithIntegerBytes:	Example/Pods/BuildHeaders/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithIntegerBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithIntegerBytes:	Example/Pods/Headers/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithIntegerBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithIntegerBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.h	/^+ (id)numberWithIntegerBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithIntegerBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.m	/^+ (id)numberWithIntegerBytes:(const void *)bytes {$/;"	c	implementation:NSNumber
numberWithLongBytes:	Example/Pods/BuildHeaders/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithLongBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithLongBytes:	Example/Pods/Headers/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithLongBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithLongBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.h	/^+ (id)numberWithLongBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithLongBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.m	/^+ (id)numberWithLongBytes:(const void *)bytes {$/;"	c	implementation:NSNumber
numberWithLongLongBytes:	Example/Pods/BuildHeaders/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithLongLongBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithLongLongBytes:	Example/Pods/Headers/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithLongLongBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithLongLongBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.h	/^+ (id)numberWithLongLongBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithLongLongBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.m	/^+ (id)numberWithLongLongBytes:(const void *)bytes {$/;"	c	implementation:NSNumber
numberWithShortBytes:	Example/Pods/BuildHeaders/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithShortBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithShortBytes:	Example/Pods/Headers/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithShortBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithShortBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.h	/^+ (id)numberWithShortBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithShortBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.m	/^+ (id)numberWithShortBytes:(const void *)bytes {$/;"	c	implementation:NSNumber
numberWithStdBoolBytes:	Example/Pods/BuildHeaders/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithStdBoolBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithStdBoolBytes:	Example/Pods/Headers/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithStdBoolBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithStdBoolBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.h	/^+ (id)numberWithStdBoolBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithStdBoolBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.m	/^+ (id)numberWithStdBoolBytes:(const void *)bytes {$/;"	c	implementation:NSNumber
numberWithUnsignedCharBytes:	Example/Pods/BuildHeaders/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithUnsignedCharBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithUnsignedCharBytes:	Example/Pods/Headers/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithUnsignedCharBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithUnsignedCharBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.h	/^+ (id)numberWithUnsignedCharBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithUnsignedCharBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.m	/^+ (id)numberWithUnsignedCharBytes:(const void *)bytes {$/;"	c	implementation:NSNumber
numberWithUnsignedIntBytes:	Example/Pods/BuildHeaders/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithUnsignedIntBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithUnsignedIntBytes:	Example/Pods/Headers/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithUnsignedIntBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithUnsignedIntBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.h	/^+ (id)numberWithUnsignedIntBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithUnsignedIntBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.m	/^+ (id)numberWithUnsignedIntBytes:(const void *)bytes {$/;"	c	implementation:NSNumber
numberWithUnsignedIntegerBytes:	Example/Pods/BuildHeaders/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithUnsignedIntegerBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithUnsignedIntegerBytes:	Example/Pods/Headers/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithUnsignedIntegerBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithUnsignedIntegerBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.h	/^+ (id)numberWithUnsignedIntegerBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithUnsignedIntegerBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.m	/^+ (id)numberWithUnsignedIntegerBytes:(const void *)bytes {$/;"	c	implementation:NSNumber
numberWithUnsignedLongBytes:	Example/Pods/BuildHeaders/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithUnsignedLongBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithUnsignedLongBytes:	Example/Pods/Headers/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithUnsignedLongBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithUnsignedLongBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.h	/^+ (id)numberWithUnsignedLongBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithUnsignedLongBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.m	/^+ (id)numberWithUnsignedLongBytes:(const void *)bytes {$/;"	c	implementation:NSNumber
numberWithUnsignedLongLongBytes:	Example/Pods/BuildHeaders/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithUnsignedLongLongBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithUnsignedLongLongBytes:	Example/Pods/Headers/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithUnsignedLongLongBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithUnsignedLongLongBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.h	/^+ (id)numberWithUnsignedLongLongBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithUnsignedLongLongBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.m	/^+ (id)numberWithUnsignedLongLongBytes:(const void *)bytes {$/;"	c	implementation:NSNumber
numberWithUnsignedShortBytes:	Example/Pods/BuildHeaders/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithUnsignedShortBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithUnsignedShortBytes:	Example/Pods/Headers/Kiwi/NSNumber+KiwiAdditions.h	/^+ (id)numberWithUnsignedShortBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithUnsignedShortBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.h	/^+ (id)numberWithUnsignedShortBytes:(const void *)bytes;$/;"	c	interface:NSNumber
numberWithUnsignedShortBytes:	Example/Pods/Kiwi/Classes/Core/NSNumber+KiwiAdditions.m	/^+ (id)numberWithUnsignedShortBytes:(const void *)bytes {$/;"	c	implementation:NSNumber
objCType	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^@property (nonatomic, readonly) const char *objCType;$/;"	m	interface:KWValue
objCType	Example/Pods/Headers/Kiwi/KWValue.h	/^@property (nonatomic, readonly) const char *objCType;$/;"	m	interface:KWValue
objCType	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.m	/^            _argument = [KWValue valueWithBytes:[data bytes] objCType:objCType];$/;"	p	interface:KWCaptureSpy
objCType	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^@property (nonatomic, readonly) const char *objCType;$/;"	m	interface:KWValue
objCType	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^@synthesize objCType;$/;"	m	implementation:KWValue
objCType	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^    const char *objCType = [self.subject objCType];$/;"	p	interface:KWBeWithinMatcher
objCType	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^                                                     objCType];$/;"	p	interface:KWStub
objCType	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    NSData *data = [self.value dataForObjCType:objCType];$/;"	p	interface:KWStub
objc_getAssociatedObject	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^    return objc_getAssociatedObject(self, kKWINVOCATION_EXAMPLE_GROUP_KEY);$/;"	p	interface:KWExampleSuite
objc_getClassList	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^        int numberOfClasses = objc_getClassList(NULL, 0);$/;"	p	interface:KWMatcherFactory
objc_getClassList	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^        numberOfClasses = objc_getClassList(classes, numberOfClasses);$/;"	p	interface:KWMatcherFactory
objc_setAssociatedObject	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^    objc_setAssociatedObject(self, kKWINVOCATION_EXAMPLE_GROUP_KEY, exampleGroup, OBJC_ASSOCIATION_RETAIN_NONATOMIC);$/;"	p	interface:KWExampleSuite
object	Example/Pods/BuildHeaders/Kiwi/KWFutureObject.h	/^- (id)object;$/;"	m	interface:KWFutureObject
object	Example/Pods/Headers/Kiwi/KWFutureObject.h	/^- (id)object;$/;"	m	interface:KWFutureObject
object	Example/Pods/Kiwi/Classes/Core/KWFutureObject.h	/^- (id)object;$/;"	m	interface:KWFutureObject
object	Example/Pods/Kiwi/Classes/Core/KWFutureObject.m	/^- (id)object; {$/;"	p	interface:KWFutureObject
object	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^        [objects addObject:object];$/;"	p	interface:KWContainMatcher
object	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^        [self.invocation getReturnValue:&object];$/;"	p	interface:KWHaveMatcher
object	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^        return object;$/;"	p	interface:KWHaveMatcher
object	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^    self.expectedObject = object;$/;"	p	interface:KWNotificationMatcher
object	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        _mockedObject = object;$/;"	p	interface:KWMock
object	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [[self alloc] initAsPartialMockForObject:object];$/;"	p	interface:KWMock
object	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [[self alloc] initAsPartialMockWithName:aName forObject:object];$/;"	p	interface:KWMock
object	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [self initAsPartialMockWithName:nil forObject:object];$/;"	p	interface:KWMock
object:didReceiveInvocation:	Example/Pods/BuildHeaders/Kiwi/KWMessageSpying.h	/^- (void)object:(id)anObject didReceiveInvocation:(NSInvocation *)anInvocation;$/;"	m	protocol:KWMessageSpying
object:didReceiveInvocation:	Example/Pods/Headers/Kiwi/KWMessageSpying.h	/^- (void)object:(id)anObject didReceiveInvocation:(NSInvocation *)anInvocation;$/;"	m	protocol:KWMessageSpying
object:didReceiveInvocation:	Example/Pods/Kiwi/Classes/Core/KWMessageSpying.h	/^- (void)object:(id)anObject didReceiveInvocation:(NSInvocation *)anInvocation;$/;"	m	protocol:KWMessageSpying
object:didReceiveInvocation:	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.m	/^- (void)object:(id)anObject didReceiveInvocation:(NSInvocation *)anInvocation {$/;"	m	implementation:KWMessageTracker
objectDescriptionAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)objectDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
objectDescriptionAtIndex:	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)objectDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
objectDescriptionAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (NSString *)objectDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
objectForKey	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^        [self focusWithURI:[[[NSProcessInfo processInfo] environment] objectForKey:@"KW_SPEC"]];$/;"	p	interface:KWExampleSuiteBuilder
objectRef	Example/Pods/BuildHeaders/Kiwi/KWLetNode.h	/^@property (nonatomic, readonly) __autoreleasing id *objectRef;$/;"	p	interface:KWLetNode
objectRef	Example/Pods/Headers/Kiwi/KWLetNode.h	/^@property (nonatomic, readonly) __autoreleasing id *objectRef;$/;"	p	interface:KWLetNode
objectRef	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.h	/^@property (nonatomic, readonly) __autoreleasing id *objectRef;$/;"	p	interface:KWLetNode
objectRef	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^@synthesize objectRef = _objectRef;$/;"	p	interface:KWLetNode
objectWithObjectPointer:	Example/Pods/BuildHeaders/Kiwi/KWFutureObject.h	/^+ (id)objectWithObjectPointer:(id *)pointer;$/;"	c	interface:KWFutureObject
objectWithObjectPointer:	Example/Pods/Headers/Kiwi/KWFutureObject.h	/^+ (id)objectWithObjectPointer:(id *)pointer;$/;"	c	interface:KWFutureObject
objectWithObjectPointer:	Example/Pods/Kiwi/Classes/Core/KWFutureObject.h	/^+ (id)objectWithObjectPointer:(id *)pointer;$/;"	c	interface:KWFutureObject
objects	Example/Pods/BuildHeaders/Kiwi/KWHaveMatcher.h	/^- (id)objects;$/;"	m	protocol:KWContainmentCountMatcherTerminals
objects	Example/Pods/Headers/Kiwi/KWHaveMatcher.h	/^- (id)objects;$/;"	m	protocol:KWContainmentCountMatcherTerminals
objects	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^    [(id)self containObjectsInArray:objects];$/;"	p	interface:KWContainMatcher
objects	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^    return [NSString stringWithFormat:@"all of %@", [KWFormatter formatObject:self.objects]];$/;"	p	interface:KWContainMatcher
objects	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^@property (nonatomic, readwrite, strong) id objects;$/;"	p	interface:KWContainMatcher
objects	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.h	/^- (id)objects;$/;"	m	protocol:KWContainmentCountMatcherTerminals
objectsPhrase	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^    return [NSString stringWithFormat:@"contain %@", [self objectsPhrase]];$/;"	p	interface:KWContainMatcher
objectsPhrase	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^    return [NSString stringWithFormat:@"expected subject to contain %@", [self objectsPhrase]];$/;"	p	interface:KWContainMatcher
observer	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^    [[NSNotificationCenter defaultCenter] removeObserver:self.observer];$/;"	p	interface:KWNotificationMatcher
observer	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^@property (nonatomic, strong) id observer;$/;"	p	interface:KWNotificationMatcher
onceToken	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^    static dispatch_once_t onceToken;$/;"	p	interface:KWSuiteConfigurationBase
onceToken	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    static dispatch_once_t onceToken;$/;"	p	interface:KWExampleSuiteBuilder
options	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.m	/^    NSRange range = [subjectString rangeOfString:self.substring options:self.options];$/;"	p	interface:KWContainStringMatcher
options	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.m	/^    self.options = 0;$/;"	p	interface:KWContainStringMatcher
options	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.m	/^    self.options = options;$/;"	p	interface:KWContainStringMatcher
options	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.m	/^@property (nonatomic) NSStringCompareOptions options;$/;"	p	interface:KWContainStringMatcher
options	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.m	/^    self.options = 0;$/;"	p	interface:KWRegularExpressionPatternMatcher
options	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.m	/^    self.options = options;$/;"	p	interface:KWRegularExpressionPatternMatcher
options	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.m	/^@property (nonatomic) NSRegularExpressionOptions options;$/;"	p	interface:KWRegularExpressionPatternMatcher
otherSubject	Example/Pods/Kiwi/Classes/Matchers/KWBeIdenticalToMatcher.m	/^@property (nonatomic, readwrite, strong) id otherSubject;$/;"	m	interface:KWBeIdenticalToMatcher
otherSubject	Example/Pods/Kiwi/Classes/Matchers/KWEqualMatcher.m	/^@property (nonatomic, readwrite, strong) id otherSubject;$/;"	m	interface:KWEqualMatcher
otherSubject	Example/Pods/Kiwi/Classes/Matchers/KWEqualMatcher.m	/^@synthesize otherSubject;$/;"	m	implementation:KWEqualMatcher
otherValue	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^    return [NSString stringWithFormat:@"be within %@ of %@", self.distance, self.otherValue];$/;"	p	interface:KWBeWithinMatcher
otherValue	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^@property (nonatomic, readwrite, strong) id otherValue;$/;"	p	interface:KWBeWithinMatcher
otherValue	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^    NSComparisonResult result = [self.subject compare:self.otherValue];$/;"	p	interface:KWInequalityMatcher
otherValue	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^  return [NSString stringWithFormat:@"be %@ %@", [self comparisonPhrase], [KWFormatter formatObject:self.otherValue]];$/;"	p	interface:KWInequalityMatcher
otherValue	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^@property (nonatomic, strong) id otherValue;$/;"	p	interface:KWInequalityMatcher
outerExampleBlock	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^        [self.parentContext performExample:example withBlock:outerExampleBlock];$/;"	p	interface:KWContextNode
outerExampleBlock	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^        outerExampleBlock();$/;"	p	interface:KWContextNode
parent	Example/Pods/BuildHeaders/Kiwi/KWLetNode.h	/^@property (nonatomic, readonly, weak) KWLetNode *parent;$/;"	p	interface:KWLetNode
parent	Example/Pods/Headers/Kiwi/KWLetNode.h	/^@property (nonatomic, readonly, weak) KWLetNode *parent;$/;"	p	interface:KWLetNode
parent	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.h	/^@property (nonatomic, readonly, weak) KWLetNode *parent;$/;"	p	interface:KWLetNode
parent	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^@property (nonatomic, weak) KWLetNode *parent;$/;"	p	interface:KWLetNode
parentContext	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^@property (nonatomic, readonly) KWContextNode *parentContext;$/;"	p	interface:KWContextNode
parentContext	Example/Pods/Headers/Kiwi/KWContextNode.h	/^@property (nonatomic, readonly) KWContextNode *parentContext;$/;"	p	interface:KWContextNode
parentContext	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^@property (nonatomic, readonly) KWContextNode *parentContext;$/;"	p	interface:KWContextNode
parentContext	Example/Pods/Kiwi/Classes/Nodes/KWItNode.m	/^        currentContext = currentContext.parentContext;$/;"	p	interface:KWItNode
partialMockForObject:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^+ (id)partialMockForObject:(id)object;$/;"	c	protocol:KWMessageSpying
partialMockForObject:	Example/Pods/Headers/Kiwi/KWMock.h	/^+ (id)partialMockForObject:(id)object;$/;"	c	protocol:KWMessageSpying
partialMockForObject:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^+ (id)partialMockForObject:(id)object;$/;"	c	protocol:KWMessageSpying
partialMockWithName:forObject:	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^+ (id)partialMockWithName:(NSString *)aName forObject:(id)object;$/;"	c	protocol:KWMessageSpying
partialMockWithName:forObject:	Example/Pods/Headers/Kiwi/KWMock.h	/^+ (id)partialMockWithName:(NSString *)aName forObject:(id)object;$/;"	c	protocol:KWMessageSpying
partialMockWithName:forObject:	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^+ (id)partialMockWithName:(NSString *)aName forObject:(id)object;$/;"	c	protocol:KWMessageSpying
passed	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^@property (nonatomic, assign) BOOL passed;$/;"	p	interface:KWExample
pattern	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    NSString *pattern = @".+\\\\((.+):([0-9]+)\\\\)";$/;"	p	interface:KWExample
pattern	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.m	/^            self.pattern];$/;"	p	interface:KWRegularExpressionPatternMatcher
pattern	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.m	/^    return [NSString stringWithFormat:@"match pattern \\"%@\\"", self.pattern];$/;"	p	interface:KWRegularExpressionPatternMatcher
pattern	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.m	/^    self.pattern = pattern;$/;"	p	interface:KWRegularExpressionPatternMatcher
pattern	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.m	/^@property (nonatomic, copy) NSString *pattern;$/;"	p	interface:KWRegularExpressionPatternMatcher
pendingNode	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    KWExample *example = [[KWExample alloc] initWithExampleNode:pendingNode];$/;"	p	interface:KWExampleSuiteBuilder
pendingNode	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    [contextNode addPendingNode:pendingNode];$/;"	p	interface:KWExampleSuiteBuilder
pendingNodeWithCallSite:context:description:	Example/Pods/Kiwi/Classes/Nodes/KWPendingNode.m	/^+ (id)pendingNodeWithCallSite:(KWCallSite *)aCallSite context:(KWContextNode *)context description:(NSString *)aDescription {$/;"	c	implementation:KWPendingNode
pendingWithCallSite	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void pendingWithCallSite(KWCallSite *aCallSite, NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
pendingWithCallSite	Example/Pods/Headers/Kiwi/KWExample.h	/^void pendingWithCallSite(KWCallSite *aCallSite, NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
pendingWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void pendingWithCallSite(KWCallSite *aCallSite, NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
pendingWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    pendingWithCallSite(nil, aDescription, ignoredBlock);$/;"	p	interface:KWExample
pending_	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void pending_(NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
pending_	Example/Pods/Headers/Kiwi/KWExample.h	/^void pending_(NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
pending_	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void pending_(NSString *aDescription, void (^block)(void));$/;"	p	interface:KWExample
performBlock	Example/Pods/BuildHeaders/Kiwi/KWBlockNode.h	/^- (void)performBlock;$/;"	m	interface:KWBlockNode
performBlock	Example/Pods/Headers/Kiwi/KWBlockNode.h	/^- (void)performBlock;$/;"	m	interface:KWBlockNode
performBlock	Example/Pods/Kiwi/Classes/Nodes/KWBlockNode.h	/^- (void)performBlock;$/;"	m	interface:KWBlockNode
performBlock	Example/Pods/Kiwi/Classes/Nodes/KWBlockNode.m	/^- (void)performBlock {$/;"	m	implementation:KWBlockNode
performSelector	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^            [matchVerifier performSelector:@selector(beNil)];$/;"	p	interface:KWNilMatcher
performSelector	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^            [matchVerifier performSelector:@selector(beNonNil)];$/;"	p	interface:KWNilMatcher
performedExampleCount	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^        _performedExampleCount = 0;$/;"	p	interface:KWContextNode
performedExampleCount	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^        self.performedExampleCount++;$/;"	p	interface:KWContextNode
performedExampleCount	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^@property (nonatomic, assign) NSUInteger performedExampleCount;$/;"	p	interface:KWContextNode
phraseForCount:	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.m	/^- (NSString *)phraseForCount:(NSUInteger)aCount {$/;"	m	implementation:KWMessageTracker
pointer	Example/Pods/Kiwi/Classes/Core/KWFutureObject.m	/^  return [self futureObjectWithBlock:^{ return *pointer; }];$/;"	p	interface:KWFutureObject
pointerDescriptionAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)pointerDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
pointerDescriptionAtIndex:	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)pointerDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
pointerDescriptionAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (NSString *)pointerDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
popContextNode	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^- (void)popContextNode;$/;"	p	interface:KWExampleSuiteBuilder
popContextNode	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^- (void)popContextNode;$/;"	p	interface:KWExampleSuiteBuilder
popContextNode	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    [[KWExampleSuiteBuilder sharedExampleSuiteBuilder] popContextNode];$/;"	p	interface:KWExample
popContextNode	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^- (void)popContextNode;$/;"	p	interface:KWExampleSuiteBuilder
prefix	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.m	/^    self.substring = prefix;$/;"	p	interface:KWContainStringMatcher
prefix	Example/Pods/Kiwi/Classes/Matchers/KWStringPrefixMatcher.m	/^    return [NSString stringWithFormat:@"a string with prefix '%@'", self.prefix];$/;"	p	interface:KWStringPrefixMatcher
prefix	Example/Pods/Kiwi/Classes/Matchers/KWStringPrefixMatcher.m	/^    return [item hasPrefix:self.prefix];$/;"	p	interface:KWStringPrefixMatcher
prefix	Example/Pods/Kiwi/Classes/Matchers/KWStringPrefixMatcher.m	/^@property (nonatomic, copy) NSString *prefix;$/;"	p	interface:KWStringPrefixMatcher
previous	Example/Pods/BuildHeaders/Kiwi/KWLetNode.h	/^@property (nonatomic, readonly, weak) KWLetNode *previous;$/;"	p	interface:KWLetNode
previous	Example/Pods/Headers/Kiwi/KWLetNode.h	/^@property (nonatomic, readonly, weak) KWLetNode *previous;$/;"	p	interface:KWLetNode
previous	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.h	/^@property (nonatomic, readonly, weak) KWLetNode *previous;$/;"	p	interface:KWLetNode
previous	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^@property (nonatomic, weak) KWLetNode *previous;$/;"	p	interface:KWLetNode
probe	Example/Pods/Kiwi/Classes/Core/KWProbePoller.m	/^- (BOOL)check:(id<KWProbe>)probe; {$/;"	p	interface:KWTimeout
protocol	Example/Pods/Kiwi/Classes/Matchers/KWConformToProtocolMatcher.m	/^    return [self.subject conformsToProtocol:self.protocol];$/;"	p	interface:KWConformToProtocolMatcher
protocol	Example/Pods/Kiwi/Classes/Matchers/KWConformToProtocolMatcher.m	/^@property (nonatomic, assign) Protocol *protocol;$/;"	p	interface:KWConformToProtocolMatcher
protocol	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        [protocolSet addObject:protocol];$/;"	p	interface:KWMock
protocolSet	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return protocolSet;$/;"	p	interface:KWMock
protocol_conformsToProtocol	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return protocol_isEqual(self.mockedProtocol, aProtocol) || protocol_conformsToProtocol(self.mockedProtocol, aProtocol);$/;"	p	interface:KWMock
protocol_copyProtocolList	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        Protocol *__unsafe_unretained*protocols = protocol_copyProtocolList(protocol, &count);$/;"	p	interface:KWMock
protocol_getMethodDescription	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^            description = protocol_getMethodDescription(protocol, aSelector, YES, YES);$/;"	p	interface:KWMock
protocol_getMethodDescription	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        struct objc_method_description description = protocol_getMethodDescription(protocol, aSelector, NO, YES);$/;"	p	interface:KWMock
raise	Example/Pods/BuildHeaders/Kiwi/KWBlockRaiseMatcher.h	/^- (void)raise;$/;"	m	interface:KWBlockRaiseMatcher
raise	Example/Pods/Headers/Kiwi/KWBlockRaiseMatcher.h	/^- (void)raise;$/;"	m	interface:KWBlockRaiseMatcher
raise	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^            [invocationException raise];$/;"	p	interface:KWExample
raise	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.h	/^- (void)raise;$/;"	m	interface:KWBlockRaiseMatcher
raise	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^    [exception raise];$/;"	p	interface:KWMatchVerifier
raiseIfExampleGroupNotStarted	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    [self raiseIfExampleGroupNotStarted];$/;"	p	interface:KWExampleSuiteBuilder
raiseWithName:	Example/Pods/BuildHeaders/Kiwi/KWBlockRaiseMatcher.h	/^- (void)raiseWithName:(NSString *)aName;$/;"	m	interface:KWBlockRaiseMatcher
raiseWithName:	Example/Pods/Headers/Kiwi/KWBlockRaiseMatcher.h	/^- (void)raiseWithName:(NSString *)aName;$/;"	m	interface:KWBlockRaiseMatcher
raiseWithName:	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.h	/^- (void)raiseWithName:(NSString *)aName;$/;"	m	interface:KWBlockRaiseMatcher
raiseWithName:reason:	Example/Pods/BuildHeaders/Kiwi/KWBlockRaiseMatcher.h	/^- (void)raiseWithName:(NSString *)aName reason:(NSString *)aReason;$/;"	m	interface:KWBlockRaiseMatcher
raiseWithName:reason:	Example/Pods/Headers/Kiwi/KWBlockRaiseMatcher.h	/^- (void)raiseWithName:(NSString *)aName reason:(NSString *)aReason;$/;"	m	interface:KWBlockRaiseMatcher
raiseWithName:reason:	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.h	/^- (void)raiseWithName:(NSString *)aName reason:(NSString *)aReason;$/;"	m	interface:KWBlockRaiseMatcher
raiseWithReason:	Example/Pods/BuildHeaders/Kiwi/KWBlockRaiseMatcher.h	/^- (void)raiseWithReason:(NSString *)aReason;$/;"	m	interface:KWBlockRaiseMatcher
raiseWithReason:	Example/Pods/Headers/Kiwi/KWBlockRaiseMatcher.h	/^- (void)raiseWithReason:(NSString *)aReason;$/;"	m	interface:KWBlockRaiseMatcher
raiseWithReason:	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.h	/^- (void)raiseWithReason:(NSString *)aReason;$/;"	m	interface:KWBlockRaiseMatcher
rangeAtIndex	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^        NSString *lineNumberMatch = [callSite substringWithRange:[ntcr rangeAtIndex:2]];$/;"	p	interface:KWExample
rangeAtIndex	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^        fileName = [callSite substringWithRange:[ntcr rangeAtIndex:1]];$/;"	p	interface:KWExample
reason	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^                                  [exception reason]];$/;"	p	interface:KWExample
reason	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^    return [NSString stringWithFormat:@"%@ \\"%@\\"", namePhrase, [anException reason]];$/;"	p	interface:KWBlockRaiseMatcher
reason	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^            KWFailure *failure = [KWFailure failureWithCallSite:self.callSite format:@"%@ \\"%@\\" raised", [exception name], [exception reason]];$/;"	p	interface:KWContextNode
reason	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^        KWFailure *failure = [KWFailure failureWithCallSite:self.callSite format:[exception reason]];$/;"	p	interface:KWMatchVerifier
receive	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (id)receive {$/;"	m	implementation:KWMatchVerifier
receive:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receive:(SEL)aSelector {$/;"	m	implementation:KWReceiveMatcher
receive:andReturn:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue {$/;"	m	implementation:KWReceiveMatcher
receive:andReturn:withArguments:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withArguments:(id)firstArgument, ... {$/;"	m	implementation:KWMatchVerifier
receive:andReturn:withCount:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCount:(NSUInteger)aCount {$/;"	m	implementation:KWReceiveMatcher
receive:andReturn:withCount:arguments:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCount:(NSUInteger)aCount arguments:(id)firstArgument, ... {$/;"	m	implementation:KWMatchVerifier
receive:andReturn:withCountAtLeast:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCountAtLeast:(NSUInteger)aCount {$/;"	m	implementation:KWReceiveMatcher
receive:andReturn:withCountAtLeast:arguments:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCountAtLeast:(NSUInteger)aCount arguments:(id)firstArgument, ... {$/;"	m	implementation:KWMatchVerifier
receive:andReturn:withCountAtMost:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCountAtMost:(NSUInteger)aCount {$/;"	m	implementation:KWReceiveMatcher
receive:andReturn:withCountAtMost:arguments:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receive:(SEL)aSelector andReturn:(id)aValue withCountAtMost:(NSUInteger)aCount arguments:(id)firstArgument, ... {$/;"	m	implementation:KWMatchVerifier
receive:withArguments:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receive:(SEL)aSelector withArguments:(id)firstArgument, ... {$/;"	m	implementation:KWMatchVerifier
receive:withCount:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receive:(SEL)aSelector withCount:(NSUInteger)aCount {$/;"	m	implementation:KWReceiveMatcher
receive:withCount:arguments:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receive:(SEL)aSelector withCount:(NSUInteger)aCount arguments:(id)firstArgument, ... {$/;"	m	implementation:KWMatchVerifier
receive:withCountAtLeast:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receive:(SEL)aSelector withCountAtLeast:(NSUInteger)aCount {$/;"	m	implementation:KWReceiveMatcher
receive:withCountAtLeast:arguments:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receive:(SEL)aSelector withCountAtLeast:(NSUInteger)aCount arguments:(id)firstArgument, ... {$/;"	m	implementation:KWMatchVerifier
receive:withCountAtMost:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receive:(SEL)aSelector withCountAtMost:(NSUInteger)aCount {$/;"	m	implementation:KWReceiveMatcher
receive:withCountAtMost:arguments:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receive:(SEL)aSelector withCountAtMost:(NSUInteger)aCount arguments:(id)firstArgument, ... {$/;"	m	implementation:KWMatchVerifier
receiveAndReturn:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (id)receiveAndReturn:(id)aValue {$/;"	m	implementation:KWMatchVerifier
receiveAndReturn:withCount:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (id)receiveAndReturn:(id)aValue withCount:(NSUInteger)aCount {$/;"	m	implementation:KWMatchVerifier
receiveAndReturn:withCountAtLeast:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (id)receiveAndReturn:(id)aValue withCountAtLeast:(NSUInteger)aCount {$/;"	m	implementation:KWMatchVerifier
receiveAndReturn:withCountAtMost:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (id)receiveAndReturn:(id)aValue withCountAtMost:(NSUInteger)aCount {$/;"	m	implementation:KWMatchVerifier
receiveMessagePattern:andReturn:countType:count:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receiveMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue countType:(KWCountType)aCountType count:(NSUInteger)aCount {$/;"	m	implementation:KWReceiveMatcher
receiveMessagePattern:countType:count:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receiveMessagePattern:(KWMessagePattern *)aMessagePattern countType:(KWCountType)aCountType count:(NSUInteger)aCount {$/;"	m	implementation:KWReceiveMatcher
receiveNotificationMessage	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^    return [NSString stringWithFormat:@"expect to %@", [self receiveNotificationMessage]];$/;"	p	interface:KWNotificationMatcher
receiveUnspecifiedCountOfMessagePattern:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receiveUnspecifiedCountOfMessagePattern:(KWMessagePattern *)messagePattern {$/;"	m	implementation:KWReceiveMatcher
receiveUnspecifiedCountOfMessagePattern:andReturn:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (void)receiveUnspecifiedCountOfMessagePattern:(KWMessagePattern *)messagePattern andReturn:(id)aValue {$/;"	m	implementation:KWReceiveMatcher
receiveWithCount:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (id)receiveWithCount:(NSUInteger)aCount {$/;"	m	implementation:KWMatchVerifier
receiveWithCountAtLeast:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (id)receiveWithCountAtLeast:(NSUInteger)aCount {$/;"	m	implementation:KWMatchVerifier
receiveWithCountAtMost:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (id)receiveWithCountAtMost:(NSUInteger)aCount {$/;"	m	implementation:KWMatchVerifier
receivedCount	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.m	/^@property (nonatomic, assign) NSUInteger receivedCount;$/;"	m	interface:KWMessageTracker
receivedCountPhrase	Example/Pods/BuildHeaders/Kiwi/KWMessageTracker.h	/^- (NSString *)receivedCountPhrase;$/;"	p	interface:KWMessageTracker
receivedCountPhrase	Example/Pods/Headers/Kiwi/KWMessageTracker.h	/^- (NSString *)receivedCountPhrase;$/;"	p	interface:KWMessageTracker
receivedCountPhrase	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.h	/^- (NSString *)receivedCountPhrase;$/;"	p	interface:KWMessageTracker
receivedCountPhrase	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.m	/^- (NSString *)receivedCountPhrase {$/;"	m	implementation:KWMessageTracker
recursiveDescription	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^        if (self.child) [description appendFormat:@"%@", [self.child recursiveDescription]];$/;"	p	interface:KWLetNode
recursiveDescription	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^        if (self.child) [description appendString:[self.child recursiveDescription]];$/;"	p	interface:KWLetNode
recursiveDescription	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^        if (self.next) [description appendString:[self.next recursiveDescription]];$/;"	p	interface:KWLetNode
recursiveDescription	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    return [NSString stringWithFormat:@"%@ {%@\\n}", [[self class] description], [self recursiveDescription]];$/;"	p	interface:KWLetNode
registerMatcher	Example/Pods/BuildHeaders/Kiwi/KiwiBlockMacros.h	/^#define registerMatcher(name) \\$/;"	M	interface:
registerMatcher	Example/Pods/Headers/Kiwi/KiwiBlockMacros.h	/^#define registerMatcher(name) \\$/;"	M	interface:
registerMatcher	Example/Pods/Kiwi/Classes/Core/KiwiBlockMacros.h	/^#define registerMatcher(name) \\$/;"	M	interface:
registerMatcherClass:	Example/Pods/BuildHeaders/Kiwi/KWMatcherFactory.h	/^- (void)registerMatcherClass:(Class)aClass;$/;"	m	interface:KWMatcherFactory
registerMatcherClass:	Example/Pods/Headers/Kiwi/KWMatcherFactory.h	/^- (void)registerMatcherClass:(Class)aClass;$/;"	m	interface:KWMatcherFactory
registerMatcherClass:	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.h	/^- (void)registerMatcherClass:(Class)aClass;$/;"	m	interface:KWMatcherFactory
registerMatcherClassesWithNamespacePrefix	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    [self.matcherFactory registerMatcherClassesWithNamespacePrefix:@"KW"];$/;"	p	interface:KWExample
registerMatcherClassesWithNamespacePrefix:	Example/Pods/BuildHeaders/Kiwi/KWMatcherFactory.h	/^- (void)registerMatcherClassesWithNamespacePrefix:(NSString *)aNamespacePrefix;$/;"	m	interface:KWMatcherFactory
registerMatcherClassesWithNamespacePrefix:	Example/Pods/Headers/Kiwi/KWMatcherFactory.h	/^- (void)registerMatcherClassesWithNamespacePrefix:(NSString *)aNamespacePrefix;$/;"	m	interface:KWMatcherFactory
registerMatcherClassesWithNamespacePrefix:	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.h	/^- (void)registerMatcherClassesWithNamespacePrefix:(NSString *)aNamespacePrefix;$/;"	m	interface:KWMatcherFactory
registerMatchers	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void registerMatchers(NSString *aNamespacePrefix);$/;"	p	interface:KWExample
registerMatchers	Example/Pods/Headers/Kiwi/KWExample.h	/^void registerMatchers(NSString *aNamespacePrefix);$/;"	p	interface:KWExample
registerMatchers	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void registerMatchers(NSString *aNamespacePrefix);$/;"	p	interface:KWExample
registerMatchersNode	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    [contextNode addRegisterMatchersNode:registerMatchersNode];$/;"	p	interface:KWExampleSuiteBuilder
registerMatchersNodeWithCallSite:namespacePrefix:	Example/Pods/BuildHeaders/Kiwi/KWRegisterMatchersNode.h	/^+ (id)registerMatchersNodeWithCallSite:(KWCallSite *)aCallSite namespacePrefix:(NSString *)aNamespacePrefix;$/;"	c	interface:KWRegisterMatchersNode
registerMatchersNodeWithCallSite:namespacePrefix:	Example/Pods/Headers/Kiwi/KWRegisterMatchersNode.h	/^+ (id)registerMatchersNodeWithCallSite:(KWCallSite *)aCallSite namespacePrefix:(NSString *)aNamespacePrefix;$/;"	c	interface:KWRegisterMatchersNode
registerMatchersNodeWithCallSite:namespacePrefix:	Example/Pods/Kiwi/Classes/Nodes/KWRegisterMatchersNode.h	/^+ (id)registerMatchersNodeWithCallSite:(KWCallSite *)aCallSite namespacePrefix:(NSString *)aNamespacePrefix;$/;"	c	interface:KWRegisterMatchersNode
registerMatchersNodeWithCallSite:namespacePrefix:	Example/Pods/Kiwi/Classes/Nodes/KWRegisterMatchersNode.m	/^+ (id)registerMatchersNodeWithCallSite:(KWCallSite *)aCallSite namespacePrefix:(NSString *)aNamespacePrefix {$/;"	c	implementation:KWRegisterMatchersNode
registerMatchersNodes	Example/Pods/BuildHeaders/Kiwi/KWContextNode.h	/^@property (nonatomic, readonly) NSArray *registerMatchersNodes;$/;"	p	interface:KWContextNode
registerMatchersNodes	Example/Pods/Headers/Kiwi/KWContextNode.h	/^@property (nonatomic, readonly) NSArray *registerMatchersNodes;$/;"	p	interface:KWContextNode
registerMatchersNodes	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.h	/^@property (nonatomic, readonly) NSArray *registerMatchersNodes;$/;"	p	interface:KWContextNode
registerMatchersWithCallSite	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void registerMatchersWithCallSite(KWCallSite *aCallSite, NSString *aNamespacePrefix);$/;"	p	interface:KWExample
registerMatchersWithCallSite	Example/Pods/Headers/Kiwi/KWExample.h	/^void registerMatchersWithCallSite(KWCallSite *aCallSite, NSString *aNamespacePrefix);$/;"	p	interface:KWExample
registerMatchersWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void registerMatchersWithCallSite(KWCallSite *aCallSite, NSString *aNamespacePrefix);$/;"	p	interface:KWExample
registerMatchersWithCallSite	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    registerMatchersWithCallSite(nil, aNamespacePrefix);$/;"	p	interface:KWExample
registeredMatcherClasses	Example/Pods/BuildHeaders/Kiwi/KWMatcherFactory.h	/^@property (nonatomic, readonly) NSArray *registeredMatcherClasses;$/;"	m	interface:KWMatcherFactory
registeredMatcherClasses	Example/Pods/Headers/Kiwi/KWMatcherFactory.h	/^@property (nonatomic, readonly) NSArray *registeredMatcherClasses;$/;"	m	interface:KWMatcherFactory
registeredMatcherClasses	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.h	/^@property (nonatomic, readonly) NSArray *registeredMatcherClasses;$/;"	m	interface:KWMatcherFactory
removeAllObjects	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    [self.contextNodeStack removeAllObjects];$/;"	p	interface:KWExampleSuiteBuilder
removeAllObjects	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    [self.stubs removeAllObjects];$/;"	p	interface:KWMock
removeAllObjects	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^		[args removeAllObjects]; \/\/ We don't want these objects to be in autorelease pool$/;"	p	interface:KWStub
removeLastObject	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    [self.contextNodeStack removeLastObject];$/;"	p	interface:KWExampleSuiteBuilder
removeLastObject	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        [protocolQueue removeLastObject];$/;"	p	interface:KWMock
removeMessageSpy:forMessagePattern:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)removeMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	c	protocol:KWMessageSpying
removeMessageSpy:forMessagePattern:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)removeMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	m	protocol:KWMessageSpying
removeMessageSpy:forMessagePattern:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)removeMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	c	protocol:KWMessageSpying
removeMessageSpy:forMessagePattern:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)removeMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	m	protocol:KWMessageSpying
removeMessageSpy:forMessagePattern:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^+ (void)removeMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	c	protocol:KWMessageSpying
removeMessageSpy:forMessagePattern:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^- (void)removeMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	m	protocol:KWMessageSpying
removeMessageSpy:forMessagePattern:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^+ (void)removeMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern {$/;"	c	implementation:NSObject
removeMessageSpy:forMessagePattern:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^- (void)removeMessageSpy:(id<KWMessageSpying>)aSpy forMessagePattern:(KWMessagePattern *)aMessagePattern {$/;"	m	implementation:NSObject
reportFailure:	Example/Pods/BuildHeaders/Kiwi/KWReporting.h	/^- (void)reportFailure:(KWFailure *)failure;$/;"	m	protocol:KWReporting
reportFailure:	Example/Pods/Headers/Kiwi/KWReporting.h	/^- (void)reportFailure:(KWFailure *)failure;$/;"	m	protocol:KWReporting
reportFailure:	Example/Pods/Kiwi/Classes/Core/KWReporting.h	/^- (void)reportFailure:(KWFailure *)failure;$/;"	m	protocol:KWReporting
reportPending	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    return reportPending ? @"(PENDING)" : @"";$/;"	p	interface:KWExample
reportResultForExampleNodeWithLabel	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^            [self reportResultForExampleNodeWithLabel:@"PASSED"];$/;"	p	interface:KWExample
reportResultForExampleNodeWithLabel	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    [self reportResultForExampleNodeWithLabel:@"PENDING"];$/;"	p	interface:KWExample
reporter	Example/Pods/BuildHeaders/Kiwi/KWMatchVerifier.h	/^@property (nonatomic, readonly) id<KWReporting> reporter;$/;"	p	protocol:KWMatching
reporter	Example/Pods/Headers/Kiwi/KWMatchVerifier.h	/^@property (nonatomic, readonly) id<KWReporting> reporter;$/;"	p	protocol:KWMatching
reporter	Example/Pods/Kiwi/Classes/Verifiers/KWExistVerifier.m	/^@property (nonatomic, readonly) id<KWReporting> reporter;$/;"	p	interface:KWExistVerifier
reporter	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.h	/^@property (nonatomic, readonly) id<KWReporting> reporter;$/;"	p	protocol:KWMatching
respondToSelector:	Example/Pods/BuildHeaders/Kiwi/KWRespondToSelectorMatcher.h	/^- (void)respondToSelector:(SEL)aSelector;$/;"	m	interface:KWRespondToSelectorMatcher
respondToSelector:	Example/Pods/Headers/Kiwi/KWRespondToSelectorMatcher.h	/^- (void)respondToSelector:(SEL)aSelector;$/;"	m	interface:KWRespondToSelectorMatcher
respondToSelector:	Example/Pods/Kiwi/Classes/Matchers/KWRespondToSelectorMatcher.h	/^- (void)respondToSelector:(SEL)aSelector;$/;"	m	interface:KWRespondToSelectorMatcher
respondToSelector:	Example/Pods/Kiwi/Classes/Matchers/KWRespondToSelectorMatcher.m	/^- (void)respondToSelector:(SEL)aSelector {$/;"	m	implementation:KWRespondToSelectorMatcher
result	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^    BOOL result;$/;"	p	interface:KWUserDefinedMatcher
result	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^    return result;$/;"	p	interface:KWUserDefinedMatcher
result	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^            [invocation getReturnValue:&result];$/;"	p	interface:KWMock
result	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^            return result;$/;"	p	interface:KWMock
result	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        NSUInteger result = 0;$/;"	p	interface:KWMock
result	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        [invocation getReturnValue:&result];$/;"	p	interface:KWMock
result	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        return result;$/;"	p	interface:KWMock
result	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    *self.objectRef = result;$/;"	p	interface:KWLetNode
result	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    return result;$/;"	p	interface:KWLetNode
return	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^        return;$/;"	p	interface:KWExample
return	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^        return;$/;"	p	interface:KWExampleSuiteBuilder
return	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^            return;$/;"	p	interface:KWMatcherFactory
return	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^        return;$/;"	p	interface:KWMatcherFactory
return	Example/Pods/Kiwi/Classes/Core/KWProbePoller.m	/^	return (_timeoutDateStamp - CFAbsoluteTimeGetCurrent()) < 0;$/;"	p	interface:KWTimeout
return	Example/Pods/Kiwi/Classes/Matchers/KWBeBetweenMatcher.m	/^           (upperResult == NSOrderedAscending || upperResult == NSOrderedSame);$/;"	p	interface:KWBeBetweenMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWBeBetweenMatcher.m	/^    return @[@"beBetween:and:", @"beInTheIntervalFrom:to:"];$/;"	p	interface:KWBeBetweenMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWBeKindOfClassMatcher.m	/^    return @[@"beKindOfClass:"];$/;"	p	interface:KWBeKindOfClassMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWBeMemberOfClassMatcher.m	/^    return @[@"beMemberOfClass:"];$/;"	p	interface:KWBeMemberOfClassMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWBeTrueMatcher.m	/^        return @"be true";$/;"	p	interface:KWBeTrueMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWBeTrueMatcher.m	/^    return @"be false";$/;"	p	interface:KWBeTrueMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWBeTrueMatcher.m	/^    return @[@"beTrue", @"beFalse", @"beYes", @"beNo"];$/;"	p	interface:KWBeTrueMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^    return @[@"beWithin:of:", @"equal:withDelta:"];$/;"	p	interface:KWBeWithinMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^             @"raiseWithName:reason:"];$/;"	p	interface:KWBlockRaiseMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWBlockRaiseMatcher.m	/^        return @"nothing";$/;"	p	interface:KWBlockRaiseMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^        return @"change count";$/;"	p	interface:KWChangeMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^        return @"expected subject to change the count";$/;"	p	interface:KWChangeMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^        return @"expected subject to not change the count";$/;"	p	interface:KWChangeMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWChangeMatcher.m	/^    return @[@"change:by:", @"change:"];$/;"	p	interface:KWChangeMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWConformToProtocolMatcher.m	/^    return @[@"conformToProtocol:"];$/;"	p	interface:KWConformToProtocolMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^    return @[@"contain:", @"containObjectsInArray:"];$/;"	p	interface:KWContainMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.m	/^             @"endWithString:"];$/;"	p	interface:KWContainStringMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.m	/^    return (range.location != NSNotFound);$/;"	p	interface:KWContainStringMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatcher.m	/^  return @[@"match:"];$/;"	p	interface:KWGenericMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^             ];$/;"	p	interface:KWHaveMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^            return @"have at least";$/;"	p	interface:KWHaveMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^            return @"have at most";$/;"	p	interface:KWHaveMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^            return @"have";$/;"	p	interface:KWHaveMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^        return @"1 item";$/;"	p	interface:KWHaveMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^        return @"items";$/;"	p	interface:KWHaveMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^             @"haveValueForKeyPath:"];$/;"	p	interface:KWHaveValueMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^                                     @"beGreaterThanOrEqualTo:"];$/;"	p	interface:KWInequalityMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^            return @"<";$/;"	p	interface:KWInequalityMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^            return @"<=";$/;"	p	interface:KWInequalityMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^            return @">";$/;"	p	interface:KWInequalityMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^            return @">=";$/;"	p	interface:KWInequalityMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^        return (self.subject != nil);$/;"	p	interface:KWNilMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^        return (self.subject == nil);$/;"	p	interface:KWNilMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^    return @[@"beNil", @"beNil:", @"beNonNil", @"beNonNil:"];$/;"	p	interface:KWNilMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^    return @[@"bePosted", @"bePostedWithObject:", @"bePostedWithUserInfo:", @"bePostedWithObject:andUserInfo:", @"bePostedEvaluatingBlock:"];$/;"	p	interface:KWNotificationMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.m	/^    return (numberOfMatches == 1);$/;"	p	interface:KWRegularExpressionPatternMatcher
return	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.m	/^    return @[@"matchPattern:", @"matchPattern:options:"];$/;"	p	interface:KWRegularExpressionPatternMatcher
return	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^            return;$/;"	p	interface:KWMock
return	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        return @"mock";$/;"	p	interface:KWMock
return	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        return;$/;"	p	interface:KWMock
return	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^        return;$/;"	p	interface:KWStub
return	Example/Pods/Kiwi/Classes/Verifiers/KWExistVerifier.m	/^        return @"should exist";$/;"	p	interface:KWExistVerifier
return	Example/Pods/Kiwi/Classes/Verifiers/KWExistVerifier.m	/^    return @"should not exist";$/;"	p	interface:KWExistVerifier
return	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^        return;$/;"	p	interface:KWMatchVerifier
returnType	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^        data = [self valueDataWithObjCType:returnType];$/;"	p	interface:KWStub
returnValueTimes	Example/Pods/BuildHeaders/Kiwi/KWStub.h	/^@property (nonatomic, readonly) id returnValueTimes;$/;"	p	interface:KWStub
returnValueTimes	Example/Pods/Headers/Kiwi/KWStub.h	/^@property (nonatomic, readonly) id returnValueTimes;$/;"	p	interface:KWStub
returnValueTimes	Example/Pods/Kiwi/Classes/Stubbing/KWStub.h	/^@property (nonatomic, readonly) id returnValueTimes;$/;"	p	interface:KWStub
returnValueTimes	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^        NSString *returnValueTimesString = returnValueTimes;$/;"	p	interface:KWStub
returnValueTimes	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^@synthesize returnValueTimes;$/;"	p	interface:KWStub
returnedValueTimes	Example/Pods/BuildHeaders/Kiwi/KWStub.h	/^@property (nonatomic, readonly) int returnedValueTimes;$/;"	p	interface:KWStub
returnedValueTimes	Example/Pods/Headers/Kiwi/KWStub.h	/^@property (nonatomic, readonly) int returnedValueTimes;$/;"	p	interface:KWStub
returnedValueTimes	Example/Pods/Kiwi/Classes/Stubbing/KWStub.h	/^@property (nonatomic, readonly) int returnedValueTimes;$/;"	p	interface:KWStub
returnedValueTimes	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^        returnedValueTimes++;$/;"	p	interface:KWStub
returnedValueTimes	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^@synthesize returnedValueTimes;$/;"	p	interface:KWStub
rootNode	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^@property (nonatomic, strong) KWContextNode *rootNode;$/;"	p	interface:KWExampleSuite
rootNode	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    [self.contextNodeStack addObject:rootNode];$/;"	p	interface:KWExampleSuiteBuilder
rootNode	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    self.currentExampleSuite = [[KWExampleSuite alloc] initWithRootNode:rootNode];$/;"	p	interface:KWExampleSuiteBuilder
sample	Example/Pods/BuildHeaders/Kiwi/KWProbe.h	/^- (void)sample;$/;"	m	protocol:KWProbe
sample	Example/Pods/Headers/Kiwi/KWProbe.h	/^- (void)sample;$/;"	m	protocol:KWProbe
sample	Example/Pods/Kiwi/Classes/Core/KWProbe.h	/^- (void)sample;$/;"	m	protocol:KWProbe
sample	Example/Pods/Kiwi/Classes/Core/KWProbePoller.m	/^        [probe sample];$/;"	p	interface:KWTimeout
sample	Example/Pods/Kiwi/Classes/Verifiers/KWAsyncVerifier.m	/^- (void)sample {$/;"	m	implementation:KWAsyncMatcherProbe
secondValue	Example/Pods/BuildHeaders/Kiwi/KWStub.h	/^@property (nonatomic, readonly) id secondValue;$/;"	p	interface:KWStub
secondValue	Example/Pods/Headers/Kiwi/KWStub.h	/^@property (nonatomic, readonly) id secondValue;$/;"	p	interface:KWStub
secondValue	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^            [self stubMessagePattern:messagePattern andReturn:value times:times afterThatReturn:secondValue];$/;"	p	interface:KWMock
secondValue	Example/Pods/Kiwi/Classes/Stubbing/KWStub.h	/^@property (nonatomic, readonly) id secondValue;$/;"	p	interface:KWStub
secondValue	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^            choosedForData = &secondValue;$/;"	p	interface:KWStub
secondValue	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^@synthesize secondValue;$/;"	p	interface:KWStub
selector	Example/Pods/BuildHeaders/Kiwi/KWMessagePattern.h	/^@property (nonatomic, readonly) SEL selector;$/;"	m	interface:KWMessagePattern
selector	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^@property (nonatomic, assign) SEL selector;$/;"	p	interface:KWUserDefinedMatcher
selector	Example/Pods/Headers/Kiwi/KWMessagePattern.h	/^@property (nonatomic, readonly) SEL selector;$/;"	m	interface:KWMessagePattern
selector	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^@property (nonatomic, assign) SEL selector;$/;"	p	interface:KWUserDefinedMatcher
selector	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^    SEL selector = [anInvocation selector];$/;"	p	interface:KWMatcherFactory
selector	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.h	/^@property (nonatomic, readonly) SEL selector;$/;"	m	interface:KWMessagePattern
selector	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.m	/^@synthesize selector;$/;"	m	implementation:KWMessagePattern
selector	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^        NSMethodSignature *signature = [self.subject methodSignatureForSelector:selector];$/;"	p	interface:KWHaveMatcher
selector	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    SEL selector = [self.invocation selector];$/;"	p	interface:KWHaveMatcher
selector	Example/Pods/Kiwi/Classes/Matchers/KWRespondToSelectorMatcher.m	/^@property (nonatomic, assign) SEL selector;$/;"	m	interface:KWRespondToSelectorMatcher
selector	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^@property (nonatomic, assign) SEL selector;$/;"	p	interface:KWUserDefinedMatcher
selector	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^@synthesize selector;$/;"	p	interface:KWUserDefinedMatcher
selector	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^        ((void (*)(id, SEL))[self.value methodForSelector:selector])(self.value, selector);$/;"	p	interface:KWStub
selectorAndArgumentFiltersString	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.m	/^- (NSString *)selectorAndArgumentFiltersString {$/;"	m	implementation:KWMessagePattern
selectorDescriptionAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)selectorDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
selectorDescriptionAtIndex:	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)selectorDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
selectorDescriptionAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (NSString *)selectorDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
selectorString	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.m	/^- (NSString *)selectorString {$/;"	m	implementation:KWMessagePattern
self	Example/Pods/Kiwi/Classes/Core/KWCaptureSpy.m	/^    return self;$/;"	p	interface:KWCaptureSpy
self	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    [[KWExampleSuiteBuilder sharedExampleSuiteBuilder] setCurrentExample:self];$/;"	p	interface:KWExample
self	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    [self.exampleNode acceptExampleNodeVisitor:self];$/;"	p	interface:KWExample
self	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    aNode.example = self;$/;"	p	interface:KWExample
self	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    id<KWVerifying> verifier = [KWMatchVerifier matchVerifierWithExpectationType:anExpectationType callSite:aCallSite matcherFactory:self.matcherFactory reporter:self];$/;"	p	interface:KWExample
self	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    return self;$/;"	p	interface:KWExample
self	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^  id verifier = [KWExistVerifier existVerifierWithExpectationType:anExpectationType callSite:aCallSite reporter:self];$/;"	p	interface:KWExample
self	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^    example.suite = self;$/;"	p	interface:KWExampleSuite
self	Example/Pods/Kiwi/Classes/Core/KWExampleSuite.m	/^    return self;$/;"	p	interface:KWExampleSuite
self	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    return self;$/;"	p	interface:KWExampleSuiteBuilder
self	Example/Pods/Kiwi/Classes/Core/KWFutureObject.m	/^  return self;$/;"	p	interface:KWFutureObject
self	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^    return self;$/;"	p	interface:KWMatcherFactory
self	Example/Pods/Kiwi/Classes/Core/KWProbePoller.m	/^    return self;$/;"	p	interface:KWTimeout
self	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^            [self.currentExample runWithDelegate:self];$/;"	p	interface:KWSpec
self	Example/Pods/Kiwi/Classes/Matchers/KWStringContainsMatcher.m	/^    return self;$/;"	p	interface:KWStringContainsMatcher
self	Example/Pods/Kiwi/Classes/Matchers/KWStringPrefixMatcher.m	/^    return self;$/;"	p	interface:KWStringPrefixMatcher
self	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^    return self;$/;"	p	interface:KWUserDefinedMatcher
self	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^            return self;$/;"	p	interface:KWMock
self	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return self;$/;"	p	interface:KWMock
self	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^    [aVisitor visitContextNode:self];$/;"	p	interface:KWContextNode
self	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^    return self;$/;"	p	interface:KWContextNode
self	Example/Pods/Kiwi/Classes/Nodes/KWItNode.m	/^    [aVisitor visitItNode:self];$/;"	p	interface:KWItNode
self	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    [aVisitor visitLetNode:self];$/;"	p	interface:KWLetNode
self	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    aNode.parent = self;$/;"	p	interface:KWLetNode
self	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    aNode.previous = self;$/;"	p	interface:KWLetNode
self	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    return self;$/;"	p	interface:KWLetNode
self	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    return self;$/;"	p	interface:KWStub
self	Example/Pods/Kiwi/Classes/Verifiers/KWExistVerifier.m	/^    return self;$/;"	p	interface:KWExistVerifier
self	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^    return self;$/;"	p	interface:KWMatchVerifier
set	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    NSMutableSet *protocolSet = [NSMutableSet set];$/;"	p	interface:KWMock
setArguments:	Example/Pods/Kiwi/Classes/Core/KWSymbolicator.m	/^- (void)setArguments:(NSArray *)arguments;$/;"	m	protocol:NSTask_KWWarningSuppressor
setEnvironment:	Example/Pods/Kiwi/Classes/Core/KWSymbolicator.m	/^- (void)setEnvironment:(NSDictionary *)dict;$/;"	m	protocol:NSTask_KWWarningSuppressor
setLaunchPath:	Example/Pods/Kiwi/Classes/Core/KWSymbolicator.m	/^- (void)setLaunchPath:(NSString *)path;$/;"	m	protocol:NSTask_KWWarningSuppressor
setMessageArgument:atIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+KiwiAdditions.h	/^- (void)setMessageArgument:(const void *)bytes atIndex:(NSUInteger)anIndex;$/;"	m	interface:NSInvocation
setMessageArgument:atIndex:	Example/Pods/Headers/Kiwi/NSInvocation+KiwiAdditions.h	/^- (void)setMessageArgument:(const void *)bytes atIndex:(NSUInteger)anIndex;$/;"	m	interface:NSInvocation
setMessageArgument:atIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+KiwiAdditions.h	/^- (void)setMessageArgument:(const void *)bytes atIndex:(NSUInteger)anIndex;$/;"	m	interface:NSInvocation
setMessageArgument:atIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+KiwiAdditions.m	/^- (void)setMessageArgument:(const void *)bytes atIndex:(NSUInteger)anIndex {$/;"	m	implementation:NSInvocation
setMessageArguments:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+KiwiAdditions.h	/^- (void)setMessageArguments:(const void *)firstBytes, ...;$/;"	m	interface:NSInvocation
setMessageArguments:	Example/Pods/Headers/Kiwi/NSInvocation+KiwiAdditions.h	/^- (void)setMessageArguments:(const void *)firstBytes, ...;$/;"	m	interface:NSInvocation
setMessageArguments:	Example/Pods/Kiwi/Classes/Core/NSInvocation+KiwiAdditions.h	/^- (void)setMessageArguments:(const void *)firstBytes, ...;$/;"	m	interface:NSInvocation
setMessageArguments:	Example/Pods/Kiwi/Classes/Core/NSInvocation+KiwiAdditions.m	/^- (void)setMessageArguments:(const void *)firstBytes, ... {$/;"	m	implementation:NSInvocation
setStandardOutput:	Example/Pods/Kiwi/Classes/Core/KWSymbolicator.m	/^- (void)setStandardOutput:(id)output;$/;"	m	protocol:NSTask_KWWarningSuppressor
setUp	Example/Pods/BuildHeaders/Kiwi/KWSuiteConfigurationBase.h	/^- (void)setUp;$/;"	m	interface:KWSuiteConfigurationBase
setUp	Example/Pods/Headers/Kiwi/KWSuiteConfigurationBase.h	/^- (void)setUp;$/;"	m	interface:KWSuiteConfigurationBase
setUp	Example/Pods/Kiwi/Classes/Config/KWAllTestsSuite.m	/^- (void)setUp {$/;"	m	interface:
setUp	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.h	/^- (void)setUp;$/;"	m	interface:KWSuiteConfigurationBase
setValueForKeyImplementation	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    setValueForKeyImplementation(self, _cmd, value, key);$/;"	p	interface:KWMock
setValueForKeyImplementation	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    setValueForKeyImplementation(self, _cmd, value, keyPath);$/;"	p	interface:KWMock
setWillEvaluateAgainstNegativeExpectation:	Example/Pods/BuildHeaders/Kiwi/KWMatching.h	/^- (void)setWillEvaluateAgainstNegativeExpectation:(BOOL)willEvaluateAgainstNegativeExpectation;$/;"	m	protocol:KWMatching
setWillEvaluateAgainstNegativeExpectation:	Example/Pods/Headers/Kiwi/KWMatching.h	/^- (void)setWillEvaluateAgainstNegativeExpectation:(BOOL)willEvaluateAgainstNegativeExpectation;$/;"	m	protocol:KWMatching
setWillEvaluateAgainstNegativeExpectation:	Example/Pods/Kiwi/Classes/Core/KWMatching.h	/^- (void)setWillEvaluateAgainstNegativeExpectation:(BOOL)willEvaluateAgainstNegativeExpectation;$/;"	m	protocol:KWMatching
setWillEvaluateMultipleTimes:	Example/Pods/BuildHeaders/Kiwi/KWMatching.h	/^- (void)setWillEvaluateMultipleTimes:(BOOL)shouldEvaluateMultipleTimes;$/;"	m	protocol:KWMatching
setWillEvaluateMultipleTimes:	Example/Pods/Headers/Kiwi/KWMatching.h	/^- (void)setWillEvaluateMultipleTimes:(BOOL)shouldEvaluateMultipleTimes;$/;"	m	protocol:KWMatching
setWillEvaluateMultipleTimes:	Example/Pods/Kiwi/Classes/Core/KWMatching.h	/^- (void)setWillEvaluateMultipleTimes:(BOOL)shouldEvaluateMultipleTimes;$/;"	m	protocol:KWMatching
sharedExampleSuiteBuilder	Example/Pods/BuildHeaders/Kiwi/KWExampleSuiteBuilder.h	/^+ (id)sharedExampleSuiteBuilder;$/;"	m	interface:KWExampleSuiteBuilder
sharedExampleSuiteBuilder	Example/Pods/Headers/Kiwi/KWExampleSuiteBuilder.h	/^+ (id)sharedExampleSuiteBuilder;$/;"	m	interface:KWExampleSuiteBuilder
sharedExampleSuiteBuilder	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.h	/^+ (id)sharedExampleSuiteBuilder;$/;"	m	interface:KWExampleSuiteBuilder
sharedExampleSuiteBuilder	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^    return sharedExampleSuiteBuilder;$/;"	p	interface:KWExampleSuiteBuilder
shortData	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSData *)shortData;$/;"	p	interface:KWValue
shortData	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSData *)shortData;$/;"	p	interface:KWValue
shortData	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSData *)shortData;$/;"	p	interface:KWValue
shortData	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSData *)shortData {$/;"	m	implementation:KWValue
shortDescriptionAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)shortDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
shortDescriptionAtIndex:	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)shortDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
shortDescriptionAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (NSString *)shortDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
shortValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (short)shortValue;$/;"	p	interface:KWValue
shortValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (short)shortValue;$/;"	p	interface:KWValue
shortValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (short)shortValue;$/;"	p	interface:KWValue
shortValue	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (short)shortValue {$/;"	m	implementation:KWValue
should	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define should attachToVerifier:KW_ADD_MATCH_VERIFIER(KWExpectationTypeShould)$/;"	M	interface:
should	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^- (void)should;$/;"	m	interface:NSObject
should	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define should attachToVerifier:KW_ADD_MATCH_VERIFIER(KWExpectationTypeShould)$/;"	M	interface:
should	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^- (void)should;$/;"	m	interface:NSObject
should	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define should attachToVerifier:KW_ADD_MATCH_VERIFIER(KWExpectationTypeShould)$/;"	M	interface:
should	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^- (void)should;$/;"	m	interface:NSObject
shouldAfterWait	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define shouldAfterWait attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShould, kKW_DEFAULT_PROBE_TIMEOUT, YES)$/;"	M	interface:
shouldAfterWait	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^- (void)shouldAfterWait;$/;"	m	interface:NSObject
shouldAfterWait	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define shouldAfterWait attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShould, kKW_DEFAULT_PROBE_TIMEOUT, YES)$/;"	M	interface:
shouldAfterWait	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^- (void)shouldAfterWait;$/;"	m	interface:NSObject
shouldAfterWait	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define shouldAfterWait attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShould, kKW_DEFAULT_PROBE_TIMEOUT, YES)$/;"	M	interface:
shouldAfterWait	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^- (void)shouldAfterWait;$/;"	m	interface:NSObject
shouldAfterWaitOf	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define shouldAfterWaitOf(timeout) attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShould, timeout, YES)$/;"	M	interface:
shouldAfterWaitOf	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^- (void)shouldAfterWaitOf;$/;"	m	interface:NSObject
shouldAfterWaitOf	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define shouldAfterWaitOf(timeout) attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShould, timeout, YES)$/;"	M	interface:
shouldAfterWaitOf	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^- (void)shouldAfterWaitOf;$/;"	m	interface:NSObject
shouldAfterWaitOf	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define shouldAfterWaitOf(timeout) attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShould, timeout, YES)$/;"	M	interface:
shouldAfterWaitOf	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^- (void)shouldAfterWaitOf;$/;"	m	interface:NSObject
shouldBeEvaluatedAtEndOfExample	Example/Pods/BuildHeaders/Kiwi/KWMatching.h	/^- (BOOL)shouldBeEvaluatedAtEndOfExample;$/;"	m	protocol:KWMatching
shouldBeEvaluatedAtEndOfExample	Example/Pods/Headers/Kiwi/KWMatching.h	/^- (BOOL)shouldBeEvaluatedAtEndOfExample;$/;"	m	protocol:KWMatching
shouldBeEvaluatedAtEndOfExample	Example/Pods/Kiwi/Classes/Core/KWMatching.h	/^- (BOOL)shouldBeEvaluatedAtEndOfExample;$/;"	m	protocol:KWMatching
shouldBeEvaluatedAtEndOfExample	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (BOOL)shouldBeEvaluatedAtEndOfExample {$/;"	m	implementation:KWReceiveMatcher
shouldBeNil	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define shouldBeNil attachToVerifier:KW_ADD_EXIST_VERIFIER(KWExpectationTypeShouldNot)$/;"	M	interface:
shouldBeNil	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define shouldBeNil attachToVerifier:KW_ADD_EXIST_VERIFIER(KWExpectationTypeShouldNot)$/;"	M	interface:
shouldBeNil	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define shouldBeNil attachToVerifier:KW_ADD_EXIST_VERIFIER(KWExpectationTypeShouldNot)$/;"	M	interface:
shouldEventually	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define shouldEventually attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShould, kKW_DEFAULT_PROBE_TIMEOUT, NO)$/;"	M	interface:
shouldEventually	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^- (void)shouldEventually;$/;"	m	interface:NSObject
shouldEventually	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define shouldEventually attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShould, kKW_DEFAULT_PROBE_TIMEOUT, NO)$/;"	M	interface:
shouldEventually	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^- (void)shouldEventually;$/;"	m	interface:NSObject
shouldEventually	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define shouldEventually attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShould, kKW_DEFAULT_PROBE_TIMEOUT, NO)$/;"	M	interface:
shouldEventually	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^- (void)shouldEventually;$/;"	m	interface:NSObject
shouldEventuallyBeforeTimingOutAfter	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define shouldEventuallyBeforeTimingOutAfter(timeout) attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShould, timeout, NO)$/;"	M	interface:
shouldEventuallyBeforeTimingOutAfter	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^- (void)shouldEventuallyBeforeTimingOutAfter;$/;"	m	interface:NSObject
shouldEventuallyBeforeTimingOutAfter	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define shouldEventuallyBeforeTimingOutAfter(timeout) attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShould, timeout, NO)$/;"	M	interface:
shouldEventuallyBeforeTimingOutAfter	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^- (void)shouldEventuallyBeforeTimingOutAfter;$/;"	m	interface:NSObject
shouldEventuallyBeforeTimingOutAfter	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define shouldEventuallyBeforeTimingOutAfter(timeout) attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShould, timeout, NO)$/;"	M	interface:
shouldEventuallyBeforeTimingOutAfter	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^- (void)shouldEventuallyBeforeTimingOutAfter;$/;"	m	interface:NSObject
shouldNot	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define shouldNot attachToVerifier:KW_ADD_MATCH_VERIFIER(KWExpectationTypeShouldNot)$/;"	M	interface:
shouldNot	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^- (void)shouldNot;$/;"	m	interface:NSObject
shouldNot	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define shouldNot attachToVerifier:KW_ADD_MATCH_VERIFIER(KWExpectationTypeShouldNot)$/;"	M	interface:
shouldNot	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^- (void)shouldNot;$/;"	m	interface:NSObject
shouldNot	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define shouldNot attachToVerifier:KW_ADD_MATCH_VERIFIER(KWExpectationTypeShouldNot)$/;"	M	interface:
shouldNot	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^- (void)shouldNot;$/;"	m	interface:NSObject
shouldNotAfterWait	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define shouldNotAfterWait attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShouldNot, kKW_DEFAULT_PROBE_TIMEOUT, YES)$/;"	M	interface:
shouldNotAfterWait	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^- (void)shouldNotAfterWait;$/;"	m	interface:NSObject
shouldNotAfterWait	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define shouldNotAfterWait attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShouldNot, kKW_DEFAULT_PROBE_TIMEOUT, YES)$/;"	M	interface:
shouldNotAfterWait	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^- (void)shouldNotAfterWait;$/;"	m	interface:NSObject
shouldNotAfterWait	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define shouldNotAfterWait attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShouldNot, kKW_DEFAULT_PROBE_TIMEOUT, YES)$/;"	M	interface:
shouldNotAfterWait	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^- (void)shouldNotAfterWait;$/;"	m	interface:NSObject
shouldNotAfterWaitOf	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define shouldNotAfterWaitOf(timeout) attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShouldNot, timeout, YES)$/;"	M	interface:
shouldNotAfterWaitOf	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^- (void)shouldNotAfterWaitOf;$/;"	m	interface:NSObject
shouldNotAfterWaitOf	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define shouldNotAfterWaitOf(timeout) attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShouldNot, timeout, YES)$/;"	M	interface:
shouldNotAfterWaitOf	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^- (void)shouldNotAfterWaitOf;$/;"	m	interface:NSObject
shouldNotAfterWaitOf	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define shouldNotAfterWaitOf(timeout) attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShouldNot, timeout, YES)$/;"	M	interface:
shouldNotAfterWaitOf	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^- (void)shouldNotAfterWaitOf;$/;"	m	interface:NSObject
shouldNotBeNil	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define shouldNotBeNil attachToVerifier:KW_ADD_EXIST_VERIFIER(KWExpectationTypeShould)$/;"	M	interface:
shouldNotBeNil	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define shouldNotBeNil attachToVerifier:KW_ADD_EXIST_VERIFIER(KWExpectationTypeShould)$/;"	M	interface:
shouldNotBeNil	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define shouldNotBeNil attachToVerifier:KW_ADD_EXIST_VERIFIER(KWExpectationTypeShould)$/;"	M	interface:
shouldNotEventually	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define shouldNotEventually attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShouldNot, kKW_DEFAULT_PROBE_TIMEOUT, NO)$/;"	M	interface:
shouldNotEventually	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^- (void)shouldNotEventually;$/;"	m	interface:NSObject
shouldNotEventually	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define shouldNotEventually attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShouldNot, kKW_DEFAULT_PROBE_TIMEOUT, NO)$/;"	M	interface:
shouldNotEventually	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^- (void)shouldNotEventually;$/;"	m	interface:NSObject
shouldNotEventually	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define shouldNotEventually attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShouldNot, kKW_DEFAULT_PROBE_TIMEOUT, NO)$/;"	M	interface:
shouldNotEventually	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^- (void)shouldNotEventually;$/;"	m	interface:NSObject
shouldNotEventuallyBeforeTimingOutAfter	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define shouldNotEventuallyBeforeTimingOutAfter(timeout) attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShouldNot, timeout, NO)$/;"	M	interface:
shouldNotEventuallyBeforeTimingOutAfter	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^- (void)shouldNotEventuallyBeforeTimingOutAfter;$/;"	m	interface:NSObject
shouldNotEventuallyBeforeTimingOutAfter	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define shouldNotEventuallyBeforeTimingOutAfter(timeout) attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShouldNot, timeout, NO)$/;"	M	interface:
shouldNotEventuallyBeforeTimingOutAfter	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^- (void)shouldNotEventuallyBeforeTimingOutAfter;$/;"	m	interface:NSObject
shouldNotEventuallyBeforeTimingOutAfter	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define shouldNotEventuallyBeforeTimingOutAfter(timeout) attachToVerifier:KW_ADD_ASYNC_VERIFIER(KWExpectationTypeShouldNot, timeout, NO)$/;"	M	interface:
shouldNotEventuallyBeforeTimingOutAfter	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^- (void)shouldNotEventuallyBeforeTimingOutAfter;$/;"	m	interface:NSObject
shouldWait	Example/Pods/BuildHeaders/Kiwi/KWAsyncVerifier.h	/^+ (id)asyncVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite matcherFactory:(KWMatcherFactory *)aMatcherFactory reporter:(id<KWReporting>)aReporter probeTimeout:(NSTimeInterval)probeTimeout shouldWait:(BOOL)shouldWait;$/;"	p	interface:KWAsyncVerifier
shouldWait	Example/Pods/BuildHeaders/Kiwi/KWAsyncVerifier.h	/^@property (nonatomic, assign) BOOL shouldWait;$/;"	p	interface:KWAsyncVerifier
shouldWait	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^- (id)addAsyncVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite timeout:(NSTimeInterval)timeout shouldWait:(BOOL)shouldWait;$/;"	p	interface:KWExample
shouldWait	Example/Pods/Headers/Kiwi/KWAsyncVerifier.h	/^+ (id)asyncVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite matcherFactory:(KWMatcherFactory *)aMatcherFactory reporter:(id<KWReporting>)aReporter probeTimeout:(NSTimeInterval)probeTimeout shouldWait:(BOOL)shouldWait;$/;"	p	interface:KWAsyncVerifier
shouldWait	Example/Pods/Headers/Kiwi/KWAsyncVerifier.h	/^@property (nonatomic, assign) BOOL shouldWait;$/;"	p	interface:KWAsyncVerifier
shouldWait	Example/Pods/Headers/Kiwi/KWExample.h	/^- (id)addAsyncVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite timeout:(NSTimeInterval)timeout shouldWait:(BOOL)shouldWait;$/;"	p	interface:KWExample
shouldWait	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^- (id)addAsyncVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite timeout:(NSTimeInterval)timeout shouldWait:(BOOL)shouldWait;$/;"	p	interface:KWExample
shouldWait	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^  id verifier = [KWAsyncVerifier asyncVerifierWithExpectationType:anExpectationType callSite:aCallSite matcherFactory:self.matcherFactory reporter:self probeTimeout:timeout shouldWait: shouldWait];$/;"	p	interface:KWExample
shouldWait	Example/Pods/Kiwi/Classes/Core/KWProbePoller.m	/^@property (nonatomic, assign) BOOL shouldWait;$/;"	p	interface:KWTimeout
shouldWait	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^    return [[[KWExampleSuiteBuilder sharedExampleSuiteBuilder] currentExample] addAsyncVerifierWithExpectationType:anExpectationType callSite:aCallSite timeout:timeout shouldWait: shouldWait];$/;"	p	interface:KWSpec
shouldWait	Example/Pods/Kiwi/Classes/Verifiers/KWAsyncVerifier.h	/^+ (id)asyncVerifierWithExpectationType:(KWExpectationType)anExpectationType callSite:(KWCallSite *)aCallSite matcherFactory:(KWMatcherFactory *)aMatcherFactory reporter:(id<KWReporting>)aReporter probeTimeout:(NSTimeInterval)probeTimeout shouldWait:(BOOL)shouldWait;$/;"	p	interface:KWAsyncVerifier
shouldWait	Example/Pods/Kiwi/Classes/Verifiers/KWAsyncVerifier.h	/^@property (nonatomic, assign) BOOL shouldWait;$/;"	p	interface:KWAsyncVerifier
signature	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^        return signature;$/;"	p	interface:KWMatchVerifier
specify	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^void specify(void (^block)(void));$/;"	p	interface:KWExample
specify	Example/Pods/Headers/Kiwi/KWExample.h	/^void specify(void (^block)(void));$/;"	p	interface:KWExample
specify	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^void specify(void (^block)(void));$/;"	p	interface:KWExample
startWithString:	Example/Pods/BuildHeaders/Kiwi/KWContainStringMatcher.h	/^- (void)startWithString:(NSString *)prefix;$/;"	m	interface:KWContainStringMatcher
startWithString:	Example/Pods/Headers/Kiwi/KWContainStringMatcher.h	/^- (void)startWithString:(NSString *)prefix;$/;"	m	interface:KWContainStringMatcher
startWithString:	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.h	/^- (void)startWithString:(NSString *)prefix;$/;"	m	interface:KWContainStringMatcher
stopTracking	Example/Pods/BuildHeaders/Kiwi/KWMessageTracker.h	/^- (void)stopTracking;$/;"	p	interface:KWMessageTracker
stopTracking	Example/Pods/Headers/Kiwi/KWMessageTracker.h	/^- (void)stopTracking;$/;"	p	interface:KWMessageTracker
stopTracking	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.h	/^- (void)stopTracking;$/;"	p	interface:KWMessageTracker
stopTracking	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.m	/^- (void)stopTracking {$/;"	m	implementation:KWMessageTracker
stringByAppendingString	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^            [parts addObject:[[context description] stringByAppendingString:@","]];$/;"	p	interface:KWExample
stringValue	Example/Pods/BuildHeaders/Kiwi/KWMessagePattern.h	/^- (NSString *)stringValue;$/;"	p	interface:KWMessagePattern
stringValue	Example/Pods/Headers/Kiwi/KWMessagePattern.h	/^- (NSString *)stringValue;$/;"	p	interface:KWMessagePattern
stringValue	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.h	/^- (NSString *)stringValue;$/;"	p	interface:KWMessagePattern
stringValue	Example/Pods/Kiwi/Classes/Core/KWMessagePattern.m	/^- (NSString *)stringValue {$/;"	m	implementation:KWMessagePattern
stringValue	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^                                                 [messagePattern stringValue]];$/;"	p	interface:KWMock
stringWithFormat	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^        return [NSString stringWithFormat:@"expected subject not to be nil"];$/;"	p	interface:KWNilMatcher
stringWithFormat	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^    return [NSString stringWithFormat:@"expected subject not to be nil"];$/;"	p	interface:KWNilMatcher
stringWithShellCommand:arguments:	Example/Pods/BuildHeaders/Kiwi/KWSymbolicator.h	/^+ (NSString *)stringWithShellCommand:(NSString *)command arguments:(NSArray *)arguments;$/;"	c	interface:NSString
stringWithShellCommand:arguments:	Example/Pods/Headers/Kiwi/KWSymbolicator.h	/^+ (NSString *)stringWithShellCommand:(NSString *)command arguments:(NSArray *)arguments;$/;"	c	interface:NSString
stringWithShellCommand:arguments:	Example/Pods/Kiwi/Classes/Core/KWSymbolicator.h	/^+ (NSString *)stringWithShellCommand:(NSString *)command arguments:(NSArray *)arguments;$/;"	c	interface:NSString
stringWithShellCommand:arguments:	Example/Pods/Kiwi/Classes/Core/KWSymbolicator.m	/^+ (NSString *)stringWithShellCommand:(NSString *)command arguments:(NSArray *)arguments {$/;"	c	implementation:NSString
structDescriptionAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)structDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
structDescriptionAtIndex:	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)structDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
structDescriptionAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (NSString *)structDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
stub	Example/Pods/BuildHeaders/Kiwi/KWMock.h	/^- (id)stub;$/;"	p	protocol:KWMessageSpying
stub	Example/Pods/Headers/Kiwi/KWMock.h	/^- (id)stub;$/;"	p	protocol:KWMessageSpying
stub	Example/Pods/Kiwi/Classes/Mocking/KWMock.h	/^- (id)stub;$/;"	p	protocol:KWMessageSpying
stub	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^            return stub;$/;"	p	interface:KWMock
stub	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        [self.stubs removeObject:stub];$/;"	p	interface:KWMock
stub	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    [self.stubs addObject:stub];$/;"	p	interface:KWMock
stub	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^- (id)stub {$/;"	m	implementation:NSObject
stub:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)stub:(SEL)aSelector;$/;"	c	protocol:KWMessageSpying
stub:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stub:(SEL)aSelector;$/;"	m	protocol:KWMessageSpying
stub:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)stub:(SEL)aSelector;$/;"	c	protocol:KWMessageSpying
stub:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stub:(SEL)aSelector;$/;"	m	protocol:KWMessageSpying
stub:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^+ (void)stub:(SEL)aSelector;$/;"	c	protocol:KWMessageSpying
stub:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^- (void)stub:(SEL)aSelector;$/;"	m	protocol:KWMessageSpying
stub:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^+ (void)stub:(SEL)aSelector {$/;"	c	implementation:NSObject
stub:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^- (void)stub:(SEL)aSelector {$/;"	m	implementation:NSObject
stub:andReturn:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)stub:(SEL)aSelector andReturn:(id)aValue;$/;"	c	protocol:KWMessageSpying
stub:andReturn:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stub:(SEL)aSelector andReturn:(id)aValue;$/;"	m	protocol:KWMessageSpying
stub:andReturn:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)stub:(SEL)aSelector andReturn:(id)aValue;$/;"	c	protocol:KWMessageSpying
stub:andReturn:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stub:(SEL)aSelector andReturn:(id)aValue;$/;"	m	protocol:KWMessageSpying
stub:andReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^+ (void)stub:(SEL)aSelector andReturn:(id)aValue;$/;"	c	protocol:KWMessageSpying
stub:andReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^- (void)stub:(SEL)aSelector andReturn:(id)aValue;$/;"	m	protocol:KWMessageSpying
stub:andReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^+ (void)stub:(SEL)aSelector andReturn:(id)aValue {$/;"	c	implementation:NSObject
stub:andReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^- (void)stub:(SEL)aSelector andReturn:(id)aValue {$/;"	m	implementation:NSObject
stub:andReturn:times:afterThatReturn:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)stub:(SEL)aSelector andReturn:(id)aValue times:(NSNumber *)times afterThatReturn:(id)aSecondValue;$/;"	c	protocol:KWMessageSpying
stub:andReturn:times:afterThatReturn:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stub:(SEL)aSelector andReturn:(id)aValue times:(NSNumber *)times afterThatReturn:(id)aSecondValue;$/;"	m	protocol:KWMessageSpying
stub:andReturn:times:afterThatReturn:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)stub:(SEL)aSelector andReturn:(id)aValue times:(NSNumber *)times afterThatReturn:(id)aSecondValue;$/;"	c	protocol:KWMessageSpying
stub:andReturn:times:afterThatReturn:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stub:(SEL)aSelector andReturn:(id)aValue times:(NSNumber *)times afterThatReturn:(id)aSecondValue;$/;"	m	protocol:KWMessageSpying
stub:andReturn:times:afterThatReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^+ (void)stub:(SEL)aSelector andReturn:(id)aValue times:(NSNumber *)times afterThatReturn:(id)aSecondValue;$/;"	c	protocol:KWMessageSpying
stub:andReturn:times:afterThatReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^- (void)stub:(SEL)aSelector andReturn:(id)aValue times:(NSNumber *)times afterThatReturn:(id)aSecondValue;$/;"	m	protocol:KWMessageSpying
stub:andReturn:times:afterThatReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^+ (void)stub:(SEL)aSelector andReturn:(id)aValue times:(NSNumber *)times afterThatReturn:(id)aSecondValue {$/;"	c	implementation:NSObject
stub:andReturn:times:afterThatReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^- (void)stub:(SEL)aSelector andReturn:(id)aValue times:(NSNumber *)times afterThatReturn:(id)aSecondValue {$/;"	m	implementation:NSObject
stub:andReturn:withArguments:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)stub:(SEL)aSelector andReturn:(id)aValue withArguments:(id)firstArgument, ...;$/;"	c	protocol:KWMessageSpying
stub:andReturn:withArguments:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stub:(SEL)aSelector andReturn:(id)aValue withArguments:(id)firstArgument, ...;$/;"	m	protocol:KWMessageSpying
stub:andReturn:withArguments:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)stub:(SEL)aSelector andReturn:(id)aValue withArguments:(id)firstArgument, ...;$/;"	c	protocol:KWMessageSpying
stub:andReturn:withArguments:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stub:(SEL)aSelector andReturn:(id)aValue withArguments:(id)firstArgument, ...;$/;"	m	protocol:KWMessageSpying
stub:andReturn:withArguments:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^+ (void)stub:(SEL)aSelector andReturn:(id)aValue withArguments:(id)firstArgument, ...;$/;"	c	protocol:KWMessageSpying
stub:andReturn:withArguments:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^- (void)stub:(SEL)aSelector andReturn:(id)aValue withArguments:(id)firstArgument, ...;$/;"	m	protocol:KWMessageSpying
stub:andReturn:withArguments:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^+ (void)stub:(SEL)aSelector andReturn:(id)aValue withArguments:(id)firstArgument, ... {$/;"	c	implementation:NSObject
stub:andReturn:withArguments:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^- (void)stub:(SEL)aSelector andReturn:(id)aValue withArguments:(id)firstArgument, ... {$/;"	m	implementation:NSObject
stub:withArguments:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)stub:(SEL)aSelector withArguments:(id)firstArgument, ...;$/;"	c	protocol:KWMessageSpying
stub:withArguments:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stub:(SEL)aSelector withArguments:(id)firstArgument, ...;$/;"	m	protocol:KWMessageSpying
stub:withArguments:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)stub:(SEL)aSelector withArguments:(id)firstArgument, ...;$/;"	c	protocol:KWMessageSpying
stub:withArguments:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stub:(SEL)aSelector withArguments:(id)firstArgument, ...;$/;"	m	protocol:KWMessageSpying
stub:withArguments:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^+ (void)stub:(SEL)aSelector withArguments:(id)firstArgument, ...;$/;"	c	protocol:KWMessageSpying
stub:withArguments:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^- (void)stub:(SEL)aSelector withArguments:(id)firstArgument, ...;$/;"	m	protocol:KWMessageSpying
stub:withArguments:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^+ (void)stub:(SEL)aSelector withArguments:(id)firstArgument, ... {$/;"	c	implementation:NSObject
stub:withArguments:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^- (void)stub:(SEL)aSelector withArguments:(id)firstArgument, ... {$/;"	m	implementation:NSObject
stub:withBlock:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)stub:(SEL)aSelector withBlock:(id (^)(NSArray *params))block;$/;"	c	protocol:KWMessageSpying
stub:withBlock:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stub:(SEL)aSelector withBlock:(id (^)(NSArray *params))block;$/;"	m	protocol:KWMessageSpying
stub:withBlock:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)stub:(SEL)aSelector withBlock:(id (^)(NSArray *params))block;$/;"	c	protocol:KWMessageSpying
stub:withBlock:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stub:(SEL)aSelector withBlock:(id (^)(NSArray *params))block;$/;"	m	protocol:KWMessageSpying
stub:withBlock:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^+ (void)stub:(SEL)aSelector withBlock:(id (^)(NSArray *params))block;$/;"	c	protocol:KWMessageSpying
stub:withBlock:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^- (void)stub:(SEL)aSelector withBlock:(id (^)(NSArray *params))block;$/;"	m	protocol:KWMessageSpying
stub:withBlock:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^+ (void)stub:(SEL)aSelector withBlock:(id (^)(NSArray *))block {$/;"	c	implementation:NSObject
stub:withBlock:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^- (void)stub:(SEL)aSelector withBlock:(id (^)(NSArray *))block {$/;"	m	implementation:NSObject
stubAndReturn:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^- (id)stubAndReturn:(id)aValue DEPRECATED_ATTRIBUTE;$/;"	m	protocol:KWMessageSpying
stubAndReturn:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^- (id)stubAndReturn:(id)aValue DEPRECATED_ATTRIBUTE;$/;"	m	protocol:KWMessageSpying
stubAndReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^- (id)stubAndReturn:(id)aValue DEPRECATED_ATTRIBUTE;$/;"	m	protocol:KWMessageSpying
stubAndReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^- (id)stubAndReturn:(id)aValue {$/;"	m	implementation:NSObject
stubAndReturn:times:afterThatReturn:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^- (id)stubAndReturn:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue DEPRECATED_ATTRIBUTE;$/;"	m	protocol:KWMessageSpying
stubAndReturn:times:afterThatReturn:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^- (id)stubAndReturn:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue DEPRECATED_ATTRIBUTE;$/;"	m	protocol:KWMessageSpying
stubAndReturn:times:afterThatReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^- (id)stubAndReturn:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue DEPRECATED_ATTRIBUTE;$/;"	m	protocol:KWMessageSpying
stubAndReturn:times:afterThatReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^- (id)stubAndReturn:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue {$/;"	m	implementation:NSObject
stubMessagePattern:andReturn:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue;$/;"	c	protocol:KWMessageSpying
stubMessagePattern:andReturn:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue;$/;"	m	protocol:KWMessageSpying
stubMessagePattern:andReturn:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue;$/;"	c	protocol:KWMessageSpying
stubMessagePattern:andReturn:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue;$/;"	m	protocol:KWMessageSpying
stubMessagePattern:andReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^+ (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue;$/;"	c	protocol:KWMessageSpying
stubMessagePattern:andReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue;$/;"	m	protocol:KWMessageSpying
stubMessagePattern:andReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^+ (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue {$/;"	c	implementation:NSObject
stubMessagePattern:andReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue {$/;"	m	implementation:NSObject
stubMessagePattern:andReturn:overrideExisting:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue overrideExisting:(BOOL)overrideExisting;$/;"	m	protocol:KWMessageSpying
stubMessagePattern:andReturn:overrideExisting:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue overrideExisting:(BOOL)overrideExisting;$/;"	m	protocol:KWMessageSpying
stubMessagePattern:andReturn:overrideExisting:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue overrideExisting:(BOOL)overrideExisting;$/;"	m	protocol:KWMessageSpying
stubMessagePattern:andReturn:overrideExisting:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^+ (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue overrideExisting:(BOOL)override {$/;"	c	implementation:NSObject
stubMessagePattern:andReturn:overrideExisting:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue overrideExisting:(BOOL)overrideExisting {$/;"	m	implementation:NSObject
stubMessagePattern:andReturn:times:afterThatReturn:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue;$/;"	c	protocol:KWMessageSpying
stubMessagePattern:andReturn:times:afterThatReturn:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue;$/;"	m	protocol:KWMessageSpying
stubMessagePattern:andReturn:times:afterThatReturn:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue;$/;"	c	protocol:KWMessageSpying
stubMessagePattern:andReturn:times:afterThatReturn:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue;$/;"	m	protocol:KWMessageSpying
stubMessagePattern:andReturn:times:afterThatReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^+ (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue;$/;"	c	protocol:KWMessageSpying
stubMessagePattern:andReturn:times:afterThatReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue;$/;"	m	protocol:KWMessageSpying
stubMessagePattern:andReturn:times:afterThatReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^+ (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue {$/;"	c	implementation:NSObject
stubMessagePattern:andReturn:times:afterThatReturn:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue {$/;"	m	implementation:NSObject
stubMessagePattern:andReturn:times:afterThatReturn:overrideExisting:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^+ (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern andReturn:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue overrideExisting:(BOOL)override {$/;"	c	implementation:NSObject
stubMessagePattern:withBlock:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern withBlock:(id (^)(NSArray *params))block;$/;"	c	protocol:KWMessageSpying
stubMessagePattern:withBlock:	Example/Pods/BuildHeaders/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern withBlock:(id (^)(NSArray *params))block;$/;"	m	protocol:KWMessageSpying
stubMessagePattern:withBlock:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^+ (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern withBlock:(id (^)(NSArray *params))block;$/;"	c	protocol:KWMessageSpying
stubMessagePattern:withBlock:	Example/Pods/Headers/Kiwi/NSObject+KiwiStubAdditions.h	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern withBlock:(id (^)(NSArray *params))block;$/;"	m	protocol:KWMessageSpying
stubMessagePattern:withBlock:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^+ (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern withBlock:(id (^)(NSArray *params))block;$/;"	c	protocol:KWMessageSpying
stubMessagePattern:withBlock:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.h	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern withBlock:(id (^)(NSArray *params))block;$/;"	m	protocol:KWMessageSpying
stubMessagePattern:withBlock:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^+ (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern withBlock:(id (^)(NSArray *params))block {$/;"	c	implementation:NSObject
stubMessagePattern:withBlock:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^- (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern withBlock:(id (^)(NSArray *params))block {$/;"	m	implementation:NSObject
stubMessagePattern:withBlock:overrideExisting:	Example/Pods/Kiwi/Classes/Stubbing/NSObject+KiwiStubAdditions.m	/^+ (void)stubMessagePattern:(KWMessagePattern *)aMessagePattern withBlock:(id (^)(NSArray *params))block  overrideExisting:(BOOL)override {$/;"	c	implementation:NSObject
stubWithMessagePattern:	Example/Pods/BuildHeaders/Kiwi/KWStub.h	/^+ (id)stubWithMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	c	interface:KWStub
stubWithMessagePattern:	Example/Pods/Headers/Kiwi/KWStub.h	/^+ (id)stubWithMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	c	interface:KWStub
stubWithMessagePattern:	Example/Pods/Kiwi/Classes/Stubbing/KWStub.h	/^+ (id)stubWithMessagePattern:(KWMessagePattern *)aMessagePattern;$/;"	c	interface:KWStub
stubWithMessagePattern:block:	Example/Pods/BuildHeaders/Kiwi/KWStub.h	/^+ (id)stubWithMessagePattern:(KWMessagePattern *)aMessagePattern block:(id (^)(NSArray *params))aBlock;$/;"	c	interface:KWStub
stubWithMessagePattern:block:	Example/Pods/Headers/Kiwi/KWStub.h	/^+ (id)stubWithMessagePattern:(KWMessagePattern *)aMessagePattern block:(id (^)(NSArray *params))aBlock;$/;"	c	interface:KWStub
stubWithMessagePattern:block:	Example/Pods/Kiwi/Classes/Stubbing/KWStub.h	/^+ (id)stubWithMessagePattern:(KWMessagePattern *)aMessagePattern block:(id (^)(NSArray *params))aBlock;$/;"	c	interface:KWStub
stubWithMessagePattern:value:	Example/Pods/BuildHeaders/Kiwi/KWStub.h	/^+ (id)stubWithMessagePattern:(KWMessagePattern *)aMessagePattern value:(id)aValue;$/;"	c	interface:KWStub
stubWithMessagePattern:value:	Example/Pods/Headers/Kiwi/KWStub.h	/^+ (id)stubWithMessagePattern:(KWMessagePattern *)aMessagePattern value:(id)aValue;$/;"	c	interface:KWStub
stubWithMessagePattern:value:	Example/Pods/Kiwi/Classes/Stubbing/KWStub.h	/^+ (id)stubWithMessagePattern:(KWMessagePattern *)aMessagePattern value:(id)aValue;$/;"	c	interface:KWStub
stubWithMessagePattern:value:times:afterThatReturn:	Example/Pods/BuildHeaders/Kiwi/KWStub.h	/^+ (id)stubWithMessagePattern:(KWMessagePattern *)aMessagePattern value:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue;$/;"	c	interface:KWStub
stubWithMessagePattern:value:times:afterThatReturn:	Example/Pods/Headers/Kiwi/KWStub.h	/^+ (id)stubWithMessagePattern:(KWMessagePattern *)aMessagePattern value:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue;$/;"	c	interface:KWStub
stubWithMessagePattern:value:times:afterThatReturn:	Example/Pods/Kiwi/Classes/Stubbing/KWStub.h	/^+ (id)stubWithMessagePattern:(KWMessagePattern *)aMessagePattern value:(id)aValue times:(id)times afterThatReturn:(id)aSecondValue;$/;"	c	interface:KWStub
stubs	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^@property (nonatomic, readonly) NSMutableArray *stubs;$/;"	p	interface:KWMock
subject	Example/Pods/BuildHeaders/Kiwi/KWExistVerifier.h	/^@property (nonatomic, strong) id subject;$/;"	m	protocol:KWReporting
subject	Example/Pods/BuildHeaders/Kiwi/KWMatchVerifier.h	/^@property (nonatomic, strong) id subject;$/;"	p	protocol:KWMatching
subject	Example/Pods/BuildHeaders/Kiwi/KWMatcher.h	/^@property (nonatomic, strong) id subject;$/;"	m	interface:KWMatcher
subject	Example/Pods/BuildHeaders/Kiwi/KWMessageTracker.h	/^@property (nonatomic, readonly) id subject;$/;"	m	interface:KWMessageTracker
subject	Example/Pods/BuildHeaders/Kiwi/KWUserDefinedMatcher.h	/^- (KWUserDefinedMatcher *)buildMatcherWithSubject:(id)subject;$/;"	p	interface:KWUserDefinedMatcher
subject	Example/Pods/BuildHeaders/Kiwi/KWVerifying.h	/^@property (nonatomic, strong) id subject;$/;"	p	protocol:KWVerifying
subject	Example/Pods/Headers/Kiwi/KWExistVerifier.h	/^@property (nonatomic, strong) id subject;$/;"	m	protocol:KWReporting
subject	Example/Pods/Headers/Kiwi/KWMatchVerifier.h	/^@property (nonatomic, strong) id subject;$/;"	p	protocol:KWMatching
subject	Example/Pods/Headers/Kiwi/KWMatcher.h	/^@property (nonatomic, strong) id subject;$/;"	m	interface:KWMatcher
subject	Example/Pods/Headers/Kiwi/KWMessageTracker.h	/^@property (nonatomic, readonly) id subject;$/;"	m	interface:KWMessageTracker
subject	Example/Pods/Headers/Kiwi/KWUserDefinedMatcher.h	/^- (KWUserDefinedMatcher *)buildMatcherWithSubject:(id)subject;$/;"	p	interface:KWUserDefinedMatcher
subject	Example/Pods/Headers/Kiwi/KWVerifying.h	/^@property (nonatomic, strong) id subject;$/;"	p	protocol:KWVerifying
subject	Example/Pods/Kiwi/Classes/Core/KWMatcher.h	/^@property (nonatomic, strong) id subject;$/;"	m	interface:KWMatcher
subject	Example/Pods/Kiwi/Classes/Core/KWMatcher.m	/^{$/;"	m	implementation:KWMatcher
subject	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^        return [[KWMatchers matchers] matcherForSelector:selector subject:subject];$/;"	p	interface:KWMatcherFactory
subject	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^    Class matcherClass = [self matcherClassForSelector:selector subject:subject];$/;"	p	interface:KWMatcherFactory
subject	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^    return [[matcherClass alloc] initWithSubject:subject];$/;"	p	interface:KWMatcherFactory
subject	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.h	/^@property (nonatomic, readonly) id subject;$/;"	m	interface:KWMessageTracker
subject	Example/Pods/Kiwi/Classes/Matchers/KWBeBetweenMatcher.m	/^                                      [KWFormatter formatObject:self.subject]];$/;"	p	interface:KWBeBetweenMatcher
subject	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^                                      [KWFormatter formatObject:self.subject]];$/;"	p	interface:KWBeWithinMatcher
subject	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.m	/^    NSString *subjectString = (NSString *)self.subject;$/;"	p	interface:KWContainStringMatcher
subject	Example/Pods/Kiwi/Classes/Matchers/KWGenericMatcher.m	/^    return [KWGenericMatchEvaluator genericMatcher:self.matcher matches:self.subject];$/;"	p	interface:KWGenericMatcher
subject	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^        [self.invocation invokeWithTarget:self.subject];$/;"	p	interface:KWHaveMatcher
subject	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^        return self.subject;$/;"	p	interface:KWHaveMatcher
subject	Example/Pods/Kiwi/Classes/Matchers/KWInequalityMatcher.m	/^                                      [KWFormatter formatObject:self.subject]];$/;"	p	interface:KWInequalityMatcher
subject	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^                [KWFormatter formatObject:self.subject]];$/;"	p	interface:KWNilMatcher
subject	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^    NSMutableString *message = [NSMutableString stringWithFormat:@"receive %@ notification", [KWFormatter formatObject:self.subject]];$/;"	p	interface:KWNotificationMatcher
subject	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^    return [NSString stringWithFormat:@"%@ be posted", self.subject];$/;"	p	interface:KWNotificationMatcher
subject	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.m	/^    NSString *subjectString = (NSString *)self.subject;$/;"	p	interface:KWRegularExpressionPatternMatcher
subject	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.h	/^- (KWUserDefinedMatcher *)buildMatcherWithSubject:(id)subject;$/;"	p	interface:KWUserDefinedMatcher
subject	Example/Pods/Kiwi/Classes/Matchers/KWUserDefinedMatcher.m	/^    [matcher setSubject:subject];$/;"	p	interface:KWUserDefinedMatcher
subject	Example/Pods/Kiwi/Classes/Verifiers/KWExistVerifier.h	/^@property (nonatomic, strong) id subject;$/;"	m	protocol:KWReporting
subject	Example/Pods/Kiwi/Classes/Verifiers/KWExistVerifier.m	/^                                                                                 [KWFormatter formatObject:self.subject]];$/;"	p	interface:KWExistVerifier
subject	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.h	/^@property (nonatomic, strong) id subject;$/;"	p	protocol:KWMatching
subject	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^    self.matcher = (id<KWMatching>)[self.matcherFactory matcherFromInvocation:anInvocation subject:self.subject];$/;"	p	interface:KWMatchVerifier
subject	Example/Pods/Kiwi/Classes/Verifiers/KWVerifying.h	/^@property (nonatomic, strong) id subject;$/;"	p	protocol:KWVerifying
subjectStringRange	Example/Pods/Kiwi/Classes/Matchers/KWRegularExpressionPatternMatcher.m	/^                                                          range:subjectStringRange];$/;"	p	interface:KWRegularExpressionPatternMatcher
subjectValue	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^                                          [KWFormatter formatObject:subjectValue]];$/;"	p	interface:KWHaveValueMatcher
subjectValue	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^        id value = [self subjectValue];$/;"	p	interface:KWHaveValueMatcher
subjectValue	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^    id subjectValue = [self subjectValue];$/;"	p	interface:KWHaveValueMatcher
substring	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.m	/^            self.substring];$/;"	p	interface:KWContainStringMatcher
substring	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.m	/^    return [NSString stringWithFormat:@"contain substring \\"%@\\"", self.substring];$/;"	p	interface:KWContainStringMatcher
substring	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.m	/^    self.substring = substring;$/;"	p	interface:KWContainStringMatcher
substring	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.m	/^@property (nonatomic, copy) NSString *substring;$/;"	p	interface:KWContainStringMatcher
substring	Example/Pods/Kiwi/Classes/Matchers/KWStringContainsMatcher.m	/^    return [NSString stringWithFormat:@"a string with substring '%@'", self.substring];$/;"	p	interface:KWStringContainsMatcher
substring	Example/Pods/Kiwi/Classes/Matchers/KWStringContainsMatcher.m	/^@property (nonatomic, copy) NSString *substring;$/;"	p	interface:KWStringContainsMatcher
substringFromIndex	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^        name = [name stringByAppendingString:[word substringFromIndex:1]];$/;"	p	interface:KWSpec
succeeded	Example/Pods/BuildHeaders/Kiwi/KWMessageTracker.h	/^- (BOOL)succeeded;$/;"	p	interface:KWMessageTracker
succeeded	Example/Pods/Headers/Kiwi/KWMessageTracker.h	/^- (BOOL)succeeded;$/;"	p	interface:KWMessageTracker
succeeded	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.h	/^- (BOOL)succeeded;$/;"	p	interface:KWMessageTracker
succeeded	Example/Pods/Kiwi/Classes/Core/KWMessageTracker.m	/^- (BOOL)succeeded {$/;"	m	implementation:KWMessageTracker
suffix	Example/Pods/Kiwi/Classes/Matchers/KWContainStringMatcher.m	/^    self.substring = suffix;$/;"	p	interface:KWContainStringMatcher
suite	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^@property (nonatomic, weak) KWExampleSuite *suite;$/;"	p	interface:KWExample
suite	Example/Pods/Headers/Kiwi/KWExample.h	/^@property (nonatomic, weak) KWExampleSuite *suite;$/;"	p	interface:KWExample
suite	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^@property (nonatomic, weak) KWExampleSuite *suite;$/;"	p	interface:KWExample
suites	Example/Pods/Kiwi/Classes/Core/KWExampleSuiteBuilder.m	/^@property (nonatomic, strong) NSMutableSet *suites;$/;"	p	interface:KWExampleSuiteBuilder
superclass	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^        currentClass = [currentClass superclass];$/;"	p	interface:KWMock
symbolName	Example/Pods/BuildHeaders/Kiwi/KWLetNode.h	/^@property (nonatomic, copy) NSString *symbolName;$/;"	p	interface:KWLetNode
symbolName	Example/Pods/Headers/Kiwi/KWLetNode.h	/^@property (nonatomic, copy) NSString *symbolName;$/;"	p	interface:KWLetNode
symbolName	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.h	/^@property (nonatomic, copy) NSString *symbolName;$/;"	p	interface:KWLetNode
targetClass	Example/Pods/Kiwi/Classes/Matchers/KWBeKindOfClassMatcher.m	/^    return [self.subject isKindOfClass:self.targetClass];$/;"	p	interface:KWBeKindOfClassMatcher
targetClass	Example/Pods/Kiwi/Classes/Matchers/KWBeKindOfClassMatcher.m	/^@property (nonatomic, assign) Class targetClass;$/;"	p	interface:KWBeKindOfClassMatcher
targetClass	Example/Pods/Kiwi/Classes/Matchers/KWBeMemberOfClassMatcher.m	/^    return [self.subject isMemberOfClass:self.targetClass];$/;"	p	interface:KWBeMemberOfClassMatcher
targetClass	Example/Pods/Kiwi/Classes/Matchers/KWBeMemberOfClassMatcher.m	/^@property (nonatomic, assign) Class targetClass;$/;"	p	interface:KWBeMemberOfClassMatcher
targetClass	Example/Pods/Kiwi/Classes/Matchers/KWBeSubclassOfClassMatcher.m	/^@property (nonatomic, assign) Class targetClass;$/;"	m	interface:KWBeSubclassOfClassMatcher
targetObject	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    id targetObject = [self targetObject];$/;"	p	interface:KWHaveMatcher
tearDown	Example/Pods/BuildHeaders/Kiwi/KWSuiteConfigurationBase.h	/^- (void)tearDown;$/;"	m	interface:KWSuiteConfigurationBase
tearDown	Example/Pods/Headers/Kiwi/KWSuiteConfigurationBase.h	/^- (void)tearDown;$/;"	m	interface:KWSuiteConfigurationBase
tearDown	Example/Pods/Kiwi/Classes/Config/KWAllTestsSuite.m	/^- (void)tearDown {$/;"	m	interface:
tearDown	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.h	/^- (void)tearDown;$/;"	m	interface:KWSuiteConfigurationBase
theBlock	Example/Pods/BuildHeaders/Kiwi/KWBlock.h	/^KWBlock *theBlock(void (^block)(void));$/;"	f	interface:
theBlock	Example/Pods/Headers/Kiwi/KWBlock.h	/^KWBlock *theBlock(void (^block)(void));$/;"	f	interface:
theBlock	Example/Pods/Kiwi/Classes/Core/KWBlock.h	/^KWBlock *theBlock(void (^block)(void));$/;"	f	interface:
theBlock	Example/Pods/Kiwi/Classes/Core/KWBlock.m	/^KWBlock *theBlock(void (^block)(void)) {$/;"	f	implementation:
theDelay	Example/Pods/Kiwi/Classes/Core/KWProbePoller.m	/^        _delayInterval = theDelay;$/;"	p	interface:KWTimeout
theDistance	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^    return absoluteDifference <= theDistance;$/;"	p	interface:KWBeWithinMatcher
thePointerValue	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^#define thePointerValue(expr) [NSValue valueWithPointer:(expr)]$/;"	M	interface:
thePointerValue	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^#define thePointerValue(expr) [NSValue valueWithPointer:(expr)]$/;"	M	interface:
thePointerValue	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^#define thePointerValue(expr) [NSValue valueWithPointer:(expr)]$/;"	M	interface:
theTimeout	Example/Pods/Kiwi/Classes/Core/KWProbePoller.m	/^        _timeoutInterval = theTimeout;$/;"	p	interface:KWTimeout
theValue	Example/Pods/BuildHeaders/Kiwi/KiwiMacros.h	/^    #define theValue(expr) \\$/;"	M	interface:
theValue	Example/Pods/Headers/Kiwi/KiwiMacros.h	/^    #define theValue(expr) \\$/;"	M	interface:
theValue	Example/Pods/Kiwi/Classes/Core/KiwiMacros.h	/^    #define theValue(expr) \\$/;"	M	interface:
timeout	Example/Pods/BuildHeaders/Kiwi/KWAsyncVerifier.h	/^@property (nonatomic, assign) NSTimeInterval timeout;$/;"	p	interface:KWAsyncVerifier
timeout	Example/Pods/Headers/Kiwi/KWAsyncVerifier.h	/^@property (nonatomic, assign) NSTimeInterval timeout;$/;"	p	interface:KWAsyncVerifier
timeout	Example/Pods/Kiwi/Classes/Core/KWProbePoller.m	/^		_timeoutDateStamp = CFAbsoluteTimeGetCurrent() + timeout;$/;"	p	interface:KWTimeout
timeout	Example/Pods/Kiwi/Classes/Verifiers/KWAsyncVerifier.h	/^@property (nonatomic, assign) NSTimeInterval timeout;$/;"	p	interface:KWAsyncVerifier
timeoutDateStamp	Example/Pods/Kiwi/Classes/Core/KWProbePoller.m	/^@property (nonatomic) CFTimeInterval timeoutDateStamp;$/;"	p	interface:KWTimeout
timeoutInterval	Example/Pods/Kiwi/Classes/Core/KWProbePoller.m	/^    KWTimeout *timeout = [[KWTimeout alloc] initWithTimeout:self.timeoutInterval];$/;"	p	interface:KWTimeout
timeoutInterval	Example/Pods/Kiwi/Classes/Core/KWProbePoller.m	/^@property (nonatomic, assign) NSTimeInterval timeoutInterval;$/;"	p	interface:KWTimeout
times	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^        returnValueTimes = times;$/;"	p	interface:KWStub
tree	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^    return tree;$/;"	p	interface:KWContextNode
typeString	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^            typeString = @"should not";$/;"	p	interface:KWMatchVerifier
typeString	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^            typeString = @"should";$/;"	p	interface:KWMatchVerifier
typeString	Example/Pods/Kiwi/Classes/Verifiers/KWMatchVerifier.m	/^    NSString *typeString = @"";$/;"	p	interface:KWMatchVerifier
types	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^            return [NSMethodSignature signatureWithObjCTypes:description.types];$/;"	p	interface:KWMock
unlink	Example/Pods/BuildHeaders/Kiwi/KWLetNode.h	/^- (void)unlink;$/;"	p	interface:KWLetNode
unlink	Example/Pods/Headers/Kiwi/KWLetNode.h	/^- (void)unlink;$/;"	p	interface:KWLetNode
unlink	Example/Pods/Kiwi/Classes/Nodes/KWContextNode.m	/^                [letNodeTree unlink];$/;"	p	interface:KWContextNode
unlink	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.h	/^- (void)unlink;$/;"	p	interface:KWLetNode
unlink	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    [self.child unlink];$/;"	p	interface:KWLetNode
unlink	Example/Pods/Kiwi/Classes/Nodes/KWLetNode.m	/^    [self.next unlink];$/;"	p	interface:KWLetNode
unresolvedVerifier	Example/Pods/BuildHeaders/Kiwi/KWExample.h	/^@property (nonatomic, strong) id<KWVerifying> unresolvedVerifier;$/;"	p	interface:KWExample
unresolvedVerifier	Example/Pods/Headers/Kiwi/KWExample.h	/^@property (nonatomic, strong) id<KWVerifying> unresolvedVerifier;$/;"	p	interface:KWExample
unresolvedVerifier	Example/Pods/Kiwi/Classes/Core/KWExample.h	/^@property (nonatomic, strong) id<KWVerifying> unresolvedVerifier;$/;"	p	interface:KWExample
unresolvedVerifier	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^    id<KWVerifying> verifier = currentExample.unresolvedVerifier;$/;"	p	interface:KWNilMatcher
unsignedCharData	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSData *)unsignedCharData;$/;"	p	interface:KWValue
unsignedCharData	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSData *)unsignedCharData;$/;"	p	interface:KWValue
unsignedCharData	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSData *)unsignedCharData;$/;"	p	interface:KWValue
unsignedCharData	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSData *)unsignedCharData {$/;"	m	implementation:KWValue
unsignedCharDescriptionAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)unsignedCharDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
unsignedCharDescriptionAtIndex:	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)unsignedCharDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
unsignedCharDescriptionAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (NSString *)unsignedCharDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
unsignedCharValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (unsigned char)unsignedCharValue;$/;"	p	interface:KWValue
unsignedCharValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (unsigned char)unsignedCharValue;$/;"	p	interface:KWValue
unsignedCharValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (unsigned char)unsignedCharValue;$/;"	p	interface:KWValue
unsignedCharValue	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (unsigned char)unsignedCharValue {$/;"	m	implementation:KWValue
unsignedIntData	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSData *)unsignedIntData;$/;"	p	interface:KWValue
unsignedIntData	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSData *)unsignedIntData;$/;"	p	interface:KWValue
unsignedIntData	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSData *)unsignedIntData;$/;"	p	interface:KWValue
unsignedIntData	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSData *)unsignedIntData {$/;"	m	implementation:KWValue
unsignedIntDescriptionAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)unsignedIntDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
unsignedIntDescriptionAtIndex:	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)unsignedIntDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
unsignedIntDescriptionAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (NSString *)unsignedIntDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
unsignedIntValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (unsigned int)unsignedIntValue;$/;"	p	interface:KWValue
unsignedIntValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (unsigned int)unsignedIntValue;$/;"	p	interface:KWValue
unsignedIntValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (unsigned int)unsignedIntValue;$/;"	p	interface:KWValue
unsignedIntValue	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (unsigned int)unsignedIntValue {$/;"	m	implementation:KWValue
unsignedIntegerData	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSData *)unsignedIntegerData;$/;"	p	interface:KWValue
unsignedIntegerData	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSData *)unsignedIntegerData;$/;"	p	interface:KWValue
unsignedIntegerData	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSData *)unsignedIntegerData;$/;"	p	interface:KWValue
unsignedIntegerData	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSData *)unsignedIntegerData {$/;"	m	implementation:KWValue
unsignedIntegerValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSUInteger)unsignedIntegerValue;$/;"	p	interface:KWValue
unsignedIntegerValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSUInteger)unsignedIntegerValue;$/;"	p	interface:KWValue
unsignedIntegerValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSUInteger)unsignedIntegerValue;$/;"	p	interface:KWValue
unsignedIntegerValue	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSUInteger)unsignedIntegerValue {$/;"	m	implementation:KWValue
unsignedIntegerValue	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    KWCountType countType = [userInfo[CountTypeKey] unsignedIntegerValue];$/;"	p	interface:KWHaveMatcher
unsignedIntegerValue	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    NSUInteger count = [userInfo[CountKey] unsignedIntegerValue];$/;"	p	interface:KWHaveMatcher
unsignedLongData	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSData *)unsignedLongData;$/;"	p	interface:KWValue
unsignedLongData	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSData *)unsignedLongData;$/;"	p	interface:KWValue
unsignedLongData	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSData *)unsignedLongData;$/;"	p	interface:KWValue
unsignedLongData	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSData *)unsignedLongData {$/;"	m	implementation:KWValue
unsignedLongDescriptionAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)unsignedLongDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
unsignedLongDescriptionAtIndex:	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)unsignedLongDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
unsignedLongDescriptionAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (NSString *)unsignedLongDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
unsignedLongLongData	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSData *)unsignedLongLongData;$/;"	p	interface:KWValue
unsignedLongLongData	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSData *)unsignedLongLongData;$/;"	p	interface:KWValue
unsignedLongLongData	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSData *)unsignedLongLongData;$/;"	p	interface:KWValue
unsignedLongLongData	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSData *)unsignedLongLongData {$/;"	m	implementation:KWValue
unsignedLongLongDescriptionAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)unsignedLongLongDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
unsignedLongLongDescriptionAtIndex:	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)unsignedLongLongDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
unsignedLongLongDescriptionAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (NSString *)unsignedLongLongDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
unsignedLongLongValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (unsigned long long)unsignedLongLongValue;$/;"	p	interface:KWValue
unsignedLongLongValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (unsigned long long)unsignedLongLongValue;$/;"	p	interface:KWValue
unsignedLongLongValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (unsigned long long)unsignedLongLongValue;$/;"	p	interface:KWValue
unsignedLongLongValue	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (unsigned long long)unsignedLongLongValue {$/;"	m	implementation:KWValue
unsignedLongLongValue	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^    unsigned long long firstValue = [self.subject unsignedLongLongValue];$/;"	p	interface:KWBeWithinMatcher
unsignedLongLongValue	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^    unsigned long long secondValue = [self.otherValue unsignedLongLongValue];$/;"	p	interface:KWBeWithinMatcher
unsignedLongLongValue	Example/Pods/Kiwi/Classes/Matchers/KWBeWithinMatcher.m	/^    unsigned long long theDistance = [self.distance unsignedLongLongValue];$/;"	p	interface:KWBeWithinMatcher
unsignedLongValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (unsigned long)unsignedLongValue;$/;"	p	interface:KWValue
unsignedLongValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (unsigned long)unsignedLongValue;$/;"	p	interface:KWValue
unsignedLongValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (unsigned long)unsignedLongValue;$/;"	p	interface:KWValue
unsignedLongValue	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (unsigned long)unsignedLongValue {$/;"	m	implementation:KWValue
unsignedShortData	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (NSData *)unsignedShortData;$/;"	p	interface:KWValue
unsignedShortData	Example/Pods/Headers/Kiwi/KWValue.h	/^- (NSData *)unsignedShortData;$/;"	p	interface:KWValue
unsignedShortData	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (NSData *)unsignedShortData;$/;"	p	interface:KWValue
unsignedShortData	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (NSData *)unsignedShortData {$/;"	m	implementation:KWValue
unsignedShortDescriptionAtIndex:	Example/Pods/BuildHeaders/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)unsignedShortDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
unsignedShortDescriptionAtIndex:	Example/Pods/Headers/Kiwi/NSInvocation+OCMAdditions.h	/^- (NSString *)unsignedShortDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
unsignedShortDescriptionAtIndex:	Example/Pods/Kiwi/Classes/Core/NSInvocation+OCMAdditions.h	/^- (NSString *)unsignedShortDescriptionAtIndex:(int)anInt;$/;"	m	interface:NSInvocation
unsignedShortValue	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^- (unsigned short)unsignedShortValue;$/;"	p	interface:KWValue
unsignedShortValue	Example/Pods/Headers/Kiwi/KWValue.h	/^- (unsigned short)unsignedShortValue;$/;"	p	interface:KWValue
unsignedShortValue	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^- (unsigned short)unsignedShortValue;$/;"	p	interface:KWValue
unsignedShortValue	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^- (unsigned short)unsignedShortValue {$/;"	m	implementation:KWValue
upperEndpoint	Example/Pods/Kiwi/Classes/Matchers/KWBeBetweenMatcher.m	/^    NSComparisonResult upperResult = [self.subject compare:self.upperEndpoint];$/;"	p	interface:KWBeBetweenMatcher
upperEndpoint	Example/Pods/Kiwi/Classes/Matchers/KWBeBetweenMatcher.m	/^    return [NSString stringWithFormat:@"be between %@ and %@", self.lowerEndpoint, self.upperEndpoint];$/;"	p	interface:KWBeBetweenMatcher
upperEndpoint	Example/Pods/Kiwi/Classes/Matchers/KWBeBetweenMatcher.m	/^@property (nonatomic, strong) id upperEndpoint;$/;"	p	interface:KWBeBetweenMatcher
uppercaseString	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^        name = [name stringByAppendingString:[[word substringToIndex:1] uppercaseString]];$/;"	p	interface:KWSpec
userDefinedMatchers	Example/Pods/Kiwi/Classes/Core/KWMatchers.m	/^    NSMutableDictionary *userDefinedMatchers;$/;"	F	interface:KWMatchers
userInfo	Example/Pods/BuildHeaders/Kiwi/KWInvocationCapturer.h	/^@property (nonatomic, strong, readonly) NSDictionary *userInfo;$/;"	p	protocol:KWInvocationCapturerDelegate
userInfo	Example/Pods/Headers/Kiwi/KWInvocationCapturer.h	/^@property (nonatomic, strong, readonly) NSDictionary *userInfo;$/;"	p	protocol:KWInvocationCapturerDelegate
userInfo	Example/Pods/Kiwi/Classes/Core/KWInvocationCapturer.h	/^@property (nonatomic, strong, readonly) NSDictionary *userInfo;$/;"	p	protocol:KWInvocationCapturerDelegate
userInfo	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    NSDictionary *userInfo = anInvocationCapturer.userInfo;$/;"	p	interface:KWHaveMatcher
userInfo	Example/Pods/Kiwi/Classes/Matchers/KWHaveMatcher.m	/^    return [KWInvocationCapturer invocationCapturerWithDelegate:[KWHaveMatcher class] userInfo:userInfo];$/;"	p	interface:KWHaveMatcher
userInfo	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^                                            self.didReceiveNotification &= [self.expectedUserInfo isEqualToDictionary:[note userInfo]];$/;"	p	interface:KWNotificationMatcher
userInfo	Example/Pods/Kiwi/Classes/Matchers/KWNotificationMatcher.m	/^    self.expectedUserInfo = userInfo;$/;"	p	interface:KWNotificationMatcher
userInfo	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return [KWInvocationCapturer invocationCapturerWithDelegate:self userInfo:userInfo];$/;"	p	interface:KWMock
userInfoForReceiveMatcherWithCountType:count:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (NSDictionary *)userInfoForReceiveMatcherWithCountType:(KWCountType)aCountType count:(NSUInteger)aCount {$/;"	m	implementation:KWMatchVerifier
userInfoForReceiveMatcherWithCountType:count:value:	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.m	/^- (NSDictionary *)userInfoForReceiveMatcherWithCountType:(KWCountType)aCountType count:(NSUInteger)aCount value:(id)aValue {$/;"	m	implementation:KWMatchVerifier
va_arg	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^        object = va_arg(argumentList, id);$/;"	p	interface:KWContainMatcher
va_end	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^    va_end(argumentList);$/;"	p	interface:KWContainMatcher
va_start	Example/Pods/Kiwi/Classes/Matchers/KWContainMatcher.m	/^    va_start(argumentList, firstObject);$/;"	p	interface:KWContainMatcher
va_start	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    va_start(argumentList, firstArgument);$/;"	p	interface:KWMock
value	Example/Pods/BuildHeaders/Kiwi/KWStub.h	/^@property (nonatomic, readonly) id value;$/;"	p	interface:KWStub
value	Example/Pods/Headers/Kiwi/KWStub.h	/^@property (nonatomic, readonly) id value;$/;"	p	interface:KWStub
value	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^@property (nonatomic, readonly) id value;$/;"	m	interface:KWValue
value	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^                matched = [self.expectedValue isEqualOrMatches:value];$/;"	p	interface:KWHaveValueMatcher
value	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^    return value;$/;"	p	interface:KWHaveValueMatcher
value	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^    self.expectedValue = value;$/;"	p	interface:KWHaveValueMatcher
value	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^            [self stubMessagePattern:messagePattern andReturn:value];$/;"	p	interface:KWMock
value	Example/Pods/Kiwi/Classes/Stubbing/KWStub.h	/^@property (nonatomic, readonly) id value;$/;"	p	interface:KWStub
value	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    return [NSString stringWithFormat:@"messagePattern: %@\\nvalue: %@", self.messagePattern, self.value];$/;"	p	interface:KWStub
value	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^    void *choosedForData = &value;$/;"	p	interface:KWStub
value	Example/Pods/Kiwi/Classes/Stubbing/KWStub.m	/^@synthesize value;$/;"	p	interface:KWStub
valueDescription	Example/Pods/Kiwi/Classes/Matchers/KWHaveValueMatcher.m	/^        valueDescription = @"value";$/;"	p	interface:KWHaveValueMatcher
valueForKeyImplementation	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return valueForKeyImplementation(self, _cmd, key);$/;"	p	interface:KWMock
valueForKeyImplementation	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    return valueForKeyImplementation(self, _cmd, keyPath);$/;"	p	interface:KWMock
valueWithBool:	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^+ (id)valueWithBool:(BOOL)aValue;$/;"	c	interface:KWValue
valueWithBool:	Example/Pods/Headers/Kiwi/KWValue.h	/^+ (id)valueWithBool:(BOOL)aValue;$/;"	c	interface:KWValue
valueWithBool:	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^+ (id)valueWithBool:(BOOL)aValue;$/;"	c	interface:KWValue
valueWithBool:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^+ (id)valueWithBool:(BOOL)aValue {$/;"	c	implementation:KWValue
valueWithBytes:objCType:	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^+ (id)valueWithBytes:(const void *)bytes objCType:(const char *)anObjCType;$/;"	c	interface:KWValue
valueWithBytes:objCType:	Example/Pods/Headers/Kiwi/KWValue.h	/^+ (id)valueWithBytes:(const void *)bytes objCType:(const char *)anObjCType;$/;"	c	interface:KWValue
valueWithBytes:objCType:	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^+ (id)valueWithBytes:(const void *)bytes objCType:(const char *)anObjCType;$/;"	c	interface:KWValue
valueWithBytes:objCType:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^+ (id)valueWithBytes:(const void *)bytes objCType:(const char *)type {$/;"	c	implementation:KWValue
valueWithChar:	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^+ (id)valueWithChar:(char)aValue;$/;"	c	interface:KWValue
valueWithChar:	Example/Pods/Headers/Kiwi/KWValue.h	/^+ (id)valueWithChar:(char)aValue;$/;"	c	interface:KWValue
valueWithChar:	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^+ (id)valueWithChar:(char)aValue;$/;"	c	interface:KWValue
valueWithChar:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^+ (id)valueWithChar:(char)aValue {$/;"	c	implementation:KWValue
valueWithDouble:	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^+ (id)valueWithDouble:(double)aValue;$/;"	c	interface:KWValue
valueWithDouble:	Example/Pods/Headers/Kiwi/KWValue.h	/^+ (id)valueWithDouble:(double)aValue;$/;"	c	interface:KWValue
valueWithDouble:	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^+ (id)valueWithDouble:(double)aValue;$/;"	c	interface:KWValue
valueWithDouble:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^+ (id)valueWithDouble:(double)aValue {$/;"	c	implementation:KWValue
valueWithFloat:	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^+ (id)valueWithFloat:(float)aValue;$/;"	c	interface:KWValue
valueWithFloat:	Example/Pods/Headers/Kiwi/KWValue.h	/^+ (id)valueWithFloat:(float)aValue;$/;"	c	interface:KWValue
valueWithFloat:	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^+ (id)valueWithFloat:(float)aValue;$/;"	c	interface:KWValue
valueWithFloat:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^+ (id)valueWithFloat:(float)aValue {$/;"	c	implementation:KWValue
valueWithInt:	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^+ (id)valueWithInt:(int)aValue;$/;"	c	interface:KWValue
valueWithInt:	Example/Pods/Headers/Kiwi/KWValue.h	/^+ (id)valueWithInt:(int)aValue;$/;"	c	interface:KWValue
valueWithInt:	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^+ (id)valueWithInt:(int)aValue;$/;"	c	interface:KWValue
valueWithInt:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^+ (id)valueWithInt:(int)aValue {$/;"	c	implementation:KWValue
valueWithInteger:	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^+ (id)valueWithInteger:(NSInteger)aValue;$/;"	c	interface:KWValue
valueWithInteger:	Example/Pods/Headers/Kiwi/KWValue.h	/^+ (id)valueWithInteger:(NSInteger)aValue;$/;"	c	interface:KWValue
valueWithInteger:	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^+ (id)valueWithInteger:(NSInteger)aValue;$/;"	c	interface:KWValue
valueWithInteger:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^+ (id)valueWithInteger:(NSInteger)aValue {$/;"	c	implementation:KWValue
valueWithLong:	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^+ (id)valueWithLong:(long)aValue;$/;"	c	interface:KWValue
valueWithLong:	Example/Pods/Headers/Kiwi/KWValue.h	/^+ (id)valueWithLong:(long)aValue;$/;"	c	interface:KWValue
valueWithLong:	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^+ (id)valueWithLong:(long)aValue;$/;"	c	interface:KWValue
valueWithLong:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^+ (id)valueWithLong:(long)aValue {$/;"	c	implementation:KWValue
valueWithLongLong:	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^+ (id)valueWithLongLong:(long long)value;$/;"	c	interface:KWValue
valueWithLongLong:	Example/Pods/Headers/Kiwi/KWValue.h	/^+ (id)valueWithLongLong:(long long)value;$/;"	c	interface:KWValue
valueWithLongLong:	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^+ (id)valueWithLongLong:(long long)value;$/;"	c	interface:KWValue
valueWithLongLong:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^+ (id)valueWithLongLong:(long long)value {$/;"	c	implementation:KWValue
valueWithShort:	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^+ (id)valueWithShort:(short)aValue;$/;"	c	interface:KWValue
valueWithShort:	Example/Pods/Headers/Kiwi/KWValue.h	/^+ (id)valueWithShort:(short)aValue;$/;"	c	interface:KWValue
valueWithShort:	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^+ (id)valueWithShort:(short)aValue;$/;"	c	interface:KWValue
valueWithShort:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^+ (id)valueWithShort:(short)aValue {$/;"	c	implementation:KWValue
valueWithUnsignedChar:	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^+ (id)valueWithUnsignedChar:(unsigned char)aValue;$/;"	c	interface:KWValue
valueWithUnsignedChar:	Example/Pods/Headers/Kiwi/KWValue.h	/^+ (id)valueWithUnsignedChar:(unsigned char)aValue;$/;"	c	interface:KWValue
valueWithUnsignedChar:	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^+ (id)valueWithUnsignedChar:(unsigned char)aValue;$/;"	c	interface:KWValue
valueWithUnsignedChar:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^+ (id)valueWithUnsignedChar:(unsigned char)aValue {$/;"	c	implementation:KWValue
valueWithUnsignedInt:	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^+ (id)valueWithUnsignedInt:(unsigned int)aValue;$/;"	c	interface:KWValue
valueWithUnsignedInt:	Example/Pods/Headers/Kiwi/KWValue.h	/^+ (id)valueWithUnsignedInt:(unsigned int)aValue;$/;"	c	interface:KWValue
valueWithUnsignedInt:	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^+ (id)valueWithUnsignedInt:(unsigned int)aValue;$/;"	c	interface:KWValue
valueWithUnsignedInt:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^+ (id)valueWithUnsignedInt:(unsigned int)aValue {$/;"	c	implementation:KWValue
valueWithUnsignedInteger:	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^+ (id)valueWithUnsignedInteger:(NSUInteger)aValue;$/;"	c	interface:KWValue
valueWithUnsignedInteger:	Example/Pods/Headers/Kiwi/KWValue.h	/^+ (id)valueWithUnsignedInteger:(NSUInteger)aValue;$/;"	c	interface:KWValue
valueWithUnsignedInteger:	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^+ (id)valueWithUnsignedInteger:(NSUInteger)aValue;$/;"	c	interface:KWValue
valueWithUnsignedInteger:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^+ (id)valueWithUnsignedInteger:(NSUInteger)aValue {$/;"	c	implementation:KWValue
valueWithUnsignedLong:	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^+ (id)valueWithUnsignedLong:(unsigned long)aValue;$/;"	c	interface:KWValue
valueWithUnsignedLong:	Example/Pods/Headers/Kiwi/KWValue.h	/^+ (id)valueWithUnsignedLong:(unsigned long)aValue;$/;"	c	interface:KWValue
valueWithUnsignedLong:	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^+ (id)valueWithUnsignedLong:(unsigned long)aValue;$/;"	c	interface:KWValue
valueWithUnsignedLong:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^+ (id)valueWithUnsignedLong:(unsigned long)aValue {$/;"	c	implementation:KWValue
valueWithUnsignedLongLong:	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^+ (id)valueWithUnsignedLongLong:(unsigned long long)aValue;$/;"	c	interface:KWValue
valueWithUnsignedLongLong:	Example/Pods/Headers/Kiwi/KWValue.h	/^+ (id)valueWithUnsignedLongLong:(unsigned long long)aValue;$/;"	c	interface:KWValue
valueWithUnsignedLongLong:	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^+ (id)valueWithUnsignedLongLong:(unsigned long long)aValue;$/;"	c	interface:KWValue
valueWithUnsignedLongLong:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^+ (id)valueWithUnsignedLongLong:(unsigned long long)aValue {$/;"	c	implementation:KWValue
valueWithUnsignedShort:	Example/Pods/BuildHeaders/Kiwi/KWValue.h	/^+ (id)valueWithUnsignedShort:(unsigned short)aValue;$/;"	c	interface:KWValue
valueWithUnsignedShort:	Example/Pods/Headers/Kiwi/KWValue.h	/^+ (id)valueWithUnsignedShort:(unsigned short)aValue;$/;"	c	interface:KWValue
valueWithUnsignedShort:	Example/Pods/Kiwi/Classes/Core/KWValue.h	/^+ (id)valueWithUnsignedShort:(unsigned short)aValue;$/;"	c	interface:KWValue
valueWithUnsignedShort:	Example/Pods/Kiwi/Classes/Core/KWValue.m	/^+ (id)valueWithUnsignedShort:(unsigned short)aValue {$/;"	c	implementation:KWValue
verificationSelectorString	Example/Pods/Kiwi/Classes/Core/KWMatcherFactory.m	/^        NSMutableArray *matcherClassChain = self.matcherClassChains[verificationSelectorString];$/;"	p	interface:KWMatcherFactory
verifier	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    [self addVerifier:verifier];$/;"	p	interface:KWExample
verifier	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    return verifier;$/;"	p	interface:KWExample
verifier	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    self.unresolvedVerifier = verifier;$/;"	p	interface:KWExample
verifier	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^  [self addVerifier:verifier];$/;"	p	interface:KWExample
verifier	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^  return verifier;$/;"	p	interface:KWExample
verifier	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.m	/^        KWMatchVerifier *matchVerifier = (KWMatchVerifier *)verifier;$/;"	p	interface:KWNilMatcher
verifiers	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^@property (nonatomic, readonly) NSMutableArray *verifiers;$/;"	p	interface:KWExample
verifyNilSubject	Example/Pods/BuildHeaders/Kiwi/KWNilMatcher.h	/^+ (BOOL)verifyNilSubject;$/;"	c	interface:KWNilMatcher
verifyNilSubject	Example/Pods/Headers/Kiwi/KWNilMatcher.h	/^+ (BOOL)verifyNilSubject;$/;"	c	interface:KWNilMatcher
verifyNilSubject	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.h	/^+ (BOOL)verifyNilSubject;$/;"	c	interface:KWNilMatcher
verifyNonNilSubject	Example/Pods/BuildHeaders/Kiwi/KWNilMatcher.h	/^+ (BOOL)verifyNonNilSubject;$/;"	c	interface:KWNilMatcher
verifyNonNilSubject	Example/Pods/Headers/Kiwi/KWNilMatcher.h	/^+ (BOOL)verifyNonNilSubject;$/;"	c	interface:KWNilMatcher
verifyNonNilSubject	Example/Pods/Kiwi/Classes/Matchers/KWNilMatcher.h	/^+ (BOOL)verifyNonNilSubject;$/;"	c	interface:KWNilMatcher
verifyWithMatcher:	Example/Pods/Kiwi/Classes/Verifiers/KWAsyncVerifier.m	/^- (void)verifyWithMatcher:(id<KWMatching>)aMatcher {$/;"	m	implementation:KWAsyncVerifier
verifyWithProbe:	Example/Pods/Kiwi/Classes/Verifiers/KWAsyncVerifier.m	/^- (void)verifyWithProbe:(KWAsyncMatcherProbe *)aProbe {$/;"	m	implementation:KWAsyncVerifier
viewDidLoad	Example/Clappr/CLPViewController.m	/^{$/;"	m	implementation:CLPViewController
visitAfterAllNode:	Example/Pods/BuildHeaders/Kiwi/KWExampleNodeVisitor.h	/^- (void)visitAfterAllNode:(KWAfterAllNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitAfterAllNode:	Example/Pods/Headers/Kiwi/KWExampleNodeVisitor.h	/^- (void)visitAfterAllNode:(KWAfterAllNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitAfterAllNode:	Example/Pods/Kiwi/Classes/Core/KWExampleNodeVisitor.h	/^- (void)visitAfterAllNode:(KWAfterAllNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitAfterEachNode:	Example/Pods/BuildHeaders/Kiwi/KWExampleNodeVisitor.h	/^- (void)visitAfterEachNode:(KWAfterEachNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitAfterEachNode:	Example/Pods/Headers/Kiwi/KWExampleNodeVisitor.h	/^- (void)visitAfterEachNode:(KWAfterEachNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitAfterEachNode:	Example/Pods/Kiwi/Classes/Core/KWExampleNodeVisitor.h	/^- (void)visitAfterEachNode:(KWAfterEachNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitBeforeAllNode:	Example/Pods/BuildHeaders/Kiwi/KWExampleNodeVisitor.h	/^- (void)visitBeforeAllNode:(KWBeforeAllNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitBeforeAllNode:	Example/Pods/Headers/Kiwi/KWExampleNodeVisitor.h	/^- (void)visitBeforeAllNode:(KWBeforeAllNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitBeforeAllNode:	Example/Pods/Kiwi/Classes/Core/KWExampleNodeVisitor.h	/^- (void)visitBeforeAllNode:(KWBeforeAllNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitBeforeEachNode:	Example/Pods/BuildHeaders/Kiwi/KWExampleNodeVisitor.h	/^- (void)visitBeforeEachNode:(KWBeforeEachNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitBeforeEachNode:	Example/Pods/Headers/Kiwi/KWExampleNodeVisitor.h	/^- (void)visitBeforeEachNode:(KWBeforeEachNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitBeforeEachNode:	Example/Pods/Kiwi/Classes/Core/KWExampleNodeVisitor.h	/^- (void)visitBeforeEachNode:(KWBeforeEachNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitContextNode:	Example/Pods/BuildHeaders/Kiwi/KWExampleNodeVisitor.h	/^- (void)visitContextNode:(KWContextNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitContextNode:	Example/Pods/Headers/Kiwi/KWExampleNodeVisitor.h	/^- (void)visitContextNode:(KWContextNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitContextNode:	Example/Pods/Kiwi/Classes/Core/KWExampleNodeVisitor.h	/^- (void)visitContextNode:(KWContextNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitItNode:	Example/Pods/BuildHeaders/Kiwi/KWExampleNodeVisitor.h	/^- (void)visitItNode:(KWItNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitItNode:	Example/Pods/Headers/Kiwi/KWExampleNodeVisitor.h	/^- (void)visitItNode:(KWItNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitItNode:	Example/Pods/Kiwi/Classes/Core/KWExampleNodeVisitor.h	/^- (void)visitItNode:(KWItNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitLetNode:	Example/Pods/BuildHeaders/Kiwi/KWExampleNodeVisitor.h	/^- (void)visitLetNode:(KWLetNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitLetNode:	Example/Pods/Headers/Kiwi/KWExampleNodeVisitor.h	/^- (void)visitLetNode:(KWLetNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitLetNode:	Example/Pods/Kiwi/Classes/Core/KWExampleNodeVisitor.h	/^- (void)visitLetNode:(KWLetNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitPendingNode:	Example/Pods/BuildHeaders/Kiwi/KWExampleNodeVisitor.h	/^- (void)visitPendingNode:(KWPendingNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitPendingNode:	Example/Pods/Headers/Kiwi/KWExampleNodeVisitor.h	/^- (void)visitPendingNode:(KWPendingNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitPendingNode:	Example/Pods/Kiwi/Classes/Core/KWExampleNodeVisitor.h	/^- (void)visitPendingNode:(KWPendingNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitRegisterMatchersNode:	Example/Pods/BuildHeaders/Kiwi/KWExampleNodeVisitor.h	/^- (void)visitRegisterMatchersNode:(KWRegisterMatchersNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitRegisterMatchersNode:	Example/Pods/Headers/Kiwi/KWExampleNodeVisitor.h	/^- (void)visitRegisterMatchersNode:(KWRegisterMatchersNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
visitRegisterMatchersNode:	Example/Pods/Kiwi/Classes/Core/KWExampleNodeVisitor.h	/^- (void)visitRegisterMatchersNode:(KWRegisterMatchersNode *)aNode;$/;"	m	protocol:KWExampleNodeVisitor
void	Example/Pods/BuildHeaders/Kiwi/KWBlockNode.h	/^@property (nonatomic, copy, readonly) void (^block)(void);$/;"	m	interface:KWBlockNode
void	Example/Pods/BuildHeaders/Kiwi/KWFutureObject.h	/^typedef id (^KWFutureObjectBlock)(void);$/;"	t	interface:
void	Example/Pods/BuildHeaders/Kiwi/KWSuiteConfigurationBase.h	/^@property (nonatomic, copy) void (^afterAllSpecsBlock)(void);$/;"	p	interface:KWSuiteConfigurationBase
void	Example/Pods/BuildHeaders/Kiwi/KWSuiteConfigurationBase.h	/^@property (nonatomic, copy) void (^beforeAllSpecsBlock)(void);$/;"	p	interface:KWSuiteConfigurationBase
void	Example/Pods/Headers/Kiwi/KWBlockNode.h	/^@property (nonatomic, copy, readonly) void (^block)(void);$/;"	m	interface:KWBlockNode
void	Example/Pods/Headers/Kiwi/KWFutureObject.h	/^typedef id (^KWFutureObjectBlock)(void);$/;"	t	interface:
void	Example/Pods/Headers/Kiwi/KWSuiteConfigurationBase.h	/^@property (nonatomic, copy) void (^afterAllSpecsBlock)(void);$/;"	p	interface:KWSuiteConfigurationBase
void	Example/Pods/Headers/Kiwi/KWSuiteConfigurationBase.h	/^@property (nonatomic, copy) void (^beforeAllSpecsBlock)(void);$/;"	p	interface:KWSuiteConfigurationBase
void	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.h	/^@property (nonatomic, copy) void (^afterAllSpecsBlock)(void);$/;"	p	interface:KWSuiteConfigurationBase
void	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.h	/^@property (nonatomic, copy) void (^beforeAllSpecsBlock)(void);$/;"	p	interface:KWSuiteConfigurationBase
void	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^@property (nonatomic, copy) void (^afterEachSpecBlock)(void);$/;"	p	interface:KWSuiteConfigurationBase
void	Example/Pods/Kiwi/Classes/Config/KWSuiteConfigurationBase.m	/^@property (nonatomic, copy) void (^beforeEachSpecBlock)(void);$/;"	p	interface:KWSuiteConfigurationBase
void	Example/Pods/Kiwi/Classes/Core/KWBlock.m	/^@property (nonatomic, readonly, copy) void (^block)(void);$/;"	m	interface:KWBlock
void	Example/Pods/Kiwi/Classes/Core/KWFutureObject.h	/^typedef id (^KWFutureObjectBlock)(void);$/;"	t	interface:
void	Example/Pods/Kiwi/Classes/Nodes/KWBlockNode.h	/^@property (nonatomic, copy, readonly) void (^block)(void);$/;"	m	interface:KWBlockNode
void	Example/Pods/Kiwi/Classes/Stubbing/KWIntercept.m	/^typedef id (^KWInterceptedObjectBlock)(void);$/;"	t	interface:
wait	Example/Pods/Kiwi/Classes/Core/KWProbePoller.m	/^        _shouldWait = wait;$/;"	p	interface:KWTimeout
waitUntilExit	Example/Pods/Kiwi/Classes/Core/KWSymbolicator.m	/^- (void)waitUntilExit;$/;"	m	protocol:NSTask_KWWarningSuppressor
while	Example/Pods/Kiwi/Classes/Mocking/KWMock.m	/^    } while ([protocolQueue count] != 0);$/;"	p	interface:KWMock
willEvaluateAgainstNegativeExpectation	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^@property (nonatomic, assign) BOOL willEvaluateAgainstNegativeExpectation;$/;"	p	interface:KWReceiveMatcher
willEvaluateAgainstNegativeExpectation	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^@property (nonatomic, assign) BOOL willEvaluateAgainstNegativeExpectation;$/;"	p	interface:KWReceiveMatcher
willEvaluateAgainstNegativeExpectation	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^@property (nonatomic, assign) BOOL willEvaluateAgainstNegativeExpectation;$/;"	p	interface:KWReceiveMatcher
willEvaluateMultipleTimes	Example/Pods/BuildHeaders/Kiwi/KWMatching.h	/^- (BOOL)willEvaluateMultipleTimes;$/;"	m	protocol:KWMatching
willEvaluateMultipleTimes	Example/Pods/BuildHeaders/Kiwi/KWReceiveMatcher.h	/^@property (nonatomic, assign) BOOL willEvaluateMultipleTimes;$/;"	p	interface:KWReceiveMatcher
willEvaluateMultipleTimes	Example/Pods/Headers/Kiwi/KWMatching.h	/^- (BOOL)willEvaluateMultipleTimes;$/;"	m	protocol:KWMatching
willEvaluateMultipleTimes	Example/Pods/Headers/Kiwi/KWReceiveMatcher.h	/^@property (nonatomic, assign) BOOL willEvaluateMultipleTimes;$/;"	p	interface:KWReceiveMatcher
willEvaluateMultipleTimes	Example/Pods/Kiwi/Classes/Core/KWMatching.h	/^- (BOOL)willEvaluateMultipleTimes;$/;"	m	protocol:KWMatching
willEvaluateMultipleTimes	Example/Pods/Kiwi/Classes/Matchers/KWReceiveMatcher.h	/^@property (nonatomic, assign) BOOL willEvaluateMultipleTimes;$/;"	p	interface:KWReceiveMatcher
window	Example/Clappr/CLPAppDelegate.h	/^@property (strong, nonatomic) UIWindow *window;$/;"	p	interface:CLPAppDelegate
withString	Example/Pods/Kiwi/Classes/Core/KWExample.m	/^    annotatedFailureMessage = [annotatedFailureMessage stringByReplacingOccurrencesOfString:@":" withString:@"\\uff1a"];$/;"	p	interface:KWExample
withString	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^    name = [name stringByReplacingOccurrencesOfString:@"," withString:@"_"];$/;"	p	interface:KWSpec
withTemplate	Example/Pods/Kiwi/Classes/Core/KWSpec.m	/^    name = [regex stringByReplacingMatchesInString:name options:0 range:NSMakeRange(0, name.length) withTemplate:@""];$/;"	p	interface:KWSpec
